{"version":3,"sources":["routes/css/Home.module.css","routes/JeanLogin/jeanStyle.module.css","components/css/menu-bar.module.css","components/css/main-menu-content-sector.module.css","components/css/userInfo_pwForm.module.css","image/logo.JPG","components/menu-bar.js","components/sidemenu-bar.js","components/MAINMENU_CONTENT/doughnut-order-complete.js","components/MAINMENU_CONTENT/bar-expense.js","components/MAINMENU_CONTENT/miniNoticeTable.js","components/MAINMENU_CONTENT/miniStockTable.js","components/MAINMENU_CONTENT/adsTest.JPG","components/main-menu-content-sector.js","routes/Home.js","image/jeanLogo.JPG","routes/JeanLogin/JeanLogin.js","routes/JeanLogin/JeanJoin.js","routes/JeanLogin/JeanForgetPw.js","routes/JeanLogin/JeanForgetId.js","components/ORDER_LIST/Tables.js","components/ORDER_LIST/ProductTables.js","components/ORDER_LIST/paginationNoHook.js","components/ORDER_LIST/tableRender.js","components/ORDER_MANAGEMENT/order-result.js","routes/OrderResult.js","components/STOCK_MANAGEMENT/stock-management.js","routes/ManageStock.js","components/STOCK_LIST/Tables.js","components/STOCK_LIST/editRow.js","components/STOCK_LIST/paginationNoHook.js","components/STOCK_LIST/tableRender.js","components/STOCK_MANAGEMENT/edit-stock.js","routes/EditStock.js","components/RETAILER_LIST_READONLY/Tables.js","components/RETAILER_LIST_READONLY/paginationNoHook.js","components/RETAILER_LIST_READONLY/tableRender.js","components/ORDER_MANAGEMENT/order-request.js","routes/OrderRequest.js","components/ORDER_MANAGEMENT/readRetailerDetail.js","components/PRODUCT_LIST_READONLY/Tables.js","components/PRODUCT_LIST_READONLY/editRow.js","components/PRODUCT_LIST_READONLY/paginationNoHook.js","components/PRODUCT_LIST_READONLY/tableRender.js","components/ORDER_MANAGEMENT/productDetail.js","components/ORDER_MANAGEMENT/retailer_details.js","routes/OrderRequestProduct.js","components/BASKET_LIST/Tables.js","components/BASKET_LIST/paginationNoHook.js","components/BASKET_LIST/editRow.js","components/BASKET_LIST/tableRender.js","components/ORDER_MANAGEMENT/productBasket.js","routes/OrderRequestBasket.js","components/RETAILER_MANAGEMENT/retailer_add.js","routes/AddRetailer.js","components/RETAILER_LIST/Tables.js","components/RETAILER_LIST/editRow.js","components/RETAILER_LIST/paginationNoHook.js","components/RETAILER_LIST/tableRender.js","components/RETAILER_MANAGEMENT/retailerList_read.js","routes/RetailerList.js","components/RETAILER_MANAGEMENT/readRetailerDetail.js","components/RETAILER_MANAGEMENT/editRetailerDetail.js","components/RETAILER_MANAGEMENT/addProduct.js","components/PRODUCT_LIST/Tables.js","components/PRODUCT_LIST/editRow.js","components/PRODUCT_LIST/paginationNoHook.js","components/PRODUCT_LIST/tableRender.js","components/RETAILER_MANAGEMENT/productDetail.js","components/RETAILER_MANAGEMENT/retailer_details.js","routes/RetailerDetails.js","components/USER_INFO/readUserInfo.js","components/USER_INFO/editUserInfo.js","components/USER_INFO/showEditUserInfo.js","routes/UserInfo.js","components/USER_INFO/deleteUserInfo.js","routes/DeleteUser.js","components/USER_INFO/changePwd.js","routes/ChangePwd.js","components/QNA/paginationForQna.js","components/QNA/QnaTables.js","components/QNA/qnaList.js","routes/CustomerCenter.js","components/QNA/qna_read.js","components/QNA/qna_edit.js","components/QNA/qna_Details.js","routes/QnaDetails.js","components/QNA/notice_read.js","components/QNA/notice_Details.js","routes/NoticeDetail.js","components/QNA/qna_write.js","routes/QnaWrite.js","TablePaginationTest/Tables.js","TablePaginationTest/editRow.js","TablePaginationTest/paginationNoHook.js","TablePaginationTest/tableRender.js","components/QNA/paginationForNotice.js","components/QNA/NoticeTables.js","components/QNA/noticeList.js","routes/NoticeList.js","ChartTest/chartRender.js","image/login.jpg","routes/AdminLogin.js","components/admin-menu-bar.js","components/ADMIN_NOTICE/paginationForNotice.js","components/ADMIN_NOTICE/NoticeTables.js","components/ADMIN_NOTICE/notice_add.js","components/ADMIN_NOTICE/noticeList.js","routes/AdminNotice.js","components/ADMIN_NOTICE/notice_read.js","components/ADMIN_NOTICE/notice_edit.js","components/ADMIN_NOTICE/notice_Details.js","routes/AdminNoticeDetail.js","components/ADMIN_INQUIRY/paginationForQna.js","components/ADMIN_INQUIRY/QnaTables.js","components/ADMIN_INQUIRY/qnaList.js","routes/AdminInquiry.js","components/ADMIN_INQUIRY/qna_read.js","components/ADMIN_INQUIRY/qna_ans_edit.js","components/ADMIN_INQUIRY/qna_ans_write.js","components/ADMIN_INQUIRY/qna_Details.js","routes/AdminInquiryDetail.js","App.js","index.js","components/css/mainMenu-content.module.css","components/css/search-item.module.css","components/css/search-order.module.css","routes/css/Login.module.css","components/css/sidemenu-bar.module.css","components/css/result-table.module.css","components/css/userInfo.module.css","components/css/qnaReadEdit.module.css","components/css/screen-content.module.css"],"names":["module","exports","userID","localStorage","getItem","MenuBar","className","styles","menuBar","menuBar__column","to","src","logo","menuBar__logo","alt","menuBar__nav","menuBar__list","menuBar__btn","menuBar__profile","icon","faUserCircle","size","faSignOutAlt","onClick","setItem","SideMenuBar","sideMenu","screenPage__sidemenu","screenPage__sidemenu_blue","screenPage__sidemenu_attr","name","faChevronDown","elementsObj","map","sideMenuElement","link","screenPage__sidemenu_white","id","DoughnutOrderComplete","orderData","doughnutData","labels","datasets","data","backgroundColor","borderWidth","miniMenu_box","miniMenu_title","chart_setting","options","legend","position","layout","padding","responsive","maintainAspectRatio","defaultFontSize","ChartSpending","spendingData","newData","dataLength","length","bgColor","i","push","chartData","display","MiniNotice","miniNotice","tableStyles","miniTable","miniTable_header","table","miniTable_item","noticeTitle","noticeDate","slice","noticeId","MiniStock","miniStock","productName","retailerName","productCnt","productUnit","productId","MainMenuContentSector","useState","loading","setLoading","mainData","setMainData","useEffect","userData","userId","axios","post","then","response","stock","notice","screenPage__content","screenPage__sector_mainColumn","screenPage__sector_row","screenPage__sector_column","screenPage__sectorBox_square","screenPage__sectorBox_attr","spendings","orderCompletes","stocks","notices","screenPage__sectorBox_tall","screenPage__sectorBox_ads","adImg","Home","screenPage","USER_ID","JeanLogin","resetLoginData","userPwd","newLoginData","setUserId","userPw","setUserPw","jeanStyles","jeanBody","logo_Img","join_form","onSubmit","event","preventDefault","console","log","alert","window","location","href","int_area","type","onChange","target","value","required","for","btn_area","caption","JeanJoin","newAccountData","userEmail","userBusinessNo","userAddress","userName","userPhoneNo","resetAccountData","userPwRe","setUserPwRe","pwValid","setPwValid","businessNo","setBusinessNo","email","setEmail","setName","address","setAddress","phoneNum","setPhoneNum","ApiCall","a","login_form","JeanForgetPw","newSearchData","resetSearchData","setId","JeanForgetId","Tables","orderId","orderDate","orderProducts","onOrderDetailClick","orderTotal","orderComplete","orderCanceled","index","orderStatus","screenPage__searchResultTable_items","toFixed","ProductTables","orderProductId","handleCancelClick","handleCompleteClick","orderStatusKor","disabled","faTimes","faCheck","Pagination","tablePerPage","totalTables","paginate","pageNumbers","Math","ceil","pagination","number","pagination__pages","OrderList","baseURL","currentPage","setCurrentPage","menuPage","setMenuPage","setTable","orderDetail","setOrderDetail","productList","setProductList","setOrderId","indexOfLastTable","indexOfFirstTable","tables","productLists","pageNumber","put","newOrderForm","idx","screenPage__searchResultTable","screenPage__searchResultTable_header","testTable__tbody","product","buttonStyles","userInfoList__saveChange","SearchForItem","contentStyles","screenPage__content_box","screenPage__searchItem","screenPage__nextButton","screenPage__searchResult","screenPage_title","OrderResult","StockManagement","newStockData","stockName","stockCnt","stockUnit","resetStockData","setProductName","setStockCount","setProductUnit","screenPage__searchBox","screenPage__section_column","screenPage__searchList","screenPage__section_row","screenPage__searchOption","manageStock","stockId","handleEditClick","handleDeleteClick","rowData","faHammer","EditRow","editFormData","handleEditFormChange","placeholder","StockListTable","rowId","setRowId","formValues","setEditFormData","fieldName","getAttribute","fieldValue","newFormData","deleteForm","newTable","findIndex","row","splice","editedForm","EditForStock","EditStock","retailerId","retailerPhoneNo","retailerEmail","retailerDetail","RetailerListTable","RequestForOrder","OrderRequest","ReadUserInfo","userInfoBox","userInfoList","userInfoList__title","userInfoList__readonly","productPrice","productDetail","onProductDetailClick","productDetailData","faShoppingBag","orderFormData","min","useParams","ProductListTable","setOrderFormData","sendForm","ProductDetail","handleBackToProducts","userInfoBox__grey","userInfo_row","userInfoList__item","Detail","retailerDetails","setRetailerDetails","setProductDetailData","showProductDetail","setShowProductDetail","identification","tableTitle","OrderRequestProduct","cartProductId","BasketTable","delete","BasketDetail","orderForm","onOrderClick","OrderRequestBasket","RetailerAdd","newRetailerData","resetRetailerData","setRetailerName","retailerPhone","setRetailerPhone","setRetailerEmail","retailerMemo","setRetailerMemo","AddRetailer","RetailerListRead","RetailerList","EditRetailerDetail","onRetailerDetailCancelClick","handleRetailerFormChange","onRetailerFormSubmit","newRetailerDetails","AddProduct","handleProductFormChange","onAddProductCancelClick","onProductFormSubmit","TEST_PRODUCT_DATA","emptyRetailerDetails","emptyProductForm","parseInt","setNewRetailerDetails","retailerDetailEdit","setRetailerDetailEdit","addProductToggle","setAddProductToggle","newProduct","setNewProduct","RetailerDetails","repeat","EditUserInfo","onSaveClick","onCancelClick","ShowEditUserInfo","emptyUserData","setUserData","newUserData","setNewUserData","editData","setEditData","UserInfo","DeleteUserInfo","pwd","setPwd","pwdAgain","setPwdAgain","lastConfirm","setLastConfirm","pwStyles","userInfoBox__row","userInfoBox__title","alertMessage","button","UserDelete","ChangeUserPwd","newPwd","setNewPwd","newPwdAgain","setNewPwdAgain","oldPwd","setOldPwd","changeNewPwd","ChangePwd","QnaTables","inquiryId","inquiryTitle","inquiryDate","inquiryAnswer","inquiryAnsDate","QnaList","qnaTable","setQnaTable","qnaPage","qna","CustomerCenter","QnaRead","inquiryContent","qnaBox","qnaBox__row","qnaTitle","qnaBox__row_title","qnaContent","QnaEdit","onFormSubmit","qnaEditButton","qnaDetails","setQnaDetails","qnaEdit","setQnaEdit","QnaDetails","noticeContent","noticeEditDate","noticeDetails","setNoticeDetails","get","NoticeDetails","QnaWrite","emptyQna","newQna","setNewQna","QnaStyles","first_name","last_name","birth","age","country","phone","dAteofbirth","phine","PaginationTableRender","MOCK_DATA","NoticeList","noticeTable","setNoticeTable","NoticeTables","DoughnutChart","Login","backgroundImg","bgImg","loginBox","login__logo","loginBox__loginForm","loginBox__IDPW","loginBox__loginOption","loginBox__loginOption_auto","loginBox__lostIDPW","NoticeAdd","onSubmitEditForm","noticeAdd","setNoticeAdd","setNewFormData","newNoticeData","Notice","noticeEdit","setNoticeEdit","editTitle","Inquiry","onFormEditSubmit","qnaWrite","setQnaWrite","App","sideMenuObj","topName","sideMenuElements","homeMenuObj","orderMenuObj","stockMenuObj","userMenuObj","customerCenterObj","adminObj","path","NoticeDetail","ManageStock","AdminNoticeDetail","AdminNotice","AdminInquiryDetail","AdminInquiry","AdminLogin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46428c2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage\":\"Home_screenPage__1L_Dy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo_Img\":\"jeanStyle_logo_Img__1__v4\",\"jeanBody\":\"jeanStyle_jeanBody__2ThwB\",\"login_form\":\"jeanStyle_login_form__2W91J\",\"join_form\":\"jeanStyle_join_form__eC7Rf\",\"int_area\":\"jeanStyle_int_area__2i0dU\",\"pwch\":\"jeanStyle_pwch__2cgnM\",\"btn_area\":\"jeanStyle_btn_area__2I0Am\",\"caption\":\"jeanStyle_caption__1VwcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBar\":\"menu-bar_menuBar__1DLTI\",\"menuBar__column\":\"menu-bar_menuBar__column__2x6Me\",\"menuBar__logo\":\"menu-bar_menuBar__logo__3QRMV\",\"menuBar__list\":\"menu-bar_menuBar__list__2I6KB\",\"menuBar__btn\":\"menu-bar_menuBar__btn__2AEWt\",\"menuBar__profile\":\"menu-bar_menuBar__profile__3eECj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__content\":\"main-menu-content-sector_screenPage__content__1T8RG\",\"screenPage__sector_mainColumn\":\"main-menu-content-sector_screenPage__sector_mainColumn__17NEh\",\"screenPage__sectorBox_attr\":\"main-menu-content-sector_screenPage__sectorBox_attr__26sn0\",\"screenPage__sectorBox_ads\":\"main-menu-content-sector_screenPage__sectorBox_ads__1AGk_\",\"screenPage__sector_row\":\"main-menu-content-sector_screenPage__sector_row__ZSDXn\",\"screenPage__sector_column\":\"main-menu-content-sector_screenPage__sector_column__N_2oc\",\"screenPage__sectorBox_wide\":\"main-menu-content-sector_screenPage__sectorBox_wide__HA82-\",\"screenPage__sectorBox_tall\":\"main-menu-content-sector_screenPage__sectorBox_tall__btlyx\",\"screenPage__sectorBox_square\":\"main-menu-content-sector_screenPage__sectorBox_square__1Eq5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoBox\":\"userInfo_pwForm_userInfoBox__3vaLL\",\"userInfoBox__row\":\"userInfo_pwForm_userInfoBox__row__2WW7p\",\"userInfoBox__title\":\"userInfo_pwForm_userInfoBox__title__RyMkY\",\"alertMessage\":\"userInfo_pwForm_alertMessage__Kpov_\",\"button\":\"userInfo_pwForm_button__393hw\"};","export default __webpack_public_path__ + \"static/media/logo.005d68d9.JPG\";","import styles from \"./css/menu-bar.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../image/logo.JPG\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction MenuBar() {\r\n  const onLogoutClick = () => {\r\n    localStorage.setItem(\"USER_ID\", null);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuBar}>\r\n      <div className={styles.menuBar__column}>\r\n        <Link to={`/`}>\r\n          {\" \"}\r\n          <img\r\n            src={logo}\r\n            className={styles.menuBar__logo}\r\n            alt=\"logo img\"\r\n          />{\" \"}\r\n        </Link>\r\n        {/* <!-- Easy stock logo--> */}\r\n      </div>\r\n      <div className={styles.menuBar__column}>\r\n        <nav className={styles.menuBar__nav}>\r\n          <ul className={styles.menuBar__list}>\r\n            <Link to={`/order/retailer/add`}>\r\n              <li className={styles.menuBar__btn}>\r\n                <span>발주관리</span>\r\n              </li>\r\n            </Link>\r\n            <Link to={`/stock/add`}>\r\n              <li className={styles.menuBar__btn}>\r\n                <span>재고관리</span>\r\n              </li>\r\n            </Link>\r\n            <Link to={`/user/info`}>\r\n              <li className={styles.menuBar__btn}>\r\n                <span>회원정보</span>\r\n              </li>\r\n            </Link>\r\n            <Link to={`/qna`}>\r\n              <li className={styles.menuBar__btn}>\r\n                <span>고객센터</span>\r\n              </li>\r\n            </Link>\r\n            {/* <Link to={`/`}><li className={styles.menuBar__btn}><span>고객센터</span></li></Link> */}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div className={styles.menuBar__column}>\r\n        <div className={styles.menuBar__profile}>\r\n          <FontAwesomeIcon icon={faUserCircle} size=\"2x\" />\r\n          <Link to={`/login`}>\r\n            <span>{userID === \"null\" ? \"로그인해주세요\" : userID}</span>\r\n          </Link>\r\n          <Link to={`/login`}>\r\n            <FontAwesomeIcon\r\n              icon={faSignOutAlt}\r\n              size=\"2x\"\r\n              onClick={onLogoutClick}\r\n            />\r\n          </Link>\r\n        </div>\r\n        {/* <!--who login and icon--> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuBar;\r\n","import styles from \"./css/sidemenu-bar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction SideMenuBar({ sideMenu }) {\r\n  return (\r\n    <div className={styles.screenPage__sidemenu}>\r\n      <div\r\n        className={`${styles.screenPage__sidemenu_blue} ${styles.screenPage__sidemenu_attr}`}\r\n      >\r\n        <span>{sideMenu.name}</span>\r\n        <FontAwesomeIcon icon={faChevronDown} />\r\n      </div>\r\n\r\n      {sideMenu.elementsObj.map((sideMenuElement) => (\r\n        <Link to={sideMenuElement.link} key={sideMenuElement.id}>\r\n          <div\r\n            className={`${styles.screenPage__sidemenu_white} ${styles.screenPage__sidemenu_attr}`}\r\n          >\r\n            <span>{sideMenuElement.name}</span>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nSideMenuBar.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SideMenuBar;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport styles from \"../css/mainMenu-content.module.css\";\r\n\r\nfunction DoughnutOrderComplete(orderData) {\r\n  const newData = orderData.orderData;\r\n  //console.log(newData);\r\n\r\n  const doughnutData = {\r\n    labels: [\"발주진행중\", \"수취완료\", \"주문취소\"],\r\n    datasets: [\r\n      {\r\n        data: newData,\r\n        backgroundColor: [\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className={styles.miniMenu_box}>\r\n      <div className={styles.miniMenu_title}>최근 주문 발주상태</div>\r\n      <div className={styles.chart_setting}>\r\n        <Doughnut\r\n          data={doughnutData}\r\n          options={{\r\n            legend: { position: \"right\" },\r\n            layout: {\r\n              padding: 0,\r\n            },\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            defaultFontSize: \"14px\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoughnutOrderComplete;\r\n","import { Bar } from \"react-chartjs-2\";\r\nimport styles from \"../css/mainMenu-content.module.css\";\r\n\r\nfunction ChartSpending(spendingData) {\r\n  const newData = spendingData.spendingData;\r\n  //console.log(newData);\r\n  const dataLength = newData.labels.length;\r\n  const bgColor = [];\r\n\r\n  for (let i = 0; i < dataLength; i++) {\r\n    bgColor.push(\"rgba(255, 199, 132, 0.6)\");\r\n  }\r\n\r\n  const chartData = {\r\n    labels: newData.labels,\r\n    datasets: [\r\n      {\r\n        data: newData.datasets,\r\n        backgroundColor: bgColor,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={styles.miniMenu_box}>\r\n      <div className={styles.miniMenu_title}>최근 7개 주문 지출 통계(원)</div>\r\n      <div className={styles.chart_setting}>\r\n        <Bar\r\n          data={chartData}\r\n          options={{\r\n            legend: { display: false },\r\n            layout: {\r\n              padding: 0,\r\n            },\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            defaultFontSize: \"14px\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartSpending;\r\n","import tableStyles from \"../css/mainMenu-content.module.css\";\r\nimport Fragment from \"render-fragment\";\r\n\r\nfunction MiniNotice(miniNotice) {\r\n  const newData = miniNotice.miniNotice;\r\n  //console.log(newData);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={tableStyles.miniMenu_title}>최근 공지사항</div>\r\n      <table className={tableStyles.miniTable}>\r\n        <thead>\r\n          <tr className={tableStyles.miniTable_header}>\r\n            <th>공지 제목</th>\r\n            <th>공지 날짜</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {newData.map((table) => (\r\n            <Fragment key={`${table.noticeId}__notice`}>\r\n              <tr className={tableStyles.miniTable_item}>\r\n                <td>{table.noticeTitle}</td>\r\n                <td>{table.noticeDate.slice(0, 10)}</td>\r\n              </tr>\r\n            </Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MiniNotice;\r\n","import tableStyles from \"../css/mainMenu-content.module.css\";\r\nimport Fragment from \"render-fragment\";\r\n\r\nfunction MiniStock(miniStock) {\r\n  const newData = miniStock.miniStock;\r\n  //console.log(newData);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={tableStyles.miniMenu_title}>5대 최소잔여 재고</div>\r\n      <table className={tableStyles.miniTable}>\r\n        <thead>\r\n          <tr className={tableStyles.miniTable_header}>\r\n            <th>물품 이름</th>\r\n            <th>거래처 이름</th>\r\n            <th>잔여 수량</th>\r\n            <th>물품 단위</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {newData.map((table) => (\r\n            <Fragment key={`${table.productId}__stock`}>\r\n              <tr className={tableStyles.miniTable_item}>\r\n                <td>{table.productName}</td>\r\n                <td>\r\n                  {table.retailerName === null\r\n                    ? \"본인 입력\"\r\n                    : `${table.retailerName}`}\r\n                </td>\r\n                <td>{table.productCnt}</td>\r\n                <td>{table.productUnit}</td>\r\n              </tr>\r\n            </Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MiniStock;\r\n","export default __webpack_public_path__ + \"static/media/adsTest.56d223b3.JPG\";","import styles from \"./css/main-menu-content-sector.module.css\";\r\nimport DoughnutOrderComplete from \"./MAINMENU_CONTENT/doughnut-order-complete.js\";\r\nimport BarExpense from \"./MAINMENU_CONTENT/bar-expense\";\r\nimport MiniNotice from \"./MAINMENU_CONTENT/miniNoticeTable\";\r\nimport MiniStock from \"./MAINMENU_CONTENT/miniStockTable\";\r\nimport adImg from \"./MAINMENU_CONTENT/adsTest.JPG\";\r\nimport axios from \"axios\";\r\nimport Fragment from \"render-fragment\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n//test\r\n//import TEST_MAIN_PAGE_DATA from \"./test_main_data.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction MainMenuContentSector() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [mainData, setMainData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n    };\r\n\r\n    axios.post(`${baseURL}/stats`, userData).then((response) => {\r\n      setMainData(response.data.data);\r\n      setLoading(false);\r\n    });\r\n    //only for testing erase when real\r\n    //setMainData(TEST_MAIN_PAGE_DATA.data);\r\n    //setLoading(false);\r\n  }, [mainData.stock, mainData.notice]);\r\n  //console.log(mainData);\r\n  //console.log(mainData.Stock);\r\n  //console.log(miniTable);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <div className={styles.screenPage__content}>\r\n          <div className={styles.screenPage__sector_mainColumn}>\r\n            <div className={styles.screenPage__sector_row}>\r\n              <div\r\n                className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}\r\n              >\r\n                <BarExpense spendingData={mainData.spendings} />\r\n              </div>\r\n              <div\r\n                className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}\r\n              >\r\n                <DoughnutOrderComplete orderData={mainData.orderCompletes} />\r\n              </div>\r\n            </div>\r\n            <div className={styles.screenPage__sector_row}>\r\n              <div\r\n                className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}\r\n              >\r\n                <MiniStock miniStock={mainData.stocks} />\r\n              </div>\r\n              <div\r\n                className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}\r\n              >\r\n                <MiniNotice miniNotice={mainData.notices} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.screenPage__sector_mainColumn}>\r\n            <div\r\n              className={`${styles.screenPage__sector_row} ${styles.screenPage__sectorBox_tall} ${styles.screenPage__sectorBox_ads}`}\r\n            >\r\n              <img src={adImg} alt=\"ads\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MainMenuContentSector;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport MainMenuContentSector from \"../components/main-menu-content-sector\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Home({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <MainMenuContentSector/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nHome.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/jeanLogo.4d1a538a.JPG\";","import jeanStyles from \"./jeanStyle.module.css\";\r\nimport logo from \"../../image/jeanLogo.JPG\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL =\r\n  \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\nlet USER_ID = \"\";\r\n//let loginValid = false;\r\n\r\nfunction JeanLogin() {\r\n  const resetLoginData = {\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n  };\r\n\r\n  let newLoginData = {\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n  };\r\n\r\n  //const [loginValid, setLoginValid] = useState(false);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPw, setUserPw] = useState(\"\");\r\n\r\n  //const ApiCall = () => {\r\n  //useEffect(() => {\r\n  //    axios.post(`${baseURL}/login`,newLoginData)\r\n  //        .then((response) => {\r\n  //            console.log(response.data);\r\n  //setLoginValid(response.data);\r\n  //console.log(newLoginData);\r\n  //       });\r\n  //let validCheck = await response.data;\r\n  //loginValid = await response.data;\r\n\r\n  //console.log(validCheck);\r\n  //console.log(loginValid);\r\n\r\n  //return await response.data;\r\n  //}, []);\r\n  //}\r\n\r\n  const onIdChange = (event) => {\r\n    setUserId(event.target.value);\r\n  };\r\n  const onPwChange = (event) => {\r\n    setUserPw(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newLoginData.userId = userId;\r\n    newLoginData.userPwd = userPw;\r\n\r\n    axios.post(`${baseURL}/login`, newLoginData).then((response) => {\r\n      console.log(response.data);\r\n      //setLoginValid(response.data);\r\n      //console.log(newLoginData);\r\n      if (response.data === true) {\r\n        USER_ID = userId;\r\n        localStorage.setItem(\"USER_ID\", USER_ID);\r\n        alert(`환영해요 ${userId}`);\r\n        newLoginData = resetLoginData;\r\n        //when publish\r\n        window.location.href = \"https://ssu-mosaic.github.io/front\";\r\n        //when test\r\n        //window.location.href = \"/\";\r\n      } else {\r\n        alert(\"없는 아이디거나 비밀번호가 틀렸어요\");\r\n      }\r\n    });\r\n    //ApiCall();\r\n  };\r\n\r\n  return (\r\n    <div className={jeanStyles.jeanBody}>\r\n      <img src={logo} className={jeanStyles.logo_Img} alt=\"logo_Img\" />\r\n      <section className={jeanStyles.join_form}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              id=\"userId\"\r\n              onChange={onIdChange}\r\n              required\r\n            />\r\n            <label for=\"userId\">ID</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"password\"\r\n              name=\"pw\"\r\n              id=\"pw\"\r\n              onChange={onPwChange}\r\n              required\r\n            />\r\n            <label for=\"pw\">PASSWORD</label>\r\n          </div>\r\n          <div className={jeanStyles.btn_area}>\r\n            <button type=\"submit\">LOGIN</button>\r\n          </div>\r\n        </form>\r\n        <div className={jeanStyles.caption}>\r\n          <Link to={\"/login/makeaccount\"}> 회원가입</Link>\r\n        </div>\r\n        <div className={jeanStyles.caption}>\r\n          <Link to={\"/login/findid\"}> ID 찾기</Link>\r\n        </div>\r\n        <div className={jeanStyles.caption}>\r\n          <Link to={\"/login/findpwd\"}> PW 찾기</Link>\r\n        </div>\r\n        <div className={jeanStyles.caption}>\r\n          <Link to={\"/admin/login\"}> 관리자모드</Link>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeanLogin;\r\n","import jeanStyles from \"./jeanStyle.module.css\";\r\n//import { Link } from \"react-router-dom\";\r\nimport logo from \"../../image/jeanLogo.JPG\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeanJoin() {\r\n  useEffect(() => {}, []);\r\n\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  let newAccountData = {\r\n    userEmail: \"\",\r\n    userBusinessNo: \"\",\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n    userAddress: \"\",\r\n    userName: \"\",\r\n    userPhoneNo: \"\",\r\n  };\r\n  const resetAccountData = {\r\n    userEmail: \"\",\r\n    userBusinessNo: \"\",\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n    userAddress: \"\",\r\n    userName: \"\",\r\n    userPhoneNo: \"\",\r\n  };\r\n  //const [data, setData] = useState(false);\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPw, setUserPw] = useState(\"\");\r\n  const [userPwRe, setUserPwRe] = useState(\"\");\r\n  const [pwValid, setPwValid] = useState(false);\r\n  const [businessNo, setBusinessNo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phoneNum, setPhoneNum] = useState(\"\");\r\n\r\n  const ApiCall = async () => {\r\n    const response = await axios.post(`${baseURL}/register`, newAccountData);\r\n    const data = await response.data;\r\n    console.log(data);\r\n    //setData(data);\r\n    //return await response.data;\r\n  };\r\n\r\n  const onIdChange = (event) => {\r\n    setUserId(event.target.value);\r\n  };\r\n  const onPwChange = (event) => {\r\n    setPwValid(false);\r\n    setUserPw(event.target.value);\r\n  };\r\n  const onPwReChange = (event) => {\r\n    setPwValid(false);\r\n    setUserPwRe(event.target.value);\r\n  };\r\n  const onPwCheckClick = () => {\r\n    if (userPw === userPwRe) {\r\n      setPwValid(true);\r\n      alert(\"비밀번호 일치확인\");\r\n    } else {\r\n      setPwValid(false);\r\n      alert(\"비밀번호 불일치\");\r\n    }\r\n  };\r\n  const onBusinessNoChange = (event) => {\r\n    setBusinessNo(event.target.value);\r\n  };\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const onAddressChange = (event) => {\r\n    setAddress(event.target.value);\r\n  };\r\n  const onNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const onPhoneChange = (event) => {\r\n    setPhoneNum(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newAccountData.userId = userId;\r\n    newAccountData.userPwd = userPw;\r\n    newAccountData.userBusinessNo = businessNo;\r\n    newAccountData.userEmail = email;\r\n    newAccountData.userAddress = address;\r\n    newAccountData.userName = name;\r\n    newAccountData.userPhoneNo = phoneNum;\r\n\r\n    ApiCall();\r\n\r\n    //reset\r\n    newAccountData = resetAccountData;\r\n    if (pwValid === true) {\r\n      alert(\"가입 완료 로그인 화면으로 갈게요\");\r\n\r\n      //test\r\n      //window.location.href = \"/login\";\r\n      //publish\r\n      window.location.href = \"https://ssu-mosaic.github.io/login\";\r\n    } else {\r\n      alert(\"가입 실패 비밀번호 등을 살펴보세요 \");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={jeanStyles.jeanBody}>\r\n      <img src={logo} className={jeanStyles.logo_Img} alt=\"logo_Img\" />\r\n      <section className={jeanStyles.login_form}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              id=\"userId\"\r\n              onChange={onIdChange}\r\n              required\r\n            />\r\n            <label for=\"userId\">ID</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"pw\"\r\n              onChange={onPwChange}\r\n              required\r\n            />\r\n            <label for=\"pw\">PASSWORD</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"password\"\r\n              name=\"pwch\"\r\n              id=\"pwch\"\r\n              onChange={onPwReChange}\r\n              required\r\n            />\r\n            <label for=\"pwch\" id=\"pwch\">\r\n              PASSWORD CHECK\r\n            </label>\r\n            <button type=\"button\" onClick={onPwCheckClick}>\r\n              check\r\n            </button>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"businessNo\"\r\n              id=\"busNo\"\r\n              onChange={onBusinessNoChange}\r\n              required\r\n            />\r\n            <label for=\"busNo\">BUSINESS.NO</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={onEmailChange}\r\n              required\r\n            />\r\n            <label for=\"email\">E-mail</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              id=\"addr\"\r\n              onChange={onAddressChange}\r\n              required\r\n            />\r\n            <label for=\"addr\">ADDRESS</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={onNameChange}\r\n              required\r\n            />\r\n            <label for=\"name\">Name</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              id=\"ph\"\r\n              onChange={onPhoneChange}\r\n              required\r\n            />\r\n            <label for=\"ph\">PHONE</label>\r\n          </div>\r\n\r\n          <div className={jeanStyles.btn_area}>\r\n            <button type=\"submit\">OK</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeanJoin;\r\n","import jeanStyles from \"./jeanStyle.module.css\";\r\nimport logo from \"../../image/jeanLogo.JPG\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeanForgetPw() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  let newSearchData = {\r\n    userEmail: \"\",\r\n    userName: \"\",\r\n    userId: \"\",\r\n  };\r\n  const resetSearchData = {\r\n    userEmail: \"\",\r\n    userName: \"\",\r\n    userId: \"\",\r\n  };\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const onNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const onIdChange = (event) => {\r\n    setId(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newSearchData.userEmail = email;\r\n    newSearchData.userName = name;\r\n    newSearchData.userId = id;\r\n\r\n    axios.post(`${baseURL}/findpwd`, newSearchData).then((response) => {\r\n      console.log(response.data);\r\n      //setLoginValid(response.data);\r\n      //console.log(newLoginData);\r\n      if (response.data === true) {\r\n        alert(`입력하신 이메일로 비밀번호가 전송되었어요`);\r\n        newSearchData = resetSearchData;\r\n        window.location.href = \"https://ssu-mosaic.github.io/login\";\r\n        //window.location.href = \"/\"\r\n      } else {\r\n        alert(\"없는 아이디 또는 이메일이 잘못 되었어요\");\r\n      }\r\n    });\r\n    //ApiCall();\r\n  };\r\n\r\n  return (\r\n    <div className={jeanStyles.jeanBody}>\r\n      <img src={logo} className={jeanStyles.logo_Img} alt=\"logo_Img\" />\r\n      <section className={jeanStyles.login_form}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={onNameChange}\r\n              required\r\n            />\r\n            <label for=\"name\">NAME</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"id\"\r\n              id=\"id\"\r\n              onChange={onIdChange}\r\n              required\r\n            />\r\n            <label for=\"email\">Id</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={onEmailChange}\r\n              required\r\n            />\r\n            <label for=\"email\">E-mail</label>\r\n          </div>\r\n          <div className={jeanStyles.btn_area}>\r\n            <button type=\"submit\">OK</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeanForgetPw;\r\n","import jeanStyles from \"./jeanStyle.module.css\";\r\nimport logo from \"../../image/jeanLogo.JPG\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeanForgetId() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  let newSearchData = {\r\n    userEmail: \"\",\r\n    userName: \"\",\r\n  };\r\n  const resetSearchData = {\r\n    userEmail: \"\",\r\n    userName: \"\",\r\n  };\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const onNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newSearchData.userEmail = email;\r\n    newSearchData.userName = name;\r\n\r\n    axios.post(`${baseURL}/findid`, newSearchData).then((response) => {\r\n      console.log(response.data);\r\n      //setLoginValid(response.data);\r\n      //console.log(newLoginData);\r\n      if (response.data === true) {\r\n        alert(`입력하신 이메일로 아이디가 전송되었어요`);\r\n        newSearchData = resetSearchData;\r\n        window.location.href = \"https://ssu-mosaic.github.io/login\";\r\n        //window.location.href = \"/\"\r\n      } else {\r\n        alert(\"없는 사용자 또는 이메일이 잘못 되었어요\");\r\n      }\r\n    });\r\n    //ApiCall();\r\n  };\r\n\r\n  return (\r\n    <div className={jeanStyles.jeanBody}>\r\n      <img src={logo} className={jeanStyles.logo_Img} alt=\"logo_Img\" />\r\n      <section className={jeanStyles.login_form}>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={onNameChange}\r\n              required\r\n            />\r\n            <label for=\"name\">NAME</label>\r\n          </div>\r\n          <div className={jeanStyles.int_area}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={onEmailChange}\r\n              required\r\n            />\r\n            <label for=\"email\">E-mail</label>\r\n          </div>\r\n          <div className={jeanStyles.btn_area}>\r\n            <button type=\"submit\">OK</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeanForgetId;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport Fragment from \"render-fragment\";\r\n////import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n//import { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Tables({ orderId, orderDate, orderProducts, onOrderDetailClick }) {\r\n  //console.log(orderProducts);\r\n\r\n  const orderTotal = orderProducts.length;\r\n  let orderComplete = 0;\r\n  let orderCanceled = 0;\r\n\r\n  for (let index = 0; index < orderTotal; index++) {\r\n    if (orderProducts[index].orderStatus === \"CANCELED\") {\r\n      orderCanceled++;\r\n    } else if (orderProducts[index].orderStatus === \"COMPLETED\") {\r\n      orderComplete++;\r\n    }\r\n  }\r\n\r\n  if (orderProducts.length > 0) {\r\n    return (\r\n      <Fragment>\r\n        <tr\r\n          key={orderId}\r\n          className={styles.screenPage__searchResultTable_items}\r\n        >\r\n          <td key={\"orderId_td\"}>{orderId}</td>\r\n          <td key={\"orderDate_td\"}>{orderDate.slice(0, 10)}</td>\r\n          <td\r\n            key={\"orderProducts_td\"}\r\n            onClick={(event) =>\r\n              onOrderDetailClick(event, orderProducts, orderId)\r\n            }\r\n          >\r\n            {`거래처 ${orderProducts[0].retailerName}`}\r\n            {orderProducts.length < 2\r\n              ? \"\"\r\n              : `, ${orderProducts[1].retailerName} `}\r\n            {orderProducts.length > 2 ? \"등 \" : \"\"}\r\n            {`에서 ${orderProducts.length} 건의 상품`}\r\n          </td>\r\n          <td key={\"orderProgress_td\"}>{`${(\r\n            (orderComplete / (orderTotal - orderCanceled)) *\r\n            100\r\n          ).toFixed(1)} %`}</td>\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Tables;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction ProductTables({\r\n  productId,\r\n  retailerName,\r\n  productName,\r\n  productUnit,\r\n  productCnt,\r\n  orderStatus,\r\n  orderProductId,\r\n  handleCancelClick,\r\n  handleCompleteClick,\r\n}) {\r\n  let orderStatusKor = \"\";\r\n  if (orderStatus === \"CANCELED\") {\r\n    orderStatusKor = \"취소완료\";\r\n  } else if (orderStatus === \"COMPLETED\") {\r\n    orderStatusKor = \"완료\";\r\n  } else {\r\n    orderStatusKor = \"발주진행중\";\r\n  }\r\n\r\n  return (\r\n    <tr className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"productName_td\"}>{productName}</td>\r\n      <td key={\"retailerName_td\"}>{retailerName}</td>\r\n      <td key={\"productCnt_td\"}>{productCnt}</td>\r\n      <td key={\"productUnit_td\"}>{productUnit}</td>\r\n      <td key={\"orderStatus_td\"}>{orderStatusKor}</td>\r\n      <td key={\"orderCancel_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) =>\r\n            handleCancelClick(event, productId, orderProductId)\r\n          }\r\n          disabled={orderStatus === \"CANCELED\" || orderStatus === \"COMPLETED\"}\r\n        >\r\n          {orderStatus === \"CANCELED\" || orderStatus === \"COMPLETED\" ? (\r\n            \"\"\r\n          ) : (\r\n            <FontAwesomeIcon icon={faTimes} size=\"2x\" />\r\n          )}\r\n        </button>\r\n      </td>\r\n      <td key={\"orderComplete_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) =>\r\n            handleCompleteClick(event, productId, orderProductId)\r\n          }\r\n          disabled={orderStatus === \"CANCELED\" || orderStatus === \"COMPLETED\"}\r\n        >\r\n          {orderStatus === \"CANCELED\" || orderStatus === \"COMPLETED\" ? (\r\n            \"\"\r\n          ) : (\r\n            <FontAwesomeIcon icon={faCheck} size=\"2x\" />\r\n          )}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ProductTables;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={styles.pagination}>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className={styles.pagination__pages}>\r\n                            <Link to={'/order/searchorder'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport ProductTables from \"./ProductTables\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport buttonStyles from \"../css/userInfo.module.css\";\r\n//import resultStyles from \"./retailer-list-readonly.module.css\";\r\nimport axios from \"axios\";\r\n//test\r\n//import TEST_ORDER_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//발주조회\r\nfunction OrderList() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [menuPage, setMenuPage] = useState(1);\r\n  const [tablePerPage] = useState(5);\r\n  const [table, setTable] = useState([]);\r\n  const [orderDetail, setOrderDetail] = useState(false);\r\n  const [productList, setProductList] = useState([]);\r\n  const [orderId, setOrderId] = useState(-1);\r\n\r\n  //get data from server\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n    };\r\n\r\n    axios.post(`${baseURL}/order`, userData).then((response) => {\r\n      setTable(response.data);\r\n      setLoading(false);\r\n      //console.log(userData);\r\n    });\r\n    //only for test erase when real\r\n    //setTable(TEST_ORDER_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n  const productLists = productList.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const onOrderDetailClick = (event, orderProducts, orderId) => {\r\n    event.preventDefault();\r\n    setOrderId(orderId);\r\n    setMenuPage(currentPage);\r\n    setCurrentPage(1);\r\n    setProductList(orderProducts);\r\n    //console.log(productList);\r\n    setOrderDetail(true);\r\n  };\r\n\r\n  const onOrderMenuClick = () => {\r\n    setCurrentPage(menuPage);\r\n    setOrderDetail(false);\r\n  };\r\n\r\n  const handleCancelClick = (event, productId, orderProductId) => {\r\n    event.preventDefault();\r\n\r\n    axios.put(`${baseURL}/order/cancel/${orderProductId}`).then((response) => {\r\n      if (response.data === true) {\r\n        alert(\"주문 취소 완료\");\r\n        //test\r\n        //window.location.href = \"/order/searchorder\";\r\n        //publish\r\n        window.location.href = \"https://ssu-mosaic.github.io/order/searchorder\";\r\n      } else {\r\n        alert(\"주문 취소 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n\r\n    let newOrderForm = [...table];\r\n    for (let index = 0; index < newOrderForm.length; index++) {\r\n      if (newOrderForm[index].orderId === orderId) {\r\n        for (\r\n          let idx = 0;\r\n          idx < newOrderForm[index].orderProducts.length;\r\n          idx++\r\n        ) {\r\n          if (newOrderForm[index].orderProducts[idx].productId === productId) {\r\n            newOrderForm[index].orderProducts[idx].orderStatus = \"canceled\";\r\n            setTable(newOrderForm);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCompleteClick = (event, productId, orderProductId) => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .put(`${baseURL}/order/complete/${orderProductId}`)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"수치 확인 완료\");\r\n          alert(\"주문 취소 완료\");\r\n          //test\r\n          //window.location.href = \"/order/searchorder\";\r\n          //publish\r\n          window.location.href =\r\n            \"https://ssu-mosaic.github.io/order/searchorder\";\r\n        } else {\r\n          alert(\"수취 확인 실패 재시도 해주세요\");\r\n        }\r\n      });\r\n\r\n    let newOrderForm = [...table];\r\n    for (let index = 0; index < newOrderForm.length; index++) {\r\n      if (newOrderForm[index].orderId === orderId) {\r\n        for (\r\n          let idx = 0;\r\n          idx < newOrderForm[index].orderProducts.length;\r\n          idx++\r\n        ) {\r\n          if (newOrderForm[index].orderProducts[idx].productId === productId) {\r\n            newOrderForm[index].orderProducts[idx].orderStatus = \"complete\";\r\n            setTable(newOrderForm);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading || tables.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          {orderDetail === false ? (\r\n            <Fragment>\r\n              <table className={styles.screenPage__searchResultTable}>\r\n                <thead>\r\n                  <tr className={styles.screenPage__searchResultTable_header}>\r\n                    <th>주문 아이디</th>\r\n                    <th>주문 날짜</th>\r\n                    <th>주문 내역</th>\r\n                    <th>주문 완료율</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.testTable__tbody}>\r\n                  {tables.map((tables) => (\r\n                    <Tables\r\n                      key={tables.orderId}\r\n                      orderId={tables.orderId}\r\n                      orderDate={tables.orderDate}\r\n                      orderProducts={tables.orderProducts}\r\n                      onOrderDetailClick={onOrderDetailClick}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={table.length}\r\n                paginate={paginate}\r\n              />\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <table className={styles.screenPage__searchResultTable}>\r\n                <thead>\r\n                  <tr className={styles.screenPage__searchResultTable_header}>\r\n                    <th>상품 이름</th>\r\n                    <th>거래처 이름</th>\r\n                    <th>상품 수량</th>\r\n                    <th>상품 단위</th>\r\n                    <th>발주 상태</th>\r\n                    <th>주문 취소</th>\r\n                    <th>수취 완료</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.testTable__tbody}>\r\n                  {productLists.map((product) => (\r\n                    <ProductTables\r\n                      key={product.productId}\r\n                      productId={product.productId}\r\n                      retailerName={product.retailerName}\r\n                      productName={product.productName}\r\n                      productUnit={product.productUnit}\r\n                      productCnt={product.productCnt}\r\n                      orderStatus={product.orderStatus}\r\n                      orderProductId={product.orderProductId}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleCompleteClick={handleCompleteClick}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={productList.length}\r\n                paginate={paginate}\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                value=\"주문목록 돌아가기\"\r\n                onClick={onOrderMenuClick}\r\n                className={buttonStyles.userInfoList__saveChange}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\n//import styles fromSearchOrderResultTable from \"./search-order-result\";\r\n//import { DateRangePicker } from 'rsuite';\r\n//import 'rsuite/dist/rsuite.css';\r\n//import Fragment from 'render-fragment';\r\nimport OrderList from \"../ORDER_LIST/tableRender\";\r\n//import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SearchForItem() {\r\n  //const [dateRange, setDateRange] = useState([new Date(), new Date()]);\r\n\r\n  // const onDateChange = (event) =>{\r\n  //     if(Array.isArray(event)){\r\n  //         console.log(event);\r\n  //         setDateRange(event);\r\n  //         console.log(event[0]);\r\n  //     }\r\n  //     else{\r\n  //         setDateRange([new Date(), new Date()]);\r\n  //     }\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>발주조회</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/order/requestorder\"}>\r\n          <input type=\"button\" value=\"발주요청\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>주문목록</span>\r\n        </div>\r\n        <OrderList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchForItem;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport OrderResultTable from \"../components/ORDER_MANAGEMENT/order-result\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction OrderResult({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <OrderResultTable />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOrderResult.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderResult;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\n//import PaginationTableRender from \"./TEST_TABLE/tableRender\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction StockManagement() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  let newStockData = {\r\n    userId: \"\",\r\n    stockName: \"\",\r\n    stockCnt: \"\",\r\n    //retailerName: \"\",\r\n    stockUnit: \"\",\r\n  };\r\n  const resetStockData = {\r\n    userId: \"\",\r\n    stockName: \"\",\r\n    stockCnt: \"\",\r\n    //retailerName: \"\",\r\n    stockUnit: \"\",\r\n  };\r\n\r\n  const [stockName, setProductName] = useState(\"\");\r\n  const [stockCnt, setStockCount] = useState(-1);\r\n  //const [retailerName, setRetailerName] = useState(\"\");\r\n  const [stockUnit, setProductUnit] = useState(\"\");\r\n  // const ApiCall = async () => {\r\n  //     const response = await axios.post(`${baseURL}/stock/add`,newStockData)\r\n  //     //const data = await response.data;\r\n  //     console.log(response.data);\r\n  //     console.log(newStockData);\r\n  //     //console.log(data);\r\n  //     //setData(data);\r\n  //     //return await response.data;\r\n  // }\r\n\r\n  const onProductNameChange = (event) => {\r\n    setProductName(event.target.value);\r\n  };\r\n  const onProductUnitChange = (event) => {\r\n    setProductUnit(event.target.value);\r\n  };\r\n  // const onRetailerNameChange = (event) => {\r\n  //   setRetailerName(event.target.value);\r\n  // };\r\n  const onStockCntChange = (event) => {\r\n    setStockCount(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newStockData.userId = userID;\r\n    newStockData.stockName = stockName;\r\n    //newStockData.retailerName = retailerName;\r\n    newStockData.stockUnit = stockUnit;\r\n    newStockData.stockCnt = stockCnt;\r\n    console.log(newStockData);\r\n\r\n    //ApiCall();\r\n    axios.post(`${baseURL}/stock/add`, newStockData).then((response) => {\r\n      if (response.data !== null) {\r\n        alert(\"재고 정보 추가 완료\");\r\n        //test\r\n        //window.location.href = \"/stock/edit\";\r\n        //publish\r\n        window.location.href = \"https://ssu-mosaic.github.io/stock/edit\";\r\n      } else {\r\n        alert(\"재고 정보 추가 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n\r\n    newStockData = resetStockData;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>재고등록</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/stock/edit\"}>\r\n          <input type=\"button\" value=\"재고목록\" />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.screenPage__searchBox}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>검색옵션</span>\r\n        </div>\r\n        <form onSubmit={onSubmit}>\r\n          <div\r\n            className={`${styles.screenPage__section_column} ${styles.screenPage__searchList}`}\r\n          >\r\n            <div className={styles.screenPage__section_row}>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"stockName\">재고이름 </label>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onProductNameChange}\r\n                  name=\"stockName\"\r\n                  required\r\n                />\r\n              </div>\r\n              {/* <div className={styles.screenPage__searchOption}>\r\n                <label for=\"retailerName\">거래처이름 </label>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onRetailerNameChange}\r\n                  name=\"retailerName\"\r\n                  required\r\n                />\r\n              </div> */}\r\n            </div>\r\n            <div className={styles.screenPage__section_row}>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"stockCnt\">잔여재고 </label>\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={onStockCntChange}\r\n                  name=\"stockCnt\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"stockUnit\">재고단위 </label>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onProductUnitChange}\r\n                  name=\"stockUnit\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.screenPage__section_column}>\r\n            <input type=\"submit\" value=\"추가\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {/* <div className={styles.screenPage__searchBox}>\r\n                <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form method=\"get\">\r\n                    <div className={`${styles.screenPage__section_row} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_column}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"orderDate\">검색조건? </label> \r\n                                <input type=\"date\" name=\"orderDate\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"company\">매입거래처 </label> \r\n                                <input type=\"text\" name=\"company\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"itemName\">물품검색 </label> \r\n                                <input type=\"text\" name=\"itemName\" required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_column}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">수량 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">검색조건? </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_column}>\r\n                                <div className={styles.screenPage__searchOption}>\r\n                                    <label for=\"condition\">검색조건? </label> \r\n                                    <input type=\"number\" name=\"condition\" required/>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.screenPage__section_row}>\r\n                            <input type=\"submit\" value=\"조회\"/>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n      {/* <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span>검색결과</span></div>\r\n                <PaginationTableRender/>\r\n            </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockManagement;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport StockManagement from \"../components/STOCK_MANAGEMENT/stock-management\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction manageStock({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <StockManagement />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nmanageStock.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default manageStock;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faHammer } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Tables({\r\n  stockId,\r\n  stockName,\r\n  //retailerName,\r\n  stockCnt,\r\n  stockUnit,\r\n  handleEditClick,\r\n  handleDeleteClick,\r\n}) {\r\n  const rowData = {\r\n    stockId: stockId,\r\n    stockName: stockName,\r\n    //retailerName: retailerName,\r\n    stockCnt: stockCnt,\r\n    stockUnit: stockUnit,\r\n  };\r\n\r\n  //console.log(retailerAddress);\r\n\r\n  return (\r\n    <tr key={stockId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"productName_td\"}>{stockName}</td>\r\n      {/* <td key={\"retailerName_td\"}>{retailerName}</td> */}\r\n      <td key={\"stockCnt_td\"}>{stockCnt}</td>\r\n      <td key={\"productUnit_td\"}>{stockUnit}</td>\r\n      <td key={\"edit_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, rowData)}\r\n        >\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faHammer} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"delete_td\"}>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(stockId)}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction EditRow({\r\n  stockId,\r\n  stockName,\r\n  //retailerName,\r\n  stockCnt,\r\n  stockUnit,\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) {\r\n  //console.log(editFormData);\r\n  return (\r\n    <tr key={stockId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"productName_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={stockName}\r\n          name=\"stockName\"\r\n          value={editFormData.stockName}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      {/* <td key={\"retailerName_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={retailerName}\r\n          name=\"retailerName\"\r\n          value={editFormData.retailerName}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td> */}\r\n      <td key={\"stockCnt_edit\"}>\r\n        <input\r\n          type=\"number\"\r\n          required=\"required\"\r\n          placeholder={stockCnt}\r\n          name=\"stockCnt\"\r\n          value={editFormData.stockCnt}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td key={\"productUnit_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={stockUnit}\r\n          name=\"stockUnit\"\r\n          value={editFormData.stockUnit}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td key={\"button_edit\"}>\r\n        <button type=\"submit\">\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faCheck} size=\"2x\" />{\" \"}\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"button_delete\"}></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EditRow;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={styles.pagination}>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className={styles.pagination__pages}>\r\n                            <Link to={'/stock/edit'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport EditRow from \"./editRow\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\n//test\r\n//import TEST_STOCK_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//재고\r\nfunction StockListTable() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(10);\r\n  const [table, setTable] = useState([]);\r\n\r\n  //get data from server\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n    };\r\n    // const ApiCallForList = async () => {\r\n    //     const response = await axios.post(`${baseURL}/stock/list`,userData)\r\n    //     const data = await response.data;\r\n    //     console.log(data);\r\n    //     setTable(data);\r\n    //     setLoading(false);\r\n    //     //return await response.data;\r\n    // }\r\n    // //ApiCallForList();\r\n    // setTable(MOCK_DATA);\r\n    axios.post(`${baseURL}/stock`, userData).then((response) => {\r\n      setLoading(false);\r\n      //console.log(response.data);\r\n      setTable(response.data);\r\n    });\r\n\r\n    // only for testing erase when real\r\n    //setTable(TEST_STOCK_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  //edit data\r\n  const [rowId, setRowId] = useState(null);\r\n  const handleEditClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    setRowId(rowData.stockId);\r\n\r\n    const formValues = {\r\n      userId: userID,\r\n      stockId: rowData.stockId,\r\n      //retailerName: rowData.retailerName,\r\n      stockName: rowData.stockName,\r\n      stockCnt: rowData.stockCnt,\r\n      stockUnit: rowData.stockUnit,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n  const [editFormData, setEditFormData] = useState({\r\n    userId: userID,\r\n    stockId: \"\",\r\n    stockName: \"\",\r\n    //retailerName: \"\",\r\n    stockCnt: -1,\r\n    stockUnit: \"\",\r\n  });\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  //save changes\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedForm = {\r\n      userId: userID,\r\n      stockName: editFormData.stockName,\r\n      //retailerName: editFormData.retailerName,\r\n      stockCnt: editFormData.stockCnt,\r\n      stockUnit: editFormData.stockUnit,\r\n    };\r\n\r\n    // const ApiCallForEdit = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/stock/edit`,editedForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios.put(`${baseURL}/stock/edit/${rowId}`, editedForm).then((response) => {\r\n      if (response.data === true) {\r\n        alert(\"재고 정보 수정 완료\");\r\n      } else {\r\n        alert(\"재고 정보 수정 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.stockId === rowId);\r\n\r\n    newTable[index] = editedForm;\r\n    //console.log(newTable);\r\n    setTable(newTable);\r\n    //ApiCallForEdit();\r\n    setRowId(null);\r\n    //console.log(table);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setRowId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (rowId) => {\r\n    const deleteForm = {\r\n      userId: userID,\r\n    };\r\n    // const ApiCallForDelete = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/stock/delete`,deleteForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios.put(`${baseURL}/stock/${rowId}`, deleteForm).then((response) => {\r\n      if (response.data === true) {\r\n        alert(\"재고 정보 삭제 완료\");\r\n      } else {\r\n        alert(\"재고 정보 삭제 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.stockId === rowId);\r\n    newTable.splice(index, 1);\r\n    setTable(newTable);\r\n    //ApiCallForDelete();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading || table.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          <form onSubmit={handleEditFormSubmit}>\r\n            <table className={styles.screenPage__searchResultTable}>\r\n              <thead>\r\n                <tr className={styles.screenPage__searchResultTable_header}>\r\n                  <th>재고이름</th>\r\n                  {/* <th>거래처이름</th> */}\r\n                  <th>잔여재고</th>\r\n                  <th>재고단위</th>\r\n                  <th>수정</th>\r\n                  <th>삭제</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody className=\"testTable__tbody\">\r\n                {tables.map((tables) => (\r\n                  <Fragment key={`${tables.stockId}_fragment`}>\r\n                    {rowId === tables.stockId ? (\r\n                      <EditRow\r\n                        key={tables.stockId}\r\n                        stockId={tables.stockId}\r\n                        stockName={tables.stockName}\r\n                        //retailerName={tables.retailerName}\r\n                        stockCnt={tables.stockCnt}\r\n                        stockUnit={tables.stockUnit}\r\n                        editFormData={editFormData}\r\n                        handleEditFormChange={handleEditFormChange}\r\n                        handleCancelClick={handleCancelClick}\r\n                      />\r\n                    ) : (\r\n                      <Tables\r\n                        key={tables.stockId}\r\n                        stockId={tables.stockId}\r\n                        stockName={tables.stockName}\r\n                        //retailerName={tables.retailerName}\r\n                        stockCnt={tables.stockCnt}\r\n                        stockUnit={tables.stockUnit}\r\n                        handleEditClick={handleEditClick}\r\n                        handleDeleteClick={handleDeleteClick}\r\n                      />\r\n                    )}\r\n                  </Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <Pagination\r\n            tablePerPage={tablePerPage}\r\n            totalTables={table.length}\r\n            paginate={paginate}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockListTable;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\n//import ConfirmItemResultTable from \"./order-confirm-result\";\r\nimport StockListTable from \"../STOCK_LIST/tableRender\";\r\nimport React from \"react\";\r\n//import { DateRangePicker } from 'rsuite';\r\n//import 'rsuite/dist/rsuite.css';\r\n//import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EditForStock() {\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>재고목록</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/stock/add\"}>\r\n          <input type=\"button\" value=\"재고등록\" />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>거래처리스트</span>\r\n        </div>\r\n        <StockListTable />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditForStock;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport EditForStock from \"../components/STOCK_MANAGEMENT/edit-stock\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction EditStock({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <EditForStock />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEditStock.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EditStock;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Tables({\r\n  retailerId,\r\n  retailerName,\r\n  retailerPhoneNo,\r\n  retailerEmail,\r\n  retailerDetail,\r\n}) {\r\n  //console.log(retailerAddress);\r\n\r\n  return (\r\n    <tr key={retailerId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"retailerName_td\"}>\r\n        <Link to={`/order/requestorder/${retailerId}`}>{retailerName}</Link>\r\n      </td>\r\n      <td key={\"retailerPhone_td\"}>{retailerPhoneNo}</td>\r\n      <td key={\"retailerEmail_td\"}>{retailerEmail}</td>\r\n      <td key={\"retailerMemo_td\"}>\r\n        {retailerDetail.length > 30\r\n          ? `${retailerDetail.slice(0, 30)}...`\r\n          : `${retailerDetail}`}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link to={\"/order/requestorder\"} onClick={() => paginate(number)}>\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\n//only for testing\r\n//import TEST_RETAILER_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//거래처목록\r\nfunction RetailerListTable() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(10);\r\n  const [table, setTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n    };\r\n    axios.post(`${baseURL}/retailer`, userData).then((response) => {\r\n      //console.log(response.data);\r\n      setTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    //only for testing erase when real\r\n    //setTable(TEST_RETAILER_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      {loading || table.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          <table className={styles.screenPage__searchResultTable}>\r\n            <thead>\r\n              <tr className={styles.screenPage__searchResultTable_header}>\r\n                <th>거래처 이름</th>\r\n                <th>거래처 연락처</th>\r\n                <th>거래처 이메일</th>\r\n                <th>거래처 메모</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"testTable__tbody\">\r\n              {tables.map((tables) => (\r\n                <Fragment key={`${tables.retailerId}_fragment`}>\r\n                  <Tables\r\n                    key={tables.retailerId}\r\n                    retailerId={tables.retailerId}\r\n                    retailerName={tables.retailerName}\r\n                    retailerPhoneNo={tables.retailerPhoneNo}\r\n                    retailerEmail={tables.retailerEmail}\r\n                    retailerDetail={tables.retailerDetail}\r\n                  />\r\n                </Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <Pagination\r\n            tablePerPage={tablePerPage}\r\n            totalTables={table.length}\r\n            paginate={paginate}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RetailerListTable;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\n//import SearchOrderResultTable from \"./search-order-result\";\r\nimport RetailerListTable from \"../RETAILER_LIST_READONLY/tableRender\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RequestForOrder() {\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>발주요청</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/order/requestorder/basket\"}>\r\n          <input type=\"button\" value=\"장바구니\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>거래처 목록</span>\r\n        </div>\r\n        <RetailerListTable />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestForOrder;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport RequestForOrder from \"../components/ORDER_MANAGEMENT/order-request\";\r\n//import SearchForOrder from \"../components/search-order\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction OrderRequest({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <RequestForOrder />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOrderRequest.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderRequest;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\n//let userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction ReadUserInfo({\r\n  retailerName,\r\n  retailerEmail,\r\n  retailerPhoneNo,\r\n  retailerDetail,\r\n}) {\r\n  return (\r\n    <div className={styles.userInfoBox}>\r\n      <ul className={styles.userInfoList}>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 이름 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerName}</div>\r\n        </li>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 이메일 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerEmail}</div>\r\n        </li>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 번호 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerPhoneNo}</div>\r\n        </li>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 설명 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerDetail}</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadUserInfo;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingBag } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Tables({\r\n  productId,\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productDetail,\r\n  handleEditClick,\r\n  onProductDetailClick,\r\n}) {\r\n  const rowData = {\r\n    userId: userID,\r\n    productId: productId,\r\n    productName: productName,\r\n    productPrice: productPrice,\r\n    productUnit: productUnit,\r\n    productDetail: productDetail,\r\n  };\r\n  const productDetailData = {\r\n    productName: productName,\r\n    productPrice: productPrice,\r\n    productUnit: productUnit,\r\n    productDetail: productDetail,\r\n  };\r\n\r\n  //console.log(retailerAddress);\r\n\r\n  return (\r\n    <tr\r\n      key={`${productId}_tr`}\r\n      className={styles.screenPage__searchResultTable_items}\r\n    >\r\n      <td\r\n        key={\"productName_td\"}\r\n        onClick={(event) => onProductDetailClick(event, productDetailData)}\r\n      >\r\n        {productName}\r\n      </td>\r\n      <td key={\"productPrice_td\"}>{productPrice}</td>\r\n      <td key={\"productUnit_td\"}>{productUnit}</td>\r\n      <td key={\"productDesc_td\"}>\r\n        {productDetail.length > 10\r\n          ? `${productDetail.slice(0, 10)}...`\r\n          : `${productDetail}`}\r\n      </td>\r\n      <td key={\"edit_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, rowData)}\r\n        >\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faShoppingBag} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction EditRow({\r\n  productId,\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productDetail,\r\n  //productCnt,\r\n  orderFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) {\r\n  return (\r\n    <tr\r\n      key={`edit_${productId}_tr`}\r\n      className={styles.screenPage__searchResultTable_items}\r\n    >\r\n      <td key={\"edit_productName_td\"}>{productName}</td>\r\n      <td key={\"edit_productPrice_td\"}>{productPrice}</td>\r\n      <td key={\"edit_productUnit_td\"}>{productUnit}</td>\r\n      <td key={\"edit_productDesc_td\"}>{`${productDetail.slice(0, 10)}...`}</td>\r\n      <td key={\"edit_button_edit\"}>\r\n        <input\r\n          type=\"number\"\r\n          required\r\n          min=\"1\"\r\n          name=\"productCnt\"\r\n          placeholder={`수량(${productUnit})입력`}\r\n          value={orderFormData.productCnt}\r\n          onChange={handleEditFormChange}\r\n        />\r\n        <button type=\"submit\">\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faCheck} size=\"2x\" />{\" \"}\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EditRow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n  const { id } = useParams();\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={`/order/requestorder/${id}`}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport EditRow from \"./editRow\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\n//only for testing\r\n//import TEST_PRODUCT_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//거래처목록\r\nfunction ProductListTable({ retailerId, onProductDetailClick }) {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(5);\r\n  const [table, setTable] = useState([]);\r\n  const [orderFormData, setOrderFormData] = useState({\r\n    userId: userID,\r\n    retailerId: retailerId,\r\n    productId: \"\",\r\n    productName: \"\",\r\n    productPrice: 0,\r\n    productUnit: \"\",\r\n    productDetail: \"\",\r\n    productCnt: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n      retailerId: retailerId,\r\n    };\r\n    axios.post(`${baseURL}/retailer/product`, userData).then((response) => {\r\n      //console.log(response.data);\r\n      setTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    //only for testing erase when real\r\n    //setTable(TEST_PRODUCT_DATA);\r\n  }, [retailerId]);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  //edit data\r\n  const [rowId, setRowId] = useState(null);\r\n  const handleEditClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    setRowId(rowData.productId);\r\n\r\n    const formValues = {\r\n      userId: userID,\r\n      retailerId: retailerId,\r\n      productId: rowData.productId,\r\n      productName: rowData.productName,\r\n      productPrice: rowData.productPrice,\r\n      productUnit: rowData.productUnit,\r\n      productDetail: rowData.productDetail,\r\n      productCnt: rowData.productCnt,\r\n    };\r\n\r\n    setOrderFormData(formValues);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...orderFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setOrderFormData(newFormData);\r\n  };\r\n\r\n  //save changes\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedForm = {\r\n      userId: userID,\r\n      retailerId: retailerId,\r\n      productId: rowId,\r\n      productName: orderFormData.productName,\r\n      productPrice: orderFormData.productPrice,\r\n      productUnit: orderFormData.productUnit,\r\n      productCnt: orderFormData.productCnt,\r\n      productDetail: orderFormData.productDetail,\r\n    };\r\n\r\n    const sendForm = {\r\n      userId: userID,\r\n      productId: rowId,\r\n      productCnt: orderFormData.productCnt,\r\n    };\r\n\r\n    //console.log(editedForm);\r\n\r\n    // const ApiCallForEdit = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/retailer/edit`,editedForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios.post(`${baseURL}/order/cart/add`, sendForm).then((response) => {\r\n      if (response.data !== null) {\r\n        alert(\r\n          `물품 :${orderFormData.productName} \\n수량:${orderFormData.productCnt} ${orderFormData.productUnit}\\n장바구니 추가 성공`\r\n        );\r\n      } else {\r\n        alert(\"장바구니 추가 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.productId === rowId);\r\n\r\n    newTable[index] = editedForm;\r\n    //console.log(newTable);\r\n    setTable(newTable);\r\n    //ApiCallForEdit();\r\n    setRowId(null);\r\n    //console.log(table);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setRowId(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading || tables.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          <form onSubmit={handleEditFormSubmit}>\r\n            <table className={styles.screenPage__searchResultTable}>\r\n              <thead>\r\n                <tr className={styles.screenPage__searchResultTable_header}>\r\n                  <th>상품 이름</th>\r\n                  <th>상품 가격</th>\r\n                  <th>상품 단위</th>\r\n                  <th>상품 설명</th>\r\n                  <th>장바구니에 담기</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody className=\"testTable__tbody\">\r\n                {tables.map((tables) => (\r\n                  <Fragment key={`${tables.productId}_fragment`}>\r\n                    {rowId === tables.productId ? (\r\n                      <EditRow\r\n                        key={`${tables.productId}_edit`}\r\n                        productId={tables.productId}\r\n                        productName={tables.productName}\r\n                        productPrice={tables.productPrice}\r\n                        productUnit={tables.productUnit}\r\n                        productDetail={tables.productDetail}\r\n                        //productCnt={tables.productCnt}\r\n                        orderFormData={orderFormData}\r\n                        handleEditFormChange={handleEditFormChange}\r\n                        handleCancelClick={handleCancelClick}\r\n                      />\r\n                    ) : (\r\n                      <Tables\r\n                        key={`${tables.productId}_read`}\r\n                        productId={tables.productId}\r\n                        productName={tables.productName}\r\n                        productPrice={tables.productPrice}\r\n                        productUnit={tables.productUnit}\r\n                        productDetail={tables.productDetail}\r\n                        handleEditClick={handleEditClick}\r\n                        onProductDetailClick={onProductDetailClick}\r\n                      />\r\n                    )}\r\n                  </Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <Pagination\r\n            tablePerPage={tablePerPage}\r\n            totalTables={table.length}\r\n            paginate={paginate}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListTable;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\nfunction ProductDetail({\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productDetail,\r\n  handleBackToProducts,\r\n}) {\r\n  return (\r\n    <div className={`${styles.userInfoBox} ${styles.userInfoBox__grey}`}>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}>상품이름 : </div>\r\n        <div className={styles.userInfoList__item}>{productName} </div>\r\n      </div>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}> 상품가격 : </div>\r\n        <div className={styles.userInfoList__item}>{productPrice} </div>\r\n      </div>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}> 상품단위 : </div>\r\n        <div className={styles.userInfoList__item}>{productUnit} </div>\r\n      </div>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}> 상품메모 : </div>\r\n        <div className={styles.userInfoList__item}>{productDetail} </div>\r\n      </div>\r\n\r\n      <input\r\n        className={styles.userInfoList__saveChange}\r\n        type=\"button\"\r\n        onClick={handleBackToProducts}\r\n        value=\"물품목록\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport Fragment from \"render-fragment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadDetail from \"./readRetailerDetail\";\r\nimport ProductListTable from \"../PRODUCT_LIST_READONLY/tableRender\";\r\nimport ProductDetail from \"./productDetail\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Detail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const { id } = useParams();\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const emptyRetailerDetails = {\r\n    retailerId: -1,\r\n    retailerName: \"\",\r\n    retailerEmail: \"\",\r\n    retailerPhoneNo: \"\",\r\n    retailerDetail: \"\",\r\n  };\r\n\r\n  const [retailerDetails, setRetailerDetails] = useState(emptyRetailerDetails);\r\n\r\n  const [productDetailData, setProductDetailData] = useState({\r\n    productName: \"\",\r\n    productPrice: \"\",\r\n    productUnit: \"\",\r\n    productDetail: \"\",\r\n  });\r\n  const [showProductDetail, setShowProductDetail] = useState(false);\r\n  useEffect(() => {\r\n    const identification = {\r\n      userId: userID,\r\n    };\r\n\r\n    axios.post(`${baseURL}/retailer/${id}`, identification).then((response) => {\r\n      setRetailerDetails(response.data);\r\n      setLoading(false);\r\n    });\r\n    //test delete when real\r\n    //test\r\n    const testRetailerDetails = {\r\n      retailerId: id,\r\n      retailerName: \"test retailer\",\r\n      retailerEmail: \"testretailer@retail.com\",\r\n      retailerPhoneNo: \"00011122233344455\",\r\n      retailerDetail: \"this is test retailer description\",\r\n    };\r\n    setRetailerDetails(testRetailerDetails);\r\n  }, [id]);\r\n\r\n  const handleBackToProducts = (event) => {\r\n    event.preventDefault();\r\n    setShowProductDetail(false);\r\n  };\r\n  const onProductDetailClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    const formValues = {\r\n      productName: rowData.productName,\r\n      productPrice: rowData.productPrice,\r\n      productUnit: rowData.productUnit,\r\n      productDetail: rowData.productDetail,\r\n    };\r\n    //console.log(formValues);\r\n    setShowProductDetail(true);\r\n    setProductDetailData(formValues);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>거래처 상세</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/order/requestorder`}>\r\n          <input type=\"button\" value=\"거래처목록\" />\r\n        </Link>\r\n        <Link to={`/order/requestorder/basket`}>\r\n          <input type=\"button\" value=\"장바구니\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>거래처 상세 정보</span>\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              <ReadDetail\r\n                retailerName={retailerDetails.retailerName}\r\n                retailerEmail={retailerDetails.retailerEmail}\r\n                retailerPhoneNo={retailerDetails.retailerPhoneNo}\r\n                retailerDetail={retailerDetails.retailerDetail}\r\n              />\r\n              <div className={styles.tableTitle}>\r\n                {showProductDetail\r\n                  ? `${productDetailData.productName} 세부정보`\r\n                  : `${retailerDetails.retailerName} 판매 상품`}\r\n              </div>\r\n              {showProductDetail ? (\r\n                <ProductDetail\r\n                  productName={productDetailData.productName}\r\n                  productPrice={productDetailData.productPrice}\r\n                  productUnit={productDetailData.productUnit}\r\n                  productDetail={productDetailData.productDetail}\r\n                  handleBackToProducts={handleBackToProducts}\r\n                />\r\n              ) : (\r\n                <ProductListTable\r\n                  retailerId={id}\r\n                  onProductDetailClick={onProductDetailClick}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Detail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport RetailerDetail from \"../components/ORDER_MANAGEMENT/retailer_details\";\r\n//import SearchForOrder from \"../components/search-order\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction OrderRequestProduct({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <RetailerDetail />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOrderRequestProduct.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderRequestProduct;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faHammer } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Tables({\r\n  productId,\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productCnt,\r\n  productDetail,\r\n  cartProductId,\r\n  handleEditClick,\r\n  handleDeleteClick,\r\n  onProductDetailClick,\r\n}) {\r\n  const rowData = {\r\n    userId: userID,\r\n    productId: productId,\r\n    productCnt: productCnt,\r\n    cartProductId: cartProductId,\r\n  };\r\n  const productDetailData = {\r\n    productName: productName,\r\n    productPrice: productPrice,\r\n    productUnit: productUnit,\r\n    productDetail: productDetail,\r\n  };\r\n\r\n  //console.log(retailerAddress);\r\n\r\n  return (\r\n    <tr key={productId} className={styles.screenPage__searchResultTable_items}>\r\n      <td\r\n        key={\"productName_td\"}\r\n        onClick={(event) => onProductDetailClick(event, productDetailData)}\r\n      >\r\n        {productName}\r\n      </td>\r\n      <td key={\"productPrice_td\"}>{productPrice}</td>\r\n      <td key={\"productUnit_td\"}>{productUnit}</td>\r\n      <td key={\"productCnt_td\"}>{productCnt}</td>\r\n      <td key={\"productDesc_td\"}>\r\n        {productDetail}\r\n        {/* {productDetail.length > 10\r\n          ? `${productDetail.slice(0, 10)}...`\r\n          : `${productDetail}`} */}\r\n      </td>\r\n      <td key={\"edit_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, rowData)}\r\n        >\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faHammer} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"delete_td\"}>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(cartProductId)}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n  const { id } = useParams();\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={`/order/retailer/${id}`}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction EditRow({\r\n  productId,\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productCnt,\r\n  productDetail,\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) {\r\n  return (\r\n    <tr key={productId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"productName_td\"}>{productName}</td>\r\n      <td key={\"productPrice_td\"}>{productPrice}</td>\r\n      <td key={\"productUnit_td\"}>{productUnit}</td>\r\n      <td key={\"productCnt_td\"}>\r\n        <input\r\n          type=\"number\"\r\n          required\r\n          min=\"1\"\r\n          placeholder={productCnt}\r\n          name=\"productCnt\"\r\n          value={editFormData.productCnt}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"productDesc_td\"}>\r\n        {productDetail.length > 10\r\n          ? `${productDetail.slice(0, 10)}...`\r\n          : `${productDetail}`}\r\n      </td>\r\n      <td key={\"button_edit\"}>\r\n        <button type=\"submit\">\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faCheck} size=\"2x\" />{\" \"}\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"button_delete\"}></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EditRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\nimport EditRow from \"./editRow\";\r\nimport ProductDetail from \"../ORDER_MANAGEMENT/productDetail\";\r\n\r\n//only for testing\r\n//import TEST_BASKET_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//거래처목록\r\nfunction BasketTable() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(5);\r\n  const [table, setTable] = useState([]);\r\n  const [showProductDetail, setShowProductDetail] = useState(false);\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    userId: userID,\r\n    productId: \"\",\r\n    productCnt: 0,\r\n    cartProductId: 0,\r\n  });\r\n  const [productDetailData, setProductDetailData] = useState({\r\n    productName: \"\",\r\n    productPrice: \"\",\r\n    productUnit: \"\",\r\n    productCnt: 0,\r\n    productDetail: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n    };\r\n    axios.post(`${baseURL}/order/cart`, userData).then((response) => {\r\n      //console.log(response.data);\r\n      setTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    //only for testing erase when real\r\n    //setTable(TEST_BASKET_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  //edit data\r\n  const [rowId, setRowId] = useState(null);\r\n  const handleEditClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    setRowId(rowData.productId);\r\n\r\n    const formValues = {\r\n      userId: userID,\r\n      productId: rowData.productId,\r\n      productCnt: rowData.productCnt,\r\n      cartProductId: rowData.cartProductId,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const onProductDetailClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    const formValues = {\r\n      productName: rowData.productName,\r\n      productPrice: rowData.productPrice,\r\n      productUnit: rowData.productUnit,\r\n      productCnt: rowData.productCnt,\r\n      productDetail: rowData.productDetail,\r\n    };\r\n    //console.log(formValues);\r\n    setShowProductDetail(true);\r\n    setProductDetailData(formValues);\r\n  };\r\n  const handleBackToProducts = (event) => {\r\n    event.preventDefault();\r\n    setShowProductDetail(false);\r\n  };\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  //save changes\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedForm = {\r\n      productCnt: editFormData.productCnt,\r\n    };\r\n\r\n    //console.log(editFormData.cartProductId);\r\n    //console.log(editedForm);\r\n\r\n    axios\r\n      .put(`${baseURL}/order/cart/${editFormData.cartProductId}`, editedForm)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"물품 수량 수정 완료\");\r\n        } else {\r\n          alert(\"물품 수량 수정 실패 재시도 해주세요\");\r\n        }\r\n      });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.productId === rowId);\r\n\r\n    newTable[index].productCnt = editedForm.productCnt;\r\n    //console.log(newTable);\r\n    setTable(newTable);\r\n    //ApiCallForEdit();\r\n    setRowId(null);\r\n    //console.log(table);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setRowId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (cartProductId) => {\r\n    // const ApiCallForDelete = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/retailer/delete`,deleteForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios.delete(`${baseURL}/order/cart/${cartProductId}`).then((response) => {\r\n      if (response.data === true) {\r\n        alert(\"거래처 정보 삭제 완료\");\r\n      } else {\r\n        alert(\"거래처 정보 삭제 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.productId === rowId);\r\n    newTable.splice(index, 1);\r\n    setTable(newTable);\r\n    //ApiCallForDelete();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading || tables.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          {showProductDetail ? (\r\n            <ProductDetail\r\n              productName={productDetailData.productName}\r\n              productPrice={productDetailData.productPrice}\r\n              productUnit={productDetailData.productUnit}\r\n              productDetail={productDetailData.productDetail}\r\n              productCnt={productDetailData.productCnt}\r\n              handleBackToProducts={handleBackToProducts}\r\n            />\r\n          ) : (\r\n            <Fragment>\r\n              <form onSubmit={handleEditFormSubmit}>\r\n                <table className={styles.screenPage__searchResultTable}>\r\n                  <thead>\r\n                    <tr className={styles.screenPage__searchResultTable_header}>\r\n                      <th>상품 이름</th>\r\n                      <th>상품 가격</th>\r\n                      <th>상품 단위</th>\r\n                      <th>주문 수량</th>\r\n                      <th>상품 설명</th>\r\n                      <th>수량 수정</th>\r\n                      <th>삭제</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody className=\"testTable__tbody\">\r\n                    {tables.map((tables) => (\r\n                      <Fragment key={`${tables.productId}_fragment`}>\r\n                        {rowId === tables.productId ? (\r\n                          <EditRow\r\n                            key={tables.productId}\r\n                            productId={tables.productId}\r\n                            productName={tables.productName}\r\n                            productPrice={tables.productPrice}\r\n                            productUnit={tables.productUnit}\r\n                            productCnt={tables.productCnt}\r\n                            productDetail={tables.productDetail}\r\n                            editFormData={editFormData}\r\n                            handleEditFormChange={handleEditFormChange}\r\n                            handleCancelClick={handleCancelClick}\r\n                          />\r\n                        ) : (\r\n                          <Tables\r\n                            key={tables.productId}\r\n                            productId={tables.productId}\r\n                            productName={tables.productName}\r\n                            productPrice={tables.productPrice}\r\n                            productUnit={tables.productUnit}\r\n                            productCnt={tables.productCnt}\r\n                            productDetail={tables.productDetail}\r\n                            cartProductId={tables.cartProductId}\r\n                            handleEditClick={handleEditClick}\r\n                            handleDeleteClick={handleDeleteClick}\r\n                            onProductDetailClick={onProductDetailClick}\r\n                          />\r\n                        )}\r\n                      </Fragment>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={table.length}\r\n                paginate={paginate}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasketTable;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\n//import SearchOrderResultTable from \"./search-order-result\";\r\nimport Basket from \"../BASKET_LIST/tableRender\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction BasketDetail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const onOrderClick = (event) => {\r\n    event.preventDefault();\r\n    const orderForm = {\r\n      userId: userID,\r\n    };\r\n\r\n    axios.post(`${baseURL}/order/checkout`, orderForm).then((response) => {\r\n      if (response.data !== null) {\r\n        alert(\"주문 완료\");\r\n        //test\r\n        //window.location.href = \"/order/requestorder/basket\";\r\n        //publish\r\n        window.location.href =\r\n          \"https://ssu-mosaic.github.io/order/requestorder/basket\";\r\n      } else {\r\n        alert(\"주문 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>장바구니</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/order/requestorder\"}>\r\n          <input type=\"button\" value=\"거래처목록\" />\r\n        </Link>\r\n        <input\r\n          type=\"button\"\r\n          onClick={(event) => onOrderClick(event)}\r\n          value=\"주문하기\"\r\n        />\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>장바구니</span>\r\n        </div>\r\n        <Basket />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasketDetail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport ProductBasket from \"../components/ORDER_MANAGEMENT/productBasket\";\r\n//import SearchForOrder from \"../components/search-order\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction OrderRequestBasket({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <ProductBasket />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOrderRequestBasket.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderRequestBasket;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-item.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n//import SearchItemResultTable from \"./search-item-result\";\r\n\r\nconst userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction RetailerAdd() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  let newRetailerData = {\r\n    userId: \"\",\r\n    retailerName: \"\",\r\n    retailerPhoneNo: \"\",\r\n    retailerEmail: \"\",\r\n    retailerDetail: \"\",\r\n  };\r\n  const resetRetailerData = {\r\n    userId: \"\",\r\n    retailerName: \"\",\r\n    retailerPhoneNo: \"\",\r\n    retailerEmail: \"\",\r\n    retailerDetail: \"\",\r\n  };\r\n\r\n  const [userId] = useState(userID);\r\n  const [retailerName, setRetailerName] = useState(\"\");\r\n  const [retailerPhone, setRetailerPhone] = useState(\"\");\r\n  const [retailerEmail, setRetailerEmail] = useState(\"\");\r\n  const [retailerMemo, setRetailerMemo] = useState(\"\");\r\n\r\n  // const ApiCall = async () => {\r\n  //   const response = await axios.post(\r\n  //     `${baseURL}/retailer/add`,\r\n  //     newRetailerData\r\n  //   );\r\n  //   const data = await response.data;\r\n  //   //console.log(newRetailerData);\r\n  //   //console.log(data);\r\n\r\n  //   //setData(data);\r\n  //   //return await response.data;\r\n  // };\r\n\r\n  const onRetailerNameChange = (event) => {\r\n    setRetailerName(event.target.value);\r\n  };\r\n  const onRetailerPhoneChange = (event) => {\r\n    setRetailerPhone(event.target.value);\r\n  };\r\n  const onRetailerEmailChange = (event) => {\r\n    setRetailerEmail(event.target.value);\r\n  };\r\n  const onRetailerMemoChange = (event) => {\r\n    setRetailerMemo(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newRetailerData.userId = userId;\r\n    newRetailerData.retailerName = retailerName;\r\n    newRetailerData.retailerPhoneNo = retailerPhone;\r\n    newRetailerData.retailerEmail = retailerEmail;\r\n    newRetailerData.retailerDetail = retailerMemo;\r\n    console.log(newRetailerData);\r\n\r\n    axios.post(`${baseURL}/retailer/add`, newRetailerData).then((response) => {\r\n      if (response.data !== null) {\r\n        alert(\"거래처 등록 완료\");\r\n        //test\r\n        //window.location.href = \"/order/retailer\";\r\n        //publish\r\n        window.location.href = \"https://ssu-mosaic.github.io/order/retailer\";\r\n      } else {\r\n        alert(\"거래처 등록 실패 재시도 해주세요 \");\r\n      }\r\n    });\r\n\r\n    newRetailerData = resetRetailerData;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>거래처등록</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/order/retailer\"}>\r\n          <input type=\"button\" value=\"거래처목록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchBox}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>거래처정보입력</span>\r\n        </div>\r\n        <form onSubmit={onSubmit}>\r\n          <div\r\n            className={`${styles.screenPage__section_row} ${styles.screenPage__searchList}`}\r\n          >\r\n            <div className={styles.screenPage__section_column}>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"retailerName\">거래처이름 </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"retailerName\"\r\n                  onChange={onRetailerNameChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.screenPage__section_column}>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"retailerEmail\">거래처이메일 </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"retailerEmail\"\r\n                  onChange={onRetailerEmailChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"retailerPhoneNo\">거래처연락처 </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"retailerPhoneNo\"\r\n                  onChange={onRetailerPhoneChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.screenPage__section_column}>\r\n              <div className={styles.screenPage__searchOption}>\r\n                <label for=\"retailerDetail\">메모 </label>\r\n                <textarea\r\n                  name=\"retailerDetail\"\r\n                  onChange={onRetailerMemoChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.screenPage__section_row}>\r\n            <input type=\"submit\" value=\"등록\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RetailerAdd;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport RetailerAdd from \"../components/RETAILER_MANAGEMENT/retailer_add\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddRetailer({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <RetailerAdd />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddRetailer.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default AddRetailer;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faHammer } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Tables({\r\n  retailerId,\r\n  retailerName,\r\n  retailerPhoneNo,\r\n  retailerEmail,\r\n  retailerDetail,\r\n  handleEditClick,\r\n  handleDeleteClick,\r\n}) {\r\n  const rowData = {\r\n    userId: userID,\r\n    retailerId: retailerId,\r\n    retailerName: retailerName,\r\n    retailerPhoneNo: retailerPhoneNo,\r\n    retailerEmail: retailerEmail,\r\n    retailerDetail: retailerDetail,\r\n  };\r\n\r\n  //console.log(retailerAddress);\r\n\r\n  return (\r\n    <tr key={retailerId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"retailerName_td\"}>\r\n        <Link to={`/order/retailer/${retailerId}`}>{retailerName}</Link>\r\n      </td>\r\n      <td key={\"retailerPhone_td\"}>{retailerPhoneNo}</td>\r\n      <td key={\"retailerEmail_td\"}>{retailerEmail}</td>\r\n      <td key={\"retailerMemo_td\"}>\r\n        {retailerDetail.length > 10\r\n          ? `${retailerDetail.slice(0, 10)}...`\r\n          : `${retailerDetail}`}\r\n      </td>\r\n      <td key={\"edit_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, rowData)}\r\n        >\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faHammer} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"delete_td\"}>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(retailerId)}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction EditRow({\r\n  retailerId,\r\n  retailerName,\r\n  retailerPhoneNo,\r\n  retailerEmail,\r\n  retailerDetail,\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) {\r\n  return (\r\n    <tr key={retailerId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"retailerName_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={retailerName}\r\n          name=\"retailerName\"\r\n          value={editFormData.retailerName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"retailerPhone_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={retailerPhoneNo}\r\n          name=\"retailerPhoneNo\"\r\n          value={editFormData.retailerPhoneNo}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"retailerEmail_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={retailerEmail}\r\n          name=\"retailerEmail\"\r\n          value={editFormData.retailerEmail}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"retailerMemo_edit\"}>\r\n        <textarea\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={retailerDetail}\r\n          name=\"retailerDetail\"\r\n          value={editFormData.retailerDetail}\r\n          onChange={handleEditFormChange}\r\n        ></textarea>\r\n      </td>\r\n      <td key={\"button_edit\"}>\r\n        <button type=\"submit\">\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faCheck} size=\"2x\" />{\" \"}\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"button_delete\"}></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EditRow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link to={\"/order/retailer\"} onClick={() => paginate(number)}>\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport EditRow from \"./editRow\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\n//only for testing\r\n//import TEST_RETAILER_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//거래처목록\r\nfunction RetailerListTable() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(10);\r\n  const [table, setTable] = useState([]);\r\n\r\n  //get data from server\r\n  //\r\n  //     const ApiCallForList = async () => {\r\n  //         const response = await axios.post(`${baseURL}/retailer/list`)\r\n  //         const data = await response.data;\r\n  //         console.log(data);\r\n  //         setTable(data);\r\n  //         setLoading(false);\r\n  //         //return await response.data;\r\n  //     }\r\n  //     ApiCallForList();\r\n  //     //setTable(MOCK_DATA);\r\n\r\n  //\r\n\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n    };\r\n    axios.post(`${baseURL}/retailer`, userData).then((response) => {\r\n      //console.log(response.data);\r\n      setTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    //only for testing erase when real\r\n    //setTable(TEST_RETAILER_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  //edit data\r\n  const [rowId, setRowId] = useState(null);\r\n  const handleEditClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    setRowId(rowData.retailerId);\r\n\r\n    const formValues = {\r\n      userId: userID,\r\n      retailerId: rowData.retailerId,\r\n      retailerName: rowData.retailerName,\r\n      retailerPhoneNo: rowData.retailerPhoneNo,\r\n      retailerEmail: rowData.retailerEmail,\r\n      retailerDetail: rowData.retailerDetail,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n  const [editFormData, setEditFormData] = useState({\r\n    userId: userID,\r\n    retailerId: \"\",\r\n    retailerName: \"\",\r\n    retailerPhoneNo: \"\",\r\n    retailerEmail: \"\",\r\n    retailerDetail: \"\",\r\n  });\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  //save changes\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const editedForm = {\r\n      userId: userID,\r\n      retailerId: rowId,\r\n      retailerName: editFormData.retailerName,\r\n      retailerPhoneNo: editFormData.retailerPhoneNo,\r\n      retailerEmail: editFormData.retailerEmail,\r\n      retailerDetail: editFormData.retailerDetail,\r\n    };\r\n\r\n    // const ApiCallForEdit = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/retailer/edit`,editedForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios\r\n      .put(`${baseURL}/retailer/edit/${rowId}`, editedForm)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"거래처 정보 수정 완료\");\r\n        } else {\r\n          alert(\"거래처 정보 수정 실패 재시도 해주세요\");\r\n        }\r\n      });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.retailerId === rowId);\r\n\r\n    newTable[index] = editedForm;\r\n    //console.log(newTable);\r\n    setTable(newTable);\r\n    //ApiCallForEdit();\r\n    setRowId(null);\r\n    //console.log(table);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setRowId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (rowId) => {\r\n    const deleteForm = {\r\n      userId: userID,\r\n    };\r\n    // const ApiCallForDelete = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/retailer/delete`,deleteForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios.put(`${baseURL}/retailer/${rowId}`, deleteForm).then((response) => {\r\n      if (response.data === true) {\r\n        alert(\"거래처 정보 삭제 완료\");\r\n      } else {\r\n        alert(\"거래처 정보 삭제 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.retailerId === rowId);\r\n    newTable.splice(index, 1);\r\n    setTable(newTable);\r\n    //ApiCallForDelete();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading || table.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          <form onSubmit={handleEditFormSubmit}>\r\n            <table className={styles.screenPage__searchResultTable}>\r\n              <thead>\r\n                <tr className={styles.screenPage__searchResultTable_header}>\r\n                  <th>거래처 이름</th>\r\n                  <th>거래처 연락처</th>\r\n                  <th>거래처 이메일</th>\r\n                  <th>거래처 메모</th>\r\n                  <th>수정</th>\r\n                  <th>삭제</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody className=\"testTable__tbody\">\r\n                {tables.map((tables) => (\r\n                  <Fragment key={`${tables.retailerId}_fragment`}>\r\n                    {rowId === tables.retailerId ? (\r\n                      <EditRow\r\n                        key={tables.retailerId}\r\n                        retailerId={tables.retailerId}\r\n                        retailerName={tables.retailerName}\r\n                        retailerPhoneNo={tables.retailerPhoneNo}\r\n                        retailerEmail={tables.retailerEmail}\r\n                        retailerDetail={tables.retailerDetail}\r\n                        editFormData={editFormData}\r\n                        handleEditFormChange={handleEditFormChange}\r\n                        handleCancelClick={handleCancelClick}\r\n                      />\r\n                    ) : (\r\n                      <Tables\r\n                        key={tables.retailerId}\r\n                        retailerId={tables.retailerId}\r\n                        retailerName={tables.retailerName}\r\n                        retailerPhoneNo={tables.retailerPhoneNo}\r\n                        retailerEmail={tables.retailerEmail}\r\n                        retailerDetail={tables.retailerDetail}\r\n                        handleEditClick={handleEditClick}\r\n                        handleDeleteClick={handleDeleteClick}\r\n                      />\r\n                    )}\r\n                  </Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <Pagination\r\n            tablePerPage={tablePerPage}\r\n            totalTables={table.length}\r\n            paginate={paginate}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RetailerListTable;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\n//import ConfirmItemResultTable from \"./order-confirm-result\";\r\nimport RetailerListTable from \"../RETAILER_LIST/tableRender\";\r\nimport React from \"react\";\r\n//import { DateRangePicker } from 'rsuite';\r\n//import 'rsuite/dist/rsuite.css';\r\n//import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RetailerListRead() {\r\n  /*\r\n    const [dateRange, setDateRange] = useState([new Date(), new Date()]);\r\n\r\n    const onDateChange = (event) =>{\r\n        if(Array.isArray(event)){\r\n            console.log(event);\r\n            setDateRange(event);\r\n            console.log(event[0]);\r\n        }\r\n        else{\r\n            setDateRange([new Date(), new Date()]);\r\n        }\r\n    }\r\n    */\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>거래처목록</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={\"/order/retailer/add\"}>\r\n          <input type=\"button\" value=\"거래처등록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchBox}>\r\n        {/* <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form method=\"get\">\r\n                    <div className={`${styles.screenPage__section_column} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label>발주기간 </label> \r\n                                <DateRangePicker size=\"xs\" value={dateRange} onChange={onDateChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">매입거래처 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">물품명 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.screenPage__section_column}>\r\n                            <input type=\"submit\" value=\"조회\"/>\r\n                    </div>\r\n                </form> */}\r\n      </div>\r\n\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>거래처리스트</span>\r\n        </div>\r\n        <RetailerListTable />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RetailerListRead;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport RetailerListRead from \"../components/RETAILER_MANAGEMENT/retailerList_read\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction RetailerList({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <RetailerListRead />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nRetailerList.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RetailerList;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\n//let userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction ReadUserInfo({\r\n  retailerName,\r\n  retailerEmail,\r\n  retailerPhoneNo,\r\n  retailerDetail,\r\n}) {\r\n  return (\r\n    <div className={styles.userInfoBox}>\r\n      <ul className={styles.userInfoList}>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 이름 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerName}</div>\r\n        </li>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 이메일 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerEmail}</div>\r\n        </li>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 번호 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerPhoneNo}</div>\r\n        </li>\r\n        <li>\r\n          <div className={styles.userInfoList__title}>거래처 설명 : </div>\r\n          <div className={styles.userInfoList__readonly}>{retailerDetail}</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadUserInfo;\r\n","import styles from \"../css/userInfo.module.css\";\r\nimport Fragment from \"render-fragment\";\r\n\r\nfunction EditRetailerDetail({\r\n  retailerName,\r\n  retailerEmail,\r\n  retailerPhoneNo,\r\n  retailerDetail,\r\n  onRetailerDetailCancelClick,\r\n  handleRetailerFormChange,\r\n  onRetailerFormSubmit,\r\n  newRetailerDetails,\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onRetailerFormSubmit}>\r\n        <div className={styles.userInfoBox}>\r\n          <ul className={styles.userInfoList}>\r\n            <li>\r\n              <div className={styles.userInfoList__title}>거래처 이름 : </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"retailerName\"\r\n                placeholder={retailerName}\r\n                value={newRetailerDetails.retailerName}\r\n                onChange={handleRetailerFormChange}\r\n                required\r\n              />\r\n            </li>\r\n            <li>\r\n              <div className={styles.userInfoList__title}>거래처 이메일 : </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"retailerEmail\"\r\n                placeholder={retailerEmail}\r\n                value={newRetailerDetails.retailerEmail}\r\n                onChange={handleRetailerFormChange}\r\n                required\r\n              />\r\n            </li>\r\n            <li>\r\n              <div className={styles.userInfoList__title}>거래처 번호 : </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"retailerPhoneNo\"\r\n                placeholder={retailerPhoneNo}\r\n                value={newRetailerDetails.retailerPhoneNo}\r\n                onChange={handleRetailerFormChange}\r\n                required\r\n              />\r\n            </li>\r\n            <li>\r\n              <div className={styles.userInfoList__title}>거래처 설명 : </div>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"retailerDetail\"\r\n                placeholder={retailerDetail}\r\n                value={newRetailerDetails.retailerDetail}\r\n                onChange={handleRetailerFormChange}\r\n                required\r\n              />\r\n            </li>\r\n          </ul>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"수정완료\"\r\n            className={styles.userInfoList__saveChange}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            value=\"수정취소\"\r\n            onClick={onRetailerDetailCancelClick}\r\n            className={styles.userInfoList__saveChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default EditRetailerDetail;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\nfunction AddProduct({\r\n  handleProductFormChange,\r\n  onAddProductCancelClick,\r\n  onProductFormSubmit,\r\n}) {\r\n  return (\r\n    <div className={`${styles.userInfoBox} ${styles.userInfoBox__grey}`}>\r\n      <form onSubmit={onProductFormSubmit}>\r\n        <div className={styles.userInfo_row}>\r\n          <label className={styles.userInfoList__title} for=\"productName\">\r\n            상품이름 :{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"productName\"\r\n            onChange={handleProductFormChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.userInfo_row}>\r\n          <label className={styles.userInfoList__title} for=\"productPrice\">\r\n            {\" \"}\r\n            상품가격 :{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"productPrice\"\r\n            onChange={handleProductFormChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.userInfo_row}>\r\n          <label className={styles.userInfoList__title} for=\"productUnit\">\r\n            {\" \"}\r\n            상품단위 :{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"productUnit\"\r\n            onChange={handleProductFormChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={styles.userInfo_row}>\r\n          <div className={styles.userInfoList__title}> 상품메모 : </div>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"productDetail\"\r\n            onChange={handleProductFormChange}\r\n            required\r\n          />\r\n        </div>\r\n        <input\r\n          className={styles.userInfoList__saveChange}\r\n          type=\"submit\"\r\n          value=\"물품추가\"\r\n        />\r\n        <input\r\n          className={styles.userInfoList__saveChange}\r\n          type=\"button\"\r\n          onClick={onAddProductCancelClick}\r\n          value=\"취소\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProduct;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faHammer } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Tables({\r\n  productId,\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productDetail,\r\n  handleEditClick,\r\n  handleDeleteClick,\r\n  onProductDetailClick,\r\n}) {\r\n  const rowData = {\r\n    userId: userID,\r\n    productId: productId,\r\n    productName: productName,\r\n    productPrice: productPrice,\r\n    productUnit: productUnit,\r\n    productDetail: productDetail,\r\n  };\r\n  const productDetailData = {\r\n    productName: productName,\r\n    productPrice: productPrice,\r\n    productUnit: productUnit,\r\n    productDetail: productDetail,\r\n  };\r\n\r\n  //console.log(retailerAddress);\r\n\r\n  return (\r\n    <tr key={productId} className={styles.screenPage__searchResultTable_items}>\r\n      <td\r\n        key={\"productName_td\"}\r\n        onClick={(event) => onProductDetailClick(event, productDetailData)}\r\n      >\r\n        {productName}\r\n      </td>\r\n      <td key={\"productPrice_td\"}>{productPrice}</td>\r\n      <td key={\"productUnit_td\"}>{productUnit}</td>\r\n      <td key={\"productDesc_td\"}>\r\n        {productDetail}\r\n        {/* {productDetail.length > 10\r\n          ? `${productDetail.slice(0, 10)}...`\r\n          : `${productDetail}`} */}\r\n      </td>\r\n      <td key={\"edit_td\"}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, rowData)}\r\n        >\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faHammer} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"delete_td\"}>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(productId)}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction EditRow({\r\n  productId,\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productDetail,\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) {\r\n  return (\r\n    <tr key={productId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"retailerName_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={productName}\r\n          name=\"productName\"\r\n          value={editFormData.productName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"retailerPhone_edit\"}>\r\n        <input\r\n          type=\"number\"\r\n          required=\"required\"\r\n          placeholder={productPrice}\r\n          name=\"productPrice\"\r\n          value={editFormData.productPrice}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"retailerEmail_edit\"}>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={productUnit}\r\n          name=\"productUnit\"\r\n          value={editFormData.productUnit}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td key={\"retailerMemo_edit\"}>\r\n        <textarea\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder={productDetail}\r\n          name=\"productDetail\"\r\n          value={editFormData.productDetail}\r\n          onChange={handleEditFormChange}\r\n        ></textarea>\r\n      </td>\r\n      <td key={\"button_edit\"}>\r\n        <button type=\"submit\">\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faCheck} size=\"2x\" />{\" \"}\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faTimes} size=\"2x\" />{\" \"}\r\n        </button>\r\n      </td>\r\n      <td key={\"button_delete\"}></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EditRow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n  const { id } = useParams();\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={`/order/retailer/${id}`}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tables from \"./Tables\";\r\nimport EditRow from \"./editRow\";\r\nimport Pagination from \"./paginationNoHook\";\r\nimport Fragment from \"render-fragment\";\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\n//only for testing\r\nimport TEST_PRODUCT_DATA from \"./MOCK_DATA.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\n//거래처목록\r\nfunction ProductListTable({ retailerId, onProductDetailClick }) {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  // If purpose for testing without server useState(false)\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(5);\r\n  const [table, setTable] = useState([]);\r\n  const [editFormData, setEditFormData] = useState({\r\n    retailerId: retailerId,\r\n    productName: \"\",\r\n    productPrice: \"\",\r\n    productUnit: \"\",\r\n    productDetail: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const userData = {\r\n      userId: userID,\r\n      retailerId: retailerId,\r\n    };\r\n    axios.post(`${baseURL}/retailer/product`, userData).then((response) => {\r\n      //console.log(response.data);\r\n      setTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    //only for testing erase when real\r\n    setTable(TEST_PRODUCT_DATA);\r\n  }, [retailerId]);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  //edit data\r\n  const [rowId, setRowId] = useState(null);\r\n  const handleEditClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    setRowId(rowData.productId);\r\n\r\n    const formValues = {\r\n      retailerId: retailerId,\r\n      productName: rowData.productName,\r\n      productPrice: rowData.productPrice,\r\n      productUnit: rowData.productUnit,\r\n      productDetail: rowData.productDetail,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  //save changes\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedForm = {\r\n      retailerId: retailerId,\r\n      productName: editFormData.productName,\r\n      productPrice: editFormData.productPrice,\r\n      productUnit: editFormData.productUnit,\r\n      productDetail: editFormData.productDetail,\r\n    };\r\n\r\n    // const ApiCallForEdit = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/retailer/edit`,editedForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios\r\n      .put(`${baseURL}/retailer/product/edit/${rowId}`, editedForm)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"물품 수정 완료\");\r\n        } else {\r\n          alert(\"물품 수정 실패 재시도 해주세요\");\r\n        }\r\n      });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.productId === rowId);\r\n\r\n    newTable[index] = editedForm;\r\n    //console.log(newTable);\r\n    setTable(newTable);\r\n    //ApiCallForEdit();\r\n    setRowId(null);\r\n    //console.log(table);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setRowId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (rowId) => {\r\n    const deleteForm = {\r\n      retailerId: retailerId,\r\n    };\r\n    // const ApiCallForDelete = async () => {\r\n    //     //const response =\r\n    //     await axios.post(`${baseURL}/retailer/delete`,deleteForm)\r\n    //     //const data = await response.data;\r\n    //     //console.log(data);\r\n    // }\r\n    axios\r\n      .put(`${baseURL}/retailer/product/${rowId}`, deleteForm)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"거래처 정보 삭제 완료\");\r\n        } else {\r\n          alert(\"거래처 정보 삭제 실패 재시도 해주세요\");\r\n        }\r\n      });\r\n\r\n    const newTable = [...table];\r\n    const index = table.findIndex((row) => row.productId === rowId);\r\n    newTable.splice(index, 1);\r\n    setTable(newTable);\r\n    //ApiCallForDelete();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading || table.length === 0 ? (\r\n        <strong>로딩중...</strong>\r\n      ) : (\r\n        <Fragment>\r\n          <form onSubmit={handleEditFormSubmit}>\r\n            <table className={styles.screenPage__searchResultTable}>\r\n              <thead>\r\n                <tr className={styles.screenPage__searchResultTable_header}>\r\n                  <th>상품 이름</th>\r\n                  <th>상품 가격</th>\r\n                  <th>상품 단위</th>\r\n                  <th>상품 설명</th>\r\n                  <th>수정</th>\r\n                  <th>삭제</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody className=\"testTable__tbody\">\r\n                {tables.map((tables) => (\r\n                  <Fragment key={`${tables.productId}_fragment`}>\r\n                    {rowId === tables.productId ? (\r\n                      <EditRow\r\n                        key={tables.productId}\r\n                        productId={tables.productId}\r\n                        productName={tables.productName}\r\n                        productPrice={tables.productPrice}\r\n                        productUnit={tables.productUnit}\r\n                        productDetail={tables.productDetail}\r\n                        editFormData={editFormData}\r\n                        handleEditFormChange={handleEditFormChange}\r\n                        handleCancelClick={handleCancelClick}\r\n                      />\r\n                    ) : (\r\n                      <Tables\r\n                        key={tables.productId}\r\n                        productId={tables.productId}\r\n                        productName={tables.productName}\r\n                        productPrice={tables.productPrice}\r\n                        productUnit={tables.productUnit}\r\n                        productDetail={tables.productDetail}\r\n                        handleEditClick={handleEditClick}\r\n                        handleDeleteClick={handleDeleteClick}\r\n                        onProductDetailClick={onProductDetailClick}\r\n                      />\r\n                    )}\r\n                  </Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n          <Pagination\r\n            tablePerPage={tablePerPage}\r\n            totalTables={table.length}\r\n            paginate={paginate}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListTable;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\nfunction ProductDetail({\r\n  productName,\r\n  productPrice,\r\n  productUnit,\r\n  productDetail,\r\n  handleBackToProducts,\r\n}) {\r\n  return (\r\n    <div className={`${styles.userInfoBox} ${styles.userInfoBox__grey}`}>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}>상품이름 : </div>\r\n        <div className={styles.userInfoList__item}>{productName} </div>\r\n      </div>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}> 상품가격 : </div>\r\n        <div className={styles.userInfoList__item}>{productPrice} </div>\r\n      </div>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}> 상품단위 : </div>\r\n        <div className={styles.userInfoList__item}>{productUnit} </div>\r\n      </div>\r\n      <div className={styles.userInfo_row}>\r\n        <div className={styles.userInfoList__title}> 상품메모 : </div>\r\n        <div className={styles.userInfoList__item}>{productDetail} </div>\r\n      </div>\r\n\r\n      <input\r\n        className={styles.userInfoList__saveChange}\r\n        type=\"button\"\r\n        onClick={handleBackToProducts}\r\n        value=\"물품목록\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport Fragment from \"render-fragment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadDetail from \"./readRetailerDetail\";\r\nimport EditData from \"./editRetailerDetail\";\r\nimport AddProduct from \"./addProduct\";\r\nimport ProductListTable from \"../PRODUCT_LIST/tableRender\";\r\nimport ProductDetail from \"./productDetail\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Detail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const { id } = useParams();\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const emptyRetailerDetails = {\r\n    retailerId: -1,\r\n    retailerName: \"\",\r\n    retailerEmail: \"\",\r\n    retailerPhoneNo: \"\",\r\n    retailerDetail: \"\",\r\n  };\r\n\r\n  const emptyProductForm = {\r\n    productName: \"\",\r\n    productPrice: -1,\r\n    productUnit: \"\",\r\n    productDetail: \"\",\r\n    retailerId: parseInt(id),\r\n  };\r\n\r\n  const [retailerDetails, setRetailerDetails] = useState(emptyRetailerDetails);\r\n  const [newRetailerDetails, setNewRetailerDetails] =\r\n    useState(emptyRetailerDetails);\r\n  const [retailerDetailEdit, setRetailerDetailEdit] = useState(false);\r\n  const [addProductToggle, setAddProductToggle] = useState(false);\r\n  const [newProduct, setNewProduct] = useState(emptyProductForm);\r\n  const [productDetailData, setProductDetailData] = useState({\r\n    productName: \"\",\r\n    productPrice: \"\",\r\n    productUnit: \"\",\r\n    productDetail: \"\",\r\n  });\r\n  const [showProductDetail, setShowProductDetail] = useState(false);\r\n  useEffect(() => {\r\n    const identification = {\r\n      userId: userID,\r\n    };\r\n    axios.post(`${baseURL}/retailer/${id}`, identification).then((response) => {\r\n      setRetailerDetails(response.data);\r\n      setNewRetailerDetails(response.data);\r\n      setLoading(false);\r\n    });\r\n    //test delete when real\r\n    //test\r\n    // const testRetailerDetails = {\r\n    //   retailerId: id,\r\n    //   retailerName: \"test retailer\",\r\n    //   retailerEmail: \"testretailer@retail.com\",\r\n    //   retailerPhoneNo: \"00011122233344455\",\r\n    //   retailerDetail: \"this is test retailer description\",\r\n    // };\r\n    // setRetailerDetails(testRetailerDetails);\r\n    // setNewRetailerDetails(testRetailerDetails);\r\n  }, [id]);\r\n\r\n  const handleBackToProducts = (event) => {\r\n    event.preventDefault();\r\n    setShowProductDetail(false);\r\n  };\r\n  const onProductDetailClick = (event, rowData) => {\r\n    event.preventDefault();\r\n    const formValues = {\r\n      productName: rowData.productName,\r\n      productPrice: rowData.productPrice,\r\n      productUnit: rowData.productUnit,\r\n      productDetail: rowData.productDetail,\r\n    };\r\n    //console.log(formValues);\r\n    setShowProductDetail(true);\r\n    setProductDetailData(formValues);\r\n  };\r\n  const onAddProductClick = () => {\r\n    setAddProductToggle(true);\r\n  };\r\n  const onRetailerEditClick = () => {\r\n    setRetailerDetailEdit(true);\r\n  };\r\n  const handleRetailerFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...retailerDetails };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setNewRetailerDetails(newFormData);\r\n    setRetailerDetails(newFormData);\r\n  };\r\n\r\n  const onRetailerDetailCancelClick = (event) => {\r\n    event.preventDefault();\r\n    setRetailerDetailEdit(false);\r\n    setNewRetailerDetails(retailerDetails);\r\n  };\r\n\r\n  const onRetailerFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setRetailerDetailEdit(false);\r\n    setRetailerDetails(newRetailerDetails);\r\n    axios\r\n      .put(`${baseURL}/retailer/edit/${id}`, retailerDetails)\r\n      .then((response) => {\r\n        if (response.data !== null) {\r\n          alert(\"거래처 정보 수정 완료\");\r\n        } else {\r\n          alert(\"거래처 정보 수정 실패\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleProductFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...newProduct };\r\n    newFormData[fieldName] = fieldValue;\r\n    setNewProduct(newFormData);\r\n  };\r\n\r\n  const onAddProductCancelClick = (event) => {\r\n    event.preventDefault();\r\n    setAddProductToggle(false);\r\n    setNewProduct(emptyProductForm);\r\n  };\r\n  const onProductFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setAddProductToggle(false);\r\n    console.log(newProduct);\r\n    axios\r\n      .post(`${baseURL}/retailer/product/add`, newProduct)\r\n      .then((response) => {\r\n        if (response.data !== null) {\r\n          alert(\"물품 등록 완료\");\r\n          //test\r\n          //window.location.href = `/order/retailer/${id}`;\r\n          //publish\r\n          window.location.href = `https://ssu-mosaic.github.io/order/retailer/${id}`;\r\n        } else {\r\n          alert(\"물품 등록 실패 재시도 해주세요\");\r\n        }\r\n        setNewProduct(emptyProductForm);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>거래처 상세</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <input\r\n          type=\"button\"\r\n          value=\"거래처수정\"\r\n          onClick={onRetailerEditClick}\r\n          disabled={addProductToggle}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"물품추가\"\r\n          onClick={onAddProductClick}\r\n          disabled={retailerDetailEdit}\r\n        />\r\n        <Link to={`/order/retailer`}>\r\n          <input type=\"button\" value=\"거래처목록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>\r\n            {addProductToggle\r\n              ? `거래처 ${retailerDetails.retailerName} 물품추가`\r\n              : \"거래처 상세 정보\"}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          {loading || retailerDetails.retailerId === -1 ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              {addProductToggle ? (\r\n                <AddProduct\r\n                  handleProductFormChange={handleProductFormChange}\r\n                  onAddProductCancelClick={onAddProductCancelClick}\r\n                  onProductFormSubmit={onProductFormSubmit}\r\n                />\r\n              ) : retailerDetailEdit ? (\r\n                <EditData\r\n                  retailerName={newRetailerDetails.retailerName}\r\n                  retailerEmail={newRetailerDetails.retailerEmail}\r\n                  retailerPhoneNo={newRetailerDetails.retailerPhoneNo}\r\n                  retailerDetail={newRetailerDetails.retailerDetail}\r\n                  handleRetailerFormChange={handleRetailerFormChange}\r\n                  onRetailerDetailCancelClick={onRetailerDetailCancelClick}\r\n                  onRetailerFormSubmit={onRetailerFormSubmit}\r\n                  newRetailerDetails={newRetailerDetails}\r\n                />\r\n              ) : (\r\n                <Fragment>\r\n                  <ReadDetail\r\n                    retailerName={retailerDetails.retailerName}\r\n                    retailerEmail={retailerDetails.retailerEmail}\r\n                    retailerPhoneNo={retailerDetails.retailerPhoneNo}\r\n                    retailerDetail={retailerDetails.retailerDetail}\r\n                  />\r\n                  <div className={styles.tableTitle}>\r\n                    {showProductDetail\r\n                      ? `${productDetailData.productName} 세부정보`\r\n                      : `${retailerDetails.retailerName} 판매 상품`}\r\n                  </div>\r\n                  {showProductDetail ? (\r\n                    <ProductDetail\r\n                      productName={productDetailData.productName}\r\n                      productPrice={productDetailData.productPrice}\r\n                      productUnit={productDetailData.productUnit}\r\n                      productDetail={productDetailData.productDetail}\r\n                      handleBackToProducts={handleBackToProducts}\r\n                    />\r\n                  ) : (\r\n                    <ProductListTable\r\n                      retailerId={id}\r\n                      onProductDetailClick={onProductDetailClick}\r\n                    />\r\n                  )}\r\n                </Fragment>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Detail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport Detail from \"../components/RETAILER_MANAGEMENT/retailer_details\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction RetailerDetails({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <Detail />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nRetailerDetails.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RetailerDetails;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\nfunction ReadUserInfo({\r\n  userId,\r\n  userPwd,\r\n  userAddress,\r\n  userName,\r\n  userPhoneNo,\r\n  userBusinessNo,\r\n  userEmail,\r\n}) {\r\n  const blind = \"*\";\r\n\r\n  return (\r\n    <div className={styles.userInfoBox}>\r\n      <ul className={styles.userInfoList}>\r\n        <li>\r\n          <div>아이디 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userId}</div>\r\n        </li>\r\n        <li>\r\n          <div>비밀번호 : </div>\r\n          <div className={styles.userInfoList__readonly}>\r\n            {blind.repeat(userPwd.length)}\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div>이름 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userName}</div>\r\n        </li>\r\n        <li>\r\n          <div>주소 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userAddress}</div>\r\n        </li>\r\n        <li>\r\n          <div>전화번호 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userPhoneNo}</div>\r\n        </li>\r\n        <li>\r\n          <div>사업자번호 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userBusinessNo}</div>\r\n        </li>\r\n        <li>\r\n          <div>이메일 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userEmail}</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadUserInfo;\r\n","import styles from \"../css/userInfo.module.css\";\r\n\r\nfunction EditUserInfo({\r\n  userId,\r\n  userPwd,\r\n  userAddress,\r\n  userName,\r\n  userPhoneNo,\r\n  userBusinessNo,\r\n  userEmail,\r\n  onSaveClick,\r\n  onCancelClick,\r\n  handleEditFormChange,\r\n}) {\r\n  const blind = \"*\";\r\n\r\n  return (\r\n    <div className={styles.userInfoBox}>\r\n      <ul className={styles.userInfoList}>\r\n        <li>\r\n          <div>아이디 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userId}</div>\r\n        </li>\r\n        <li>\r\n          <div>비밀번호 : </div>\r\n          <input\r\n            type=\"password\"\r\n            name=\"userPwd\"\r\n            placeholder={blind.repeat(userPwd.length)}\r\n            onChange={handleEditFormChange}\r\n            required\r\n          />\r\n        </li>\r\n        <li>\r\n          <div>이름 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userName}</div>\r\n        </li>\r\n        <li>\r\n          <div>주소 : </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userAddress\"\r\n            placeholder={userAddress}\r\n            onChange={handleEditFormChange}\r\n            required\r\n          />\r\n        </li>\r\n        <li>\r\n          <div>전화번호 : </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userPhoneNo\"\r\n            placeholder={userPhoneNo}\r\n            onChange={handleEditFormChange}\r\n            required\r\n          />\r\n        </li>\r\n        <li>\r\n          <div>사업자번호 : </div>\r\n          <div className={styles.userInfoList__readonly}>{userBusinessNo}</div>\r\n        </li>\r\n        <li>\r\n          <div>이메일 : </div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userEmail\"\r\n            placeholder={userEmail}\r\n            onChange={handleEditFormChange}\r\n            required\r\n          />\r\n        </li>\r\n      </ul>\r\n      <input\r\n        type=\"button\"\r\n        value=\"수정완료\"\r\n        onClick={onSaveClick}\r\n        className={styles.userInfoList__saveChange}\r\n      />\r\n      <input\r\n        type=\"button\"\r\n        value=\"수정취소\"\r\n        onClick={onCancelClick}\r\n        className={styles.userInfoList__saveChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUserInfo;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Fragment from \"render-fragment\";\r\nimport ReadUserInfo from \"./readUserInfo\";\r\nimport EditUserInfo from \"./editUserInfo\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction ShowEditUserInfo() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const emptyUserData = {\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n    userAddress: \"\",\r\n    userName: \"\",\r\n    userPhoneNo: \"\",\r\n    userBusinessNo: \"\",\r\n    userEmail: \"\",\r\n  };\r\n\r\n  // const testUserData = {\r\n  //   userId: \"lomantic\",\r\n  //   userPwd: \"12345678\",\r\n  //   userAddress: \"mars\",\r\n  //   userName: \"jhp\",\r\n  //   userPhoneNo: \"000111333444\",\r\n  //   userBusinessNo: \"0101010101010101\",\r\n  //   userEmail: \"lomantic@gmail.com\",\r\n  // };\r\n\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(false);\r\n  // testing useState : testUserData real: emptyUserData\r\n  const [userData, setUserData] = useState(emptyUserData);\r\n  const [newUserData, setNewUserData] = useState(emptyUserData);\r\n  const [editData, setEditData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const identification = {\r\n      userId: userID,\r\n    };\r\n\r\n    axios.post(`${baseURL}/myinfo`, identification).then((response) => {\r\n      setUserData(response.data);\r\n      setNewUserData(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const onEditDataClick = (event) => {\r\n    event.preventDefault();\r\n    setEditData(true);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...userData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setUserData(newFormData);\r\n    setNewUserData(newFormData);\r\n    //console.log(userData);\r\n  };\r\n\r\n  const onCancelClick = (event) => {\r\n    event.preventDefault();\r\n    setEditData(false);\r\n    setNewUserData(userData);\r\n  };\r\n\r\n  const onSaveClick = (event) => {\r\n    event.preventDefault();\r\n    setEditData(false);\r\n    axios.put(`${baseURL}/myinfo/change`, userData).then((response) => {\r\n      if (response.data === true) {\r\n        alert(\"회원 정보 수정 완료\");\r\n      } else {\r\n        alert(\r\n          \"회원 정보 수정 실패 \\n 잘못된 비밀번호 또는 회원 정보 중 타 계정과 중복되는 정보가 있습니다 \"\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>회원정보</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <input\r\n          type=\"button\"\r\n          value=\"회원정보수정\"\r\n          onClick={onEditDataClick}\r\n          disabled={editData}\r\n        />\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <div>\r\n            {loading ? (\r\n              <strong>로딩중...</strong>\r\n            ) : (\r\n              <Fragment>\r\n                <span>회원정보</span>\r\n                {editData ? (\r\n                  <EditUserInfo\r\n                    userId={newUserData.userId}\r\n                    userPwd={newUserData.userPwd}\r\n                    userAddress={newUserData.userAddress}\r\n                    userName={newUserData.userName}\r\n                    userPhoneNo={newUserData.userPhoneNo}\r\n                    userBusinessNo={newUserData.userBusinessNo}\r\n                    userEmail={newUserData.userEmail}\r\n                    onSaveClick={onSaveClick}\r\n                    onCancelClick={onCancelClick}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                  />\r\n                ) : (\r\n                  <ReadUserInfo\r\n                    userId={userData.userId}\r\n                    userPwd={userData.userPwd}\r\n                    userAddress={userData.userAddress}\r\n                    userName={userData.userName}\r\n                    userPhoneNo={userData.userPhoneNo}\r\n                    userBusinessNo={userData.userBusinessNo}\r\n                    userEmail={userData.userEmail}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowEditUserInfo;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport ShowEditUserInfo from \"../components/USER_INFO/showEditUserInfo\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction UserInfo({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <ShowEditUserInfo />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserInfo.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserInfo;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport pwStyles from \"../css/userInfo_pwForm.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\nfunction DeleteUserInfo() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [pwdAgain, setPwdAgain] = useState(\"\");\r\n  const [lastConfirm, setLastConfirm] = useState(\"\");\r\n\r\n  const onPwdChange = (event) => {\r\n    setPwd(event.target.value);\r\n  };\r\n  const onPwdAgainChange = (event) => {\r\n    setPwdAgain(event.target.value);\r\n  };\r\n  const onConfirmChange = (event) => {\r\n    setLastConfirm(event.target.value);\r\n  };\r\n\r\n  const onDeleteSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (pwd !== pwdAgain || lastConfirm !== \"확인했습니다\") {\r\n      alert(\"비밀번호 불일치 또는 인증문자 불일치\");\r\n    } else {\r\n      const identification = {\r\n        userId: userID,\r\n      };\r\n      axios.put(`${baseURL}/withdraw`, identification).then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"회원 탈퇴 완료\");\r\n          localStorage.setItem(\"USER_ID\", null);\r\n          //test\r\n          //window.location.href = \"/login\";\r\n          //publish\r\n          window.location.href = \"https://ssu-mosaic.github.io/login\";\r\n        } else {\r\n          alert(\"회원 탈퇴 실패 재시도 해주세요 \");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>회원탈퇴</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/user/info`}>\r\n          <input type=\"button\" value=\"회원정보\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>회원탈퇴</div>\r\n        <div className={pwStyles.userInfoBox}>\r\n          <form onSubmit={onDeleteSubmit}>\r\n            <div className={pwStyles.userInfoBox__row}>\r\n              <div className={pwStyles.userInfoBox__title}>비밀번호 : </div>\r\n              <input type=\"password\" onChange={onPwdChange} required />\r\n            </div>\r\n            <div className={pwStyles.userInfoBox__row}>\r\n              <div className={pwStyles.userInfoBox__title}>\r\n                비밀번호 재확인:\r\n              </div>\r\n              <input type=\"password\" onChange={onPwdAgainChange} required />\r\n            </div>\r\n            <div className={pwStyles.userInfoBox__row}>\r\n              <div\r\n                className={`${pwStyles.userInfoBox__title} ${pwStyles.alertMessage}`}\r\n              >\r\n                회원 탈퇴시 모든 정보가 삭제 되며 복구될 수 없음을\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"확인했습니다\"\r\n                onChange={onConfirmChange}\r\n                className={pwStyles.alertMessage}\r\n                required\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"탈퇴요청\" className={pwStyles.button} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteUserInfo;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport DeleteUserInfo from \"../components/USER_INFO/deleteUserInfo\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction UserDelete({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <DeleteUserInfo />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserDelete.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserDelete;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport pwStyles from \"../css/userInfo_pwForm.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\nfunction ChangeUserPwd() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const [newPwd, setNewPwd] = useState(\"\");\r\n  const [newPwdAgain, setNewPwdAgain] = useState(\"\");\r\n  const [oldPwd, setOldPwd] = useState(\"\");\r\n\r\n  const onPwdChange = (event) => {\r\n    setNewPwd(event.target.value);\r\n  };\r\n  const onPwdAgainChange = (event) => {\r\n    setNewPwdAgain(event.target.value);\r\n  };\r\n  const onConfirmChange = (event) => {\r\n    setOldPwd(event.target.value);\r\n  };\r\n\r\n  const onChangeSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newPwd !== newPwdAgain || oldPwd === newPwd) {\r\n      alert(\"비밀번호 불일치 또는 이전과 다른 비밀번호를 작성해주세요\");\r\n    } else {\r\n      const changeNewPwd = {\r\n        userId: userID,\r\n        userPwd: newPwd,\r\n      };\r\n      axios\r\n        .put(`${baseURL}/myinfo/changepwd`, changeNewPwd)\r\n        .then((response) => {\r\n          if (response.data === true) {\r\n            alert(\"비밀번호 수정 완료\");\r\n            //test\r\n            //window.location.href = \"/user/info\";\r\n            //publish\r\n            window.location.href = \"https://ssu-mosaic.github.io/user/info\";\r\n          } else {\r\n            alert(\"비밀번호 수정 실패 재시도 해주세요 \");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>비밀번호 수정</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/user/info`}>\r\n          <input type=\"button\" value=\"회원정보\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>비밀번호 수정</div>\r\n        <div className={pwStyles.userInfoBox}>\r\n          <form onSubmit={onChangeSubmit}>\r\n            <div className={pwStyles.userInfoBox__row}>\r\n              <div className={pwStyles.userInfoBox__title}>\r\n                이전 비밀번호 확인:\r\n              </div>\r\n              <input type=\"password\" onChange={onConfirmChange} required />\r\n            </div>\r\n            <div className={pwStyles.userInfoBox__row}>\r\n              <div className={pwStyles.userInfoBox__title}>새 비밀번호 : </div>\r\n              <input type=\"password\" onChange={onPwdChange} required />\r\n            </div>\r\n            <div className={pwStyles.userInfoBox__row}>\r\n              <div className={pwStyles.userInfoBox__title}>\r\n                새 비밀번호 재확인:\r\n              </div>\r\n              <input type=\"password\" onChange={onPwdAgainChange} required />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"수정요청\" className={pwStyles.button} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeUserPwd;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport ChangeUserPwd from \"../components/USER_INFO/changePwd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ChangePwd({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <ChangeUserPwd />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nChangePwd.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ChangePwd;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={\"/qna\"}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction QnaTables({\r\n  inquiryId,\r\n  inquiryTitle,\r\n  inquiryDate,\r\n  inquiryAnswer,\r\n  inquiryAnsDate,\r\n}) {\r\n  return (\r\n    <tr key={inquiryId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"inquiryTitle_td\"}>\r\n        <Link to={`/qna/${inquiryId}`}>\r\n          {inquiryTitle.length > 41\r\n            ? `${inquiryTitle.slice(0, 40)}...`\r\n            : `${inquiryTitle}`}\r\n        </Link>\r\n      </td>\r\n      <td key={\"inquiryDate_td\"}>{inquiryDate.slice(0, 10)}</td>\r\n      <td key={\"inquiryAnsDate_td\"}>\r\n        {inquiryAnswer === null\r\n          ? \"답변 대기중\"\r\n          : `${inquiryAnsDate.slice(0, 10)}`}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default QnaTables;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport tableStyles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Fragment from \"render-fragment\";\r\nimport Pagination from \"./paginationForQna\";\r\nimport QnaTables from \"./QnaTables\";\r\n//test\r\n//import TEST_QNA_DATA from \"./testQnaData.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction QnaList() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(7);\r\n  const [qnaTable, setQnaTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const identification = {\r\n      userId: userID,\r\n    };\r\n    // erase only when testing\r\n    axios.post(`${baseURL}/qna`, identification).then((response) => {\r\n      setQnaTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    // only for testing delete when real\r\n    //setQnaTable(TEST_QNA_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const qnaPage = qnaTable.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //console.log(qnaPage);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>문의센터</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/qna/write`}>\r\n          <input type=\"button\" value=\"문의작성\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>문의목록</span>\r\n        </div>\r\n        <div>\r\n          {loading || qnaTable.length < 1 ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              <table className={tableStyles.screenPage__searchResultTable}>\r\n                <thead>\r\n                  <tr\r\n                    className={tableStyles.screenPage__searchResultTable_header}\r\n                  >\r\n                    <th>문의 제목</th>\r\n                    <th>문의 날짜</th>\r\n                    <th>답변 날짜</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={tableStyles.testTable__tbody}>\r\n                  {qnaPage.map((qna) => (\r\n                    <QnaTables\r\n                      key={qna.inquiryId}\r\n                      inquiryId={qna.inquiryId}\r\n                      inquiryTitle={qna.inquiryTitle}\r\n                      inquiryDate={qna.inquiryDate}\r\n                      inquiryAnswer={qna.inquiryAnswer}\r\n                      inquiryAnsDate={qna.inquiryAnsDate}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={qnaTable.length}\r\n                paginate={paginate}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaList;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport PropTypes from \"prop-types\";\r\nimport QnaList from \"../components/QNA/qnaList\";\r\n\r\nfunction CustomerCenter({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <QnaList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomerCenter.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CustomerCenter;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaRead({ inquiryTitle, inquiryContent, inquiryAnswer }) {\r\n  //console.log(inquiryContent);\r\n  return (\r\n    <div className={styles.qnaBox}>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaTitle}>{`${inquiryTitle}`}</div>\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>문의 내용</div>\r\n        <div className={styles.qnaContent}>{`${inquiryContent}`}</div>\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>답변 내용</div>\r\n        <div className={styles.qnaContent}>\r\n          {inquiryAnswer === null ? \"답변 대기 중입니다\" : `${inquiryAnswer}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaRead;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaEdit({\r\n  inquiryTitle,\r\n  inquiryContent,\r\n  handleEditFormChange,\r\n  onFormSubmit,\r\n  onCancelClick,\r\n}) {\r\n  return (\r\n    <form>\r\n      <div className={styles.qnaBox}>\r\n        <div className={styles.qnaBox__row}>\r\n          <input\r\n            type=\"text\"\r\n            onChange={handleEditFormChange}\r\n            value={inquiryTitle}\r\n            required\r\n            name=\"inquiryTitle\"\r\n            className={styles.qnaTitle}\r\n          />\r\n        </div>\r\n        <div className={styles.qnaBox__row}>\r\n          <div className={styles.qnaBox__row_title}>문의 내용</div>\r\n          <textarea\r\n            type=\"text\"\r\n            onChange={handleEditFormChange}\r\n            value={inquiryContent}\r\n            name=\"inquiryContent\"\r\n            required\r\n            className={styles.qnaContent}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"수정 완료\"\r\n          onClick={onFormSubmit}\r\n          className={styles.qnaEditButton}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"수정 취소\"\r\n          onClick={onCancelClick}\r\n          className={styles.qnaEditButton}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default QnaEdit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport Fragment from \"render-fragment\";\r\nimport QnaRead from \"./qna_read\";\r\nimport QnaEdit from \"./qna_edit\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Detail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const { id } = useParams();\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const emptyQnaDetails = {\r\n    inquiryId: -1,\r\n    inquiryTitle: \"\",\r\n    inquiryDate: \"\",\r\n    inquiryContent: \"\",\r\n    inquiryAnswer: \"\",\r\n    inquiryAnsDate: \"\",\r\n  };\r\n\r\n  const [qnaDetails, setQnaDetails] = useState(emptyQnaDetails);\r\n  const [qnaEdit, setQnaEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const identification = {\r\n      userId: userID,\r\n    };\r\n    axios.post(`${baseURL}/qna/${id}`, identification).then((response) => {\r\n      setQnaDetails(response.data);\r\n      setLoading(false);\r\n    });\r\n    //test delete when real\r\n    //test\r\n    // const testQnaDetails = {\r\n    //   inquiryId: 1111,\r\n    //   inquiryTitle: \"this is test title\",\r\n    //   inquiryDate: \"2099/99/99\",\r\n    //   inquiryContent: \"this is test content\",\r\n    //   inquiryAnswer: \"this is test answer\",\r\n    //   inquiryAnsDate: \"2999/99/99\",\r\n    // };\r\n    //setQnaDetails(testQnaDetails);\r\n  }, [id]);\r\n\r\n  const onQnaEditClick = () => {\r\n    setQnaEdit(true);\r\n  };\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...qnaDetails };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setQnaDetails(newFormData);\r\n  };\r\n\r\n  const onCancelClick = (event) => {\r\n    event.preventDefault();\r\n    setQnaEdit(false);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQnaEdit(false);\r\n    axios.put(`${baseURL}/qna/edit/${id}`, qnaDetails).then((response) => {\r\n      if (response.data === id) {\r\n        alert(\"문의 내역 수정 완료\");\r\n      } else {\r\n        alert(\"문의 내역 수정 실패\");\r\n      }\r\n    });\r\n  };\r\n  const onDeleteClick = (event) => {\r\n    event.preventDefault();\r\n    const identification = {\r\n      userId: userID,\r\n    };\r\n    setQnaEdit(false);\r\n    axios.put(`${baseURL}/qna/${id}`, identification).then((response) => {\r\n      if (response.data === id) {\r\n        alert(\"문의 내역 삭제 완료\");\r\n        //test\r\n        //window.location.href = \"/qna\";\r\n        //publish\r\n        window.location.href = \"https://ssu-mosaic.github.io/qna\";\r\n      } else {\r\n        alert(\"문의 내역 삭제 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>문의상세</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <input\r\n          type=\"button\"\r\n          value=\"문의수정\"\r\n          disabled={qnaEdit || qnaDetails.inquiryAnswer !== null}\r\n          onClick={onQnaEditClick}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"문의삭제\"\r\n          onClick={onDeleteClick}\r\n          disabled={qnaEdit}\r\n        />\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>문의상세</span>\r\n        </div>\r\n        <div>\r\n          {loading || qnaDetails.inquiryId === -1 ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              {qnaEdit ? (\r\n                <QnaEdit\r\n                  inquiryTitle={qnaDetails.inquiryTitle}\r\n                  inquiryContent={qnaDetails.inquiryContent}\r\n                  handleEditFormChange={handleEditFormChange}\r\n                  onFormSubmit={onFormSubmit}\r\n                  onCancelClick={onCancelClick}\r\n                />\r\n              ) : (\r\n                <QnaRead\r\n                  inquiryTitle={qnaDetails.inquiryTitle}\r\n                  inquiryContent={qnaDetails.inquiryContent}\r\n                  inquiryAnswer={qnaDetails.inquiryAnswer}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Detail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport Detail from \"../components/QNA/qna_Details\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction QnaDetails({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <Detail />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQnaDetails.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default QnaDetails;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaRead({ noticeDate, noticeContent, noticeEditDate }) {\r\n  //console.log(noticeContent);\r\n  return (\r\n    <div className={styles.qnaBox}>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.noticeEditDate}>\r\n          {noticeEditDate.length < 1\r\n            ? \"수정내역 없음\"\r\n            : `최종 수정 일자 : ${noticeEditDate}`}\r\n        </div>\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>공지 내용</div>\r\n        <div className={styles.noticeContent}>{`${noticeContent}`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaRead;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport NoticeRead from \"./notice_read\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Detail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const { id } = useParams();\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const emptyNoticeDetails = {\r\n    noticeId: -1,\r\n    noticeTitle: \"\",\r\n    noticeDate: \"\",\r\n    noticeContent: \"\",\r\n    noticeEditDate: \"\",\r\n  };\r\n\r\n  const [noticeDetails, setNoticeDetails] = useState(emptyNoticeDetails);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/notice/${id}`).then((response) => {\r\n      setNoticeDetails(response.data);\r\n      setLoading(false);\r\n    });\r\n    //test delete when real\r\n    //test\r\n    // const testQnaDetails = {\r\n    //   noticeId: 1111,\r\n    //   noticeTitle: \"this is test title\",\r\n    //   noticeDate: \"2099/99/99\",\r\n    //   noticeContent: \"this is test content\",\r\n    //   noticeEditDate: \"2999/99/99\",\r\n    // };\r\n    //setNoticeDetails(testQnaDetails);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>공지사항</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/notice`}>\r\n          <input type=\"button\" value=\"공지목록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>{noticeDetails.noticeTitle}</span>\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <NoticeRead\r\n              noticeDate={noticeDetails.noticeDate}\r\n              noticeContent={noticeDetails.noticeContent}\r\n              noticeEditDate={noticeDetails.noticeEditDate}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Detail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport Detail from \"../components/QNA/notice_Details\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NoticeDetails({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <Detail />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNoticeDetails.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NoticeDetails;\r\n","import QnaStyles from \"../css/qnaReadEdit.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction QnaWrite() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const emptyQna = {\r\n    userId: userID,\r\n    inquiryTitle: \"\",\r\n    inquiryContent: \"\",\r\n  };\r\n\r\n  const [newQna, setNewQna] = useState(emptyQna);\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...newQna };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setNewQna(newFormData);\r\n  };\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${baseURL}/qna/write`, newQna).then((response) => {\r\n      if (response.data !== null) {\r\n        alert(\"문의 접수 완료\");\r\n        //test\r\n        //window.location.href = `/qna/${response.data}`;\r\n        //publish\r\n        window.location.href = `https://ssu-mosaic.github.io/qna/${response.data}`;\r\n      } else {\r\n        alert(\"문의 접수 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>문의상세</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/qna`}>\r\n          <input type=\"button\" value=\"문의목록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>문의상세</span>\r\n        </div>\r\n        <div>\r\n          <form onSubmit={onFormSubmit}>\r\n            <div className={QnaStyles.qnaBox}>\r\n              <div className={QnaStyles.qnaBox__row}>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={handleEditFormChange}\r\n                  required\r\n                  placeholder=\"문의 제목을 입력하세요\"\r\n                  name=\"inquiryTitle\"\r\n                  className={QnaStyles.qnaTitle}\r\n                />\r\n              </div>\r\n              <div className={QnaStyles.qnaBox__row}>\r\n                <div className={QnaStyles.qnaBox__row_title}>문의 내용</div>\r\n                <textarea\r\n                  type=\"text\"\r\n                  onChange={handleEditFormChange}\r\n                  name=\"inquiryContent\"\r\n                  required\r\n                  className={QnaStyles.qnaContent}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"작성 완료\"\r\n                className={QnaStyles.qnaEditButton}\r\n              />\r\n              <Link to={`/qna`}>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"작성 취소\"\r\n                  className={QnaStyles.qnaEditButton}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaWrite;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport PropTypes from \"prop-types\";\r\nimport QNAWrite from \"../components/QNA/qna_write\";\r\n\r\nfunction QnaWrite({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <QNAWrite />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQnaWrite.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default QnaWrite;\r\n","import './table.css'\r\n\r\n\r\nfunction Tables({ id, first_name, last_name, email, birth, age, country, phone, handleEditClick, handleDeleteClick }) {\r\n    \r\n    const rowData = {\r\n        id: id,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        email: email,\r\n        dAteofbirth: birth,\r\n        age: age,\r\n        country: country,\r\n        phine: phone\r\n    }\r\n\r\n    return (\r\n            <tr key ={id}>\r\n                <td key={'first_name_td'}>{first_name}</td>\r\n                <td key={'last_name_td'}>{last_name}</td>\r\n                <td key={'email_td'}>{email}</td>\r\n                <td key={'birth_td'}>{birth}</td>\r\n                <td key={'age_td'}>{age}</td>\r\n                <td key={'country_td'}>{country}</td>\r\n                <td key={'phone_td'}>{phone}</td>\r\n                <td> \r\n                    <button type=\"button\" onClick={(event)=> handleEditClick(event, rowData)}> edit </button>\r\n                    <button type=\"button\" onClick={()=> handleDeleteClick(id)}> delete </button>\r\n                </td>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default Tables;","import './table.css'\r\n\r\n\r\nfunction EditRow({ id, first_name, last_name, email, birth, age, country, phone, editFormData, handleEditFormChange, handleCancelClick }) {\r\n    \r\n    return (\r\n            <tr key ={id}>\r\n                <td key ={'first_name_edit'}>{first_name}</td>\r\n                <td key ={'last_name_edit'}>{last_name}</td>\r\n                <td key ={'email_edit'}>{email}</td>\r\n                <td key ={'birth_edit'}>{birth}</td>\r\n                <td key ={'age_edit'}>\r\n                    <input \r\n                        type=\"number\" \r\n                        required='required'\r\n                        placeholder = {age}\r\n                        name=\"age\"\r\n                        value={editFormData.age}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'country_edit'}>{country}</td>\r\n                <td key ={'phone_edit'}>{phone}</td>\r\n                <td key ={'button_edit'}> \r\n                    <button type=\"submit\"> save </button>\r\n                    <button type=\"button\" onClick={handleCancelClick}> cancel </button>\r\n                </td>\r\n                \r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default EditRow;","import React from 'react';\r\nimport './table.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='Pagination'>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className=\"page-item\">\r\n                            <Link to={'/testTable'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState , useEffect } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport Tables from './Tables';\r\nimport EditRow from './editRow';\r\nimport Pagination from './paginationNoHook';\r\nimport Fragment from 'render-fragment';\r\nimport './table.css'\r\n\r\nfunction PaginationTableRender(){\r\n\r\n    \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [tablePerPage] = useState(10);\r\n    const [table , setTable] = useState([]);\r\n    \r\n    //get data from server\r\n    useEffect(() => {\r\n        setTable(MOCK_DATA);\r\n    },[]);\r\n\r\n    // Get current tables\r\n    const indexOfLastTable = currentPage * tablePerPage;\r\n    const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n    const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n    //change page number\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    \r\n    //edit data \r\n    const [rowId, setRowId] = useState(null);\r\n    const handleEditClick = (event, rowData) => {\r\n        event.preventDefault();\r\n        setRowId(rowData.id);\r\n        \r\n        const formValues = {\r\n            id: rowData.id,\r\n            first_name: rowData.first_name,\r\n            last_name: rowData.last_name,\r\n            email: rowData.email,\r\n            dAteofbirth: rowData.dAteofbirth,\r\n            age: rowData.age,\r\n            country: rowData.country,\r\n            phine: rowData.phine\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    };\r\n    const [editFormData, setEditFormData] = useState({\r\n        id: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        dAteofbirth: \"\",\r\n        age: \"\",\r\n        country: \"\",\r\n        phine: \"\"\r\n    });\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n    };\r\n\r\n    //save changes \r\n    const handleEditFormSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const editedForm={\r\n            id: rowId,\r\n            first_name: editFormData.first_name,\r\n            last_name: editFormData.last_name,\r\n            email: editFormData.email,\r\n            dAteofbirth: editFormData.dAteofbirth,\r\n            age: editFormData.age,\r\n            country: editFormData.country,\r\n            phine: editFormData.phine\r\n        }\r\n        \r\n        const newTable = [...table];\r\n        const index = table.findIndex((row) => row.id === rowId);\r\n\r\n        newTable[index] = editedForm;\r\n        //console.log(newTable);\r\n        setTable(newTable);\r\n        setRowId(null);\r\n        //console.log(table);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setRowId(null);\r\n    }\r\n\r\n    const handleDeleteClick = (rowId) => {\r\n        const newTable =  [...table];\r\n        const index = table.findIndex((row) => row.id === rowId);\r\n        newTable.splice(index,1);\r\n        setTable(newTable);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={handleEditFormSubmit}>\r\n                <table className=\"testTable\">\r\n                    <thead className=\"testTable__thead\">\r\n                        <tr>\r\n                            <th>first_name</th>\r\n                            <th>last_name</th>\r\n                            <th>email</th>\r\n                            <th>dAteofbirth</th>\r\n                            <th>age</th>\r\n                            <th>country</th>\r\n                            <th>phine</th>\r\n                            <th>edit?</th>\r\n                        </tr>\r\n                    </thead>\r\n                \r\n                    <tbody className=\"testTable__tbody\">\r\n                        {\r\n                            tables.map((tables) => (\r\n                                <Fragment>\r\n                                    {\r\n                                    rowId === tables.id ?                                 \r\n                                        <EditRow \r\n                                        key={tables.id}\r\n                                        id={tables.id}\r\n                                        first_name={tables.first_name}\r\n                                        last_name={tables.last_name}\r\n                                        email={tables.email}\r\n                                        birth={tables.dAteofbirth}\r\n                                        age={tables.age}\r\n                                        country={tables.country}\r\n                                        phone={tables.phine}\r\n                                        editFormData={editFormData}\r\n                                        handleEditFormChange={handleEditFormChange}\r\n                                        handleCancelClick={handleCancelClick}\r\n                                        /> \r\n                                    : \r\n                                        <Tables \r\n                                        key={tables.id}\r\n                                        id={tables.id}\r\n                                        first_name={tables.first_name}\r\n                                        last_name={tables.last_name}\r\n                                        email={tables.email}\r\n                                        birth={tables.dAteofbirth}\r\n                                        age={tables.age}\r\n                                        country={tables.country}\r\n                                        phone={tables.phine}\r\n                                        handleEditClick = {handleEditClick}\r\n                                        handleDeleteClick={handleDeleteClick}\r\n                                        />\r\n                                    }\r\n                                </Fragment>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n            <Pagination tablePerPage={tablePerPage} totalTables={table.length} paginate={paginate}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginationTableRender;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={\"/notice\"}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction QnaTables({ noticeId, noticeTitle, noticeDate, noticeEditDate }) {\r\n  return (\r\n    <tr key={noticeId} className={styles.screenPage__searchResultTable_items}>\r\n      <td>\r\n        <Link to={`/notice/${noticeId}`}>\r\n          {noticeTitle.length > 61\r\n            ? `${noticeTitle.slice(0, 60)}...`\r\n            : `${noticeTitle}`}\r\n        </Link>\r\n      </td>\r\n      <td>{noticeDate.slice(0, 10)}</td>\r\n      <td>\r\n        {noticeEditDate.length < 1\r\n          ? \"수정내역 없음\"\r\n          : `${noticeEditDate.slice(0, 10)}`}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default QnaTables;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport tableStyles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Fragment from \"render-fragment\";\r\nimport Pagination from \"./paginationForNotice\";\r\nimport NoticeTables from \"./NoticeTables\";\r\n//test\r\n//import TEST_Notice_DATA from \"./testNoticeData.json\";\r\n\r\nfunction NoticeList() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(7);\r\n  const [noticeTable, setNoticeTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // erase only when testing\r\n    axios.get(`${baseURL}/notice`).then((response) => {\r\n      setNoticeTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    // only for testing delete when real\r\n    //setNoticeTable(TEST_Notice_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const qnaPage = noticeTable.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>공지사항</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/qna`}>\r\n          <input type=\"button\" value=\"문의목록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>문의목록</span>\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              <form>\r\n                <table className={tableStyles.screenPage__searchResultTable}>\r\n                  <thead>\r\n                    <tr\r\n                      className={\r\n                        tableStyles.screenPage__searchResultTable_header\r\n                      }\r\n                    >\r\n                      <th>공지 제목</th>\r\n                      <th>공지일</th>\r\n                      <th>최종수정일</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={tableStyles.testTable__tbody}>\r\n                    {qnaPage.map((qna) => (\r\n                      <NoticeTables\r\n                        key={qna.noticeId}\r\n                        noticeId={qna.noticeId}\r\n                        noticeTitle={qna.noticeTitle}\r\n                        noticeDate={qna.noticeDate}\r\n                        noticeEditDate={qna.noticeEditDate}\r\n                      />\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={noticeTable.length}\r\n                paginate={paginate}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeList;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notices from \"../components/QNA/noticeList\";\r\n\r\nfunction NoticeList({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <Notices />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNoticeList.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NoticeList;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport './chart.css'\r\n\r\nconst data = {\r\n    labels: [\"Red\", \"Blue\", \"Yellow\" ,\"Green\" ,\"Purple\" ,\"Orange\"],\r\n    datasets: [{\r\n        data: [12, 19, 3, 5, 12, 4],\r\n        backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\", \r\n            \"rgba(55, 162, 235, 0.2)\", \r\n            \"rgba(255, 206, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(153, 99, 255, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\"\r\n        ]\r\n    }]\r\n};\r\n\r\nfunction DoughnutChart(){\r\n    return (\r\n        <div>\r\n            <h1>Doughnut</h1>\r\n            <div className=\"doughnutChart\">\r\n                <Doughnut data={data}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoughnutChart;","export default __webpack_public_path__ + \"static/media/login.87a68da9.jpg\";","import backgroundImg from \"../image/login.jpg\";\r\nimport logo from \"../image/logo.JPG\";\r\nimport styles from \"./css/Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nlet USER_ID = \"\";\r\n\r\nfunction Login() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  let newLoginData = {\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n  };\r\n  const resetLoginData = {\r\n    userId: \"\",\r\n    userPwd: \"\",\r\n  };\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPwd, setUserPw] = useState(\"\");\r\n\r\n  const onIdChange = (event) => {\r\n    setUserId(event.target.value);\r\n  };\r\n  const onPwChange = (event) => {\r\n    setUserPw(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    newLoginData.userId = userId;\r\n    newLoginData.userPwd = userPwd;\r\n\r\n    axios.post(`${baseURL}/admin/login`, newLoginData).then((response) => {\r\n      if (response.data === true) {\r\n        USER_ID = userId;\r\n        localStorage.setItem(\"USER_ID\", USER_ID);\r\n        alert(`환영해요 ${userId}`);\r\n        //test\r\n        window.location.href = \"/admin/inquiry\";\r\n        //when real\r\n        //window.location.href = \"https://ssu-mosaic.github.io/front/admin/inquiry\";\r\n        // should put real https addr\r\n      } else {\r\n        alert(\"잘못된 아이디 또는 비밀번호입니다\");\r\n      }\r\n      //setData(response.data);\r\n      //console.log(`서버로 보낸 데이터 : ${data}`);\r\n    });\r\n\r\n    //reset\r\n    newLoginData = resetLoginData;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img src={backgroundImg} className={styles.bgImg} alt=\"background\" />\r\n\r\n      <div className={styles.loginBox}>\r\n        <img src={logo} className={styles.login__logo} alt=\"logo\" />\r\n        <form className={styles.loginBox__loginForm} onSubmit={onSubmit}>\r\n          <div className={styles.loginBox__IDPW}>\r\n            <input\r\n              name=\"username\"\r\n              type=\"text\"\r\n              placeholder=\"관리자 아이디 입력\"\r\n              onChange={onIdChange}\r\n              required=\"required\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"관리자 비밀번호 입력\"\r\n              onChange={onPwChange}\r\n              required=\"required\"\r\n            />\r\n          </div>\r\n          <div className={styles.loginBox__loginOption}>\r\n            <div className={styles.loginBox__loginOption_auto}>\r\n              <Link to={\"/login\"}>\r\n                <div className={styles.loginBox__lostIDPW}>\r\n                  {\">> 유저모드로 돌아가기\"}\r\n                </div>\r\n              </Link>\r\n\r\n              {/* <input type=\"checkbox\" name=\"auto-login\" checked/>\r\n                            <label for=\"auto-login\">자동 로그인</label>   */}\r\n            </div>\r\n            <input type=\"submit\" value=\"로그인\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import styles from \"./css/menu-bar.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../image/logo.JPG\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction MenuBar() {\r\n  const onLogoutClick = () => {\r\n    localStorage.setItem(\"USER_ID\", null);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menuBar}>\r\n      <div className={styles.menuBar__column}>\r\n        <Link to={`/`}>\r\n          {\" \"}\r\n          <img\r\n            src={logo}\r\n            className={styles.menuBar__logo}\r\n            alt=\"logo img\"\r\n          />{\" \"}\r\n        </Link>\r\n        {/* <!-- Easy stock logo--> */}\r\n      </div>\r\n      <div className={styles.menuBar__column}>\r\n        <nav className={styles.menuBar__nav}>\r\n          <ul className={styles.menuBar__list}>\r\n            <Link to={`/admin/notice`}>\r\n              <li className={styles.menuBar__btn}>\r\n                <span>공지사항</span>\r\n              </li>\r\n            </Link>\r\n            <Link to={`/admin/inquiry`}>\r\n              <li className={styles.menuBar__btn}>\r\n                <span>문의답변</span>\r\n              </li>\r\n            </Link>\r\n            {/* <Link to={`/`}><li className={styles.menuBar__btn}><span>고객센터</span></li></Link> */}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div className={styles.menuBar__column}>\r\n        <div className={styles.menuBar__profile}>\r\n          <FontAwesomeIcon icon={faUserCircle} size=\"2x\" />\r\n          <Link to={`/login`}>\r\n            <span>{userID === \"null\" ? \"로그인해주세요\" : userID}</span>\r\n          </Link>\r\n          <Link to={`/login`}>\r\n            <FontAwesomeIcon\r\n              icon={faSignOutAlt}\r\n              size=\"2x\"\r\n              onClick={onLogoutClick}\r\n            />\r\n          </Link>\r\n        </div>\r\n        {/* <!--who login and icon--> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={\"/admin/notice\"}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction QnaTables({ noticeId, noticeTitle, noticeDate, noticeEditDate }) {\r\n  return (\r\n    <tr key={noticeId} className={styles.screenPage__searchResultTable_items}>\r\n      <td>\r\n        <Link to={`/admin/notice/${noticeId}`}>\r\n          {noticeTitle.length > 61\r\n            ? `${noticeTitle.slice(0, 60)}...`\r\n            : `${noticeTitle}`}\r\n        </Link>\r\n      </td>\r\n      <td>{noticeDate.slice(0, 10)}</td>\r\n      <td>\r\n        {noticeEditDate.length < 1\r\n          ? \"수정내역 없음\"\r\n          : `${noticeEditDate.slice(0, 10)}`}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default QnaTables;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n//import Fragment from \"render-fragment\";\r\n\r\nfunction NoticeAdd({\r\n  newFormData,\r\n  handleEditFormChange,\r\n  onCancelClick,\r\n  onSubmitEditForm,\r\n}) {\r\n  //console.log(noticeContent);\r\n  return (\r\n    <div className={styles.qnaBox}>\r\n      <div className={styles.qnaBox__row}>\r\n        <input\r\n          type=\"button\"\r\n          value=\"작성취소\"\r\n          onClick={onCancelClick}\r\n          className={styles.qnaEditButton}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"작성완료\"\r\n          onClick={onSubmitEditForm}\r\n          className={styles.qnaEditButton}\r\n        />\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>공지 내용</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"noticeTitle\"\r\n          placeholder=\"공지 제목\"\r\n          value={newFormData.noticeTitle}\r\n          onChange={handleEditFormChange}\r\n          className={styles.noticeTitle}\r\n          required\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"noticeContent\"\r\n          value={newFormData.noticeContent}\r\n          onChange={handleEditFormChange}\r\n          placeholder=\"공지 내용\"\r\n          className={styles.noticeContent}\r\n          required\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeAdd;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport tableStyles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Fragment from \"render-fragment\";\r\nimport Pagination from \"./paginationForNotice\";\r\nimport NoticeTables from \"./NoticeTables\";\r\nimport NoticeAdd from \"./notice_add\";\r\n//test\r\n//import TEST_Notice_DATA from \"./testNoticeData.json\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction NoticeList() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(7);\r\n  const [noticeTable, setNoticeTable] = useState([]);\r\n  const [noticeAdd, setNoticeAdd] = useState(false);\r\n  const [newFormData, setNewFormData] = useState({\r\n    userId: userID,\r\n    noticeTitle: \"\",\r\n    noticeContent: \"\",\r\n  });\r\n  useEffect(() => {\r\n    // erase only when testing\r\n    axios.get(`${baseURL}/notice`).then((response) => {\r\n      setNoticeTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    // only for testing delete when real\r\n    //testsetNoticeTable(TEST_Notice_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const qnaPage = noticeTable.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const onNoticeAdd = () => {\r\n    setNoticeAdd(true);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newNoticeData = { ...newFormData };\r\n    newNoticeData[fieldName] = fieldValue;\r\n\r\n    setNewFormData(newNoticeData);\r\n  };\r\n\r\n  const onSubmitEditForm = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`${baseURL}/admin/notice`, newFormData).then((response) => {\r\n      if (response.data !== null) {\r\n        alert(\"공지 작성 완료\");\r\n        //when publish\r\n        window.location.href =\r\n          \"https://ssu-mosaic.github.io/front/admin/notice\";\r\n        //when test\r\n        //window.location.href = \"/admin/notice\";\r\n      } else {\r\n        alert(\"공지 작성 실패 재시도 해주세요\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onCancelClick = () => {\r\n    setNoticeAdd(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>공지사항</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <input type=\"button\" value=\"공지추가\" onClick={onNoticeAdd} />\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>{noticeAdd ? \"새 공지\" : \"공지목록\"}</span>\r\n        </div>\r\n        <div>\r\n          {noticeAdd ? (\r\n            <NoticeAdd\r\n              newFormData={newFormData}\r\n              handleEditFormChange={handleEditFormChange}\r\n              onCancelClick={onCancelClick}\r\n              onSubmitEditForm={onSubmitEditForm}\r\n            />\r\n          ) : loading || noticeTable.length === 0 ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              <table className={tableStyles.screenPage__searchResultTable}>\r\n                <thead>\r\n                  <tr\r\n                    className={tableStyles.screenPage__searchResultTable_header}\r\n                  >\r\n                    <th>공지 제목</th>\r\n                    <th>공지일</th>\r\n                    <th>최종수정일</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={tableStyles.testTable__tbody}>\r\n                  {qnaPage.map((qna) => (\r\n                    <NoticeTables\r\n                      key={qna.noticeId}\r\n                      noticeId={qna.noticeId}\r\n                      noticeTitle={qna.noticeTitle}\r\n                      noticeDate={qna.noticeDate}\r\n                      noticeEditDate={qna.noticeEditDate}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={noticeTable.length}\r\n                paginate={paginate}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeList;\r\n","import MenuBar from \"../components/admin-menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport NoticeList from \"../components/ADMIN_NOTICE/noticeList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notice({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <NoticeList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotice.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Notice;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaRead({ noticeContent, noticeEditDate }) {\r\n  //console.log(noticeContent);\r\n  return (\r\n    <div className={styles.qnaBox}>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.noticeEditDate}>\r\n          {noticeEditDate.length < 1\r\n            ? \"수정내역 없음\"\r\n            : `최종 수정 일자 : ${noticeEditDate.slice(0, 10)}`}\r\n        </div>\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>공지 내용</div>\r\n        <div className={styles.noticeContent}>{`${noticeContent}`}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaRead;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n//import Fragment from \"render-fragment\";\r\n\r\nfunction QnaRead({\r\n  noticeContent,\r\n  editFormData,\r\n  handleEditFormChange,\r\n  onCancelClick,\r\n  onSubmitEditForm,\r\n}) {\r\n  //console.log(noticeContent);\r\n  return (\r\n    <div className={styles.qnaBox}>\r\n      <div className={styles.qnaBox__row}>\r\n        <input\r\n          type=\"button\"\r\n          value=\"수정취소\"\r\n          onClick={onCancelClick}\r\n          className={styles.qnaEditButton}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"수정완료\"\r\n          onClick={onSubmitEditForm}\r\n          className={styles.qnaEditButton}\r\n        />\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>공지 내용</div>\r\n        <textarea\r\n          type=\"text\"\r\n          placeholder={noticeContent}\r\n          name=\"noticeContent\"\r\n          value={editFormData.noticeContent}\r\n          onChange={handleEditFormChange}\r\n          className={styles.noticeContent}\r\n          required\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaRead;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport NoticeRead from \"./notice_read\";\r\nimport NoticeEdit from \"./notice_edit\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Detail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const { id } = useParams();\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n  const [editFormData, setEditFormData] = useState({\r\n    userId: userID,\r\n    noticeTitle: \"\",\r\n    noticeDate: \"\",\r\n    noticeContent: \"\",\r\n    noticeEditDate: \"\",\r\n  });\r\n\r\n  const emptyNoticeDetails = {\r\n    noticeId: -1,\r\n    noticeTitle: \"\",\r\n    noticeDate: \"\",\r\n    noticeContent: \"\",\r\n    noticeEditDate: \"\",\r\n  };\r\n\r\n  const [noticeDetails, setNoticeDetails] = useState(emptyNoticeDetails);\r\n  const [noticeEdit, setNoticeEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/notice/${id}`).then((response) => {\r\n      setLoading(false);\r\n      setNoticeDetails(response.data);\r\n    });\r\n    //test delete when real\r\n    //test\r\n    // const testQnaDetails = {\r\n    //   noticeId: 1111,\r\n    //   noticeTitle: \"this is test title\",\r\n    //   noticeDate: \"2099/99/99\",\r\n    //   noticeContent: \"this is test content\",\r\n    //   noticeEditDate: \"2999/99/99\",\r\n    // };\r\n    //setNoticeDetails(testQnaDetails);\r\n  }, [id]);\r\n\r\n  const onSubmitEditForm = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .put(`${baseURL}/admin/notice/${id}`, editFormData)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"공지 수정 완료\");\r\n          setNoticeDetails(editFormData);\r\n          setNoticeEdit(false);\r\n        } else {\r\n          alert(\"공지 수정 실패\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onCancelClick = () => {\r\n    setNoticeEdit(false);\r\n  };\r\n  const onNoticeDeleteClick = (event) => {\r\n    event.preventDefault();\r\n    const deleteForm = {\r\n      noticeId: id,\r\n    };\r\n    axios\r\n      .delete(`${baseURL}/admin/notice/${id}`, deleteForm)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"공지 삭제 완료\");\r\n          //when publish\r\n          window.location.href =\r\n            \"https://ssu-mosaic.github.io/front/admin/notice\";\r\n          //when test\r\n          //window.location.href = \"/admin/notice\";\r\n        } else {\r\n          alert(\"공지 삭제 실패\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onNoticeEditClick = () => {\r\n    const formValues = {\r\n      userId: userID,\r\n      noticeTitle: noticeDetails.noticeTitle,\r\n      noticeDate: noticeDetails.noticeDate,\r\n      noticeContent: noticeDetails.noticeContent,\r\n      noticeEditDate: noticeDetails.noticeEditDate,\r\n    };\r\n    setEditFormData(formValues);\r\n    setNoticeEdit(true);\r\n  };\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>공지사항</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/admin/notice`}>\r\n          <input type=\"button\" value=\"공지목록\" />\r\n        </Link>\r\n        <input\r\n          type=\"button\"\r\n          value=\"공지수정\"\r\n          onClick={onNoticeEditClick}\r\n          disabled={noticeEdit}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"공지삭제\"\r\n          onClick={onNoticeDeleteClick}\r\n          disabled={noticeEdit}\r\n        />\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          {noticeEdit ? (\r\n            <input\r\n              type=\"text\"\r\n              name=\"noticeTitle\"\r\n              onChange={handleEditFormChange}\r\n              value={editFormData.noticeTitle}\r\n              className={styles.editTitle}\r\n            />\r\n          ) : (\r\n            <span>{noticeDetails.noticeTitle}</span>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <strong>로딩중...</strong>\r\n          ) : noticeEdit ? (\r\n            <NoticeEdit\r\n              noticeContent={noticeDetails.noticeContent}\r\n              onCancelClick={onCancelClick}\r\n              editFormData={editFormData}\r\n              handleEditFormChange={handleEditFormChange}\r\n              onSubmitEditForm={onSubmitEditForm}\r\n            />\r\n          ) : (\r\n            <NoticeRead\r\n              noticeContent={noticeDetails.noticeContent}\r\n              noticeEditDate={noticeDetails.noticeEditDate}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Detail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport Detail from \"../components/ADMIN_NOTICE/notice_Details\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NoticeDetails({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <Detail />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNoticeDetails.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NoticeDetails;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage, totalTables, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.pagination}>\r\n        {pageNumbers.map((number) => (\r\n          <li key={`page${number}`} className={styles.pagination__pages}>\r\n            <Link\r\n              to={\"/admin/inquiry\"}\r\n              onClick={() => paginate(number)}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import styles from \"../css/result-table.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction QnaTables({\r\n  inquiryId,\r\n  inquiryTitle,\r\n  inquiryDate,\r\n  inquiryAnswer,\r\n  inquiryAnsDate,\r\n}) {\r\n  return (\r\n    <tr key={inquiryId} className={styles.screenPage__searchResultTable_items}>\r\n      <td key={\"inquiryTitle_td\"}>\r\n        <Link to={`/admin/inquiry/${inquiryId}`}>\r\n          {inquiryTitle.length > 41\r\n            ? `${inquiryTitle.slice(0, 40)}...`\r\n            : `${inquiryTitle}`}\r\n        </Link>\r\n      </td>\r\n      <td key={\"inquiryDate_td\"}>{inquiryDate.slice(0, 10)}</td>\r\n      <td key={\"inquiryAnsDate_td\"}>\r\n        {inquiryAnswer === null ? \"답변 대기중\" : `${inquiryAnsDate}`}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default QnaTables;\r\n","import contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport tableStyles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Fragment from \"render-fragment\";\r\nimport Pagination from \"./paginationForQna\";\r\nimport QnaTables from \"./QnaTables\";\r\n//test\r\n//import TEST_QNA_DATA from \"./testQnaData.json\";\r\n\r\n////////////////////////////////let userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction QnaList() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tablePerPage] = useState(7);\r\n  const [qnaTable, setQnaTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/admin/qna`).then((response) => {\r\n      setQnaTable(response.data);\r\n      setLoading(false);\r\n    });\r\n    // only for testing delete when real\r\n    //setQnaTable(TEST_QNA_DATA);\r\n  }, []);\r\n\r\n  // Get current tables\r\n  const indexOfLastTable = currentPage * tablePerPage;\r\n  const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n  const qnaPage = qnaTable.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n  //change page number\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>문의목록</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <Link to={`/admin/notice`}>\r\n          <input type=\"button\" value=\"공지목록\" />\r\n        </Link>\r\n      </div>\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>문의목록</span>\r\n        </div>\r\n        <div>\r\n          {loading || qnaTable.length === 0 ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              <form>\r\n                <table className={tableStyles.screenPage__searchResultTable}>\r\n                  <thead>\r\n                    <tr\r\n                      className={\r\n                        tableStyles.screenPage__searchResultTable_header\r\n                      }\r\n                    >\r\n                      <th>문의 제목</th>\r\n                      <th>문의 날짜</th>\r\n                      <th>답변 날짜</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={tableStyles.testTable__tbody}>\r\n                    {qnaPage.map((qna) => (\r\n                      <QnaTables\r\n                        key={qna.inquiryId}\r\n                        inquiryId={qna.inquiryId}\r\n                        inquiryTitle={qna.inquiryTitle}\r\n                        inquiryDate={qna.inquiryDate}\r\n                        inquiryAnswer={qna.inquiryAnswer}\r\n                        inquiryAnsDate={qna.inquiryAnsDate}\r\n                      />\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n              <Pagination\r\n                tablePerPage={tablePerPage}\r\n                totalTables={qnaTable.length}\r\n                paginate={paginate}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaList;\r\n","import MenuBar from \"../components/admin-menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport InquiryList from \"../components/ADMIN_INQUIRY/qnaList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Inquiry({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <InquiryList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nInquiry.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Inquiry;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaRead({ inquiryTitle, inquiryContent, inquiryAnswer }) {\r\n  //console.log(inquiryContent);\r\n  return (\r\n    <div className={styles.qnaBox}>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaTitle}>{`${inquiryTitle}`}</div>\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>문의 내용</div>\r\n        <div className={styles.qnaContent}>{`${inquiryContent}`}</div>\r\n      </div>\r\n      <div className={styles.qnaBox__row}>\r\n        <div className={styles.qnaBox__row_title}>답변 내용</div>\r\n        <div className={styles.qnaContent}>\r\n          {inquiryAnswer === null ? \"답변 대기 중입니다\" : `${inquiryAnswer}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QnaRead;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaEdit({\r\n  inquiryTitle,\r\n  inquiryContent,\r\n  inquiryAnswer,\r\n  handleEditFormChange,\r\n  onFormEditSubmit,\r\n  onCancelClick,\r\n}) {\r\n  return (\r\n    <form>\r\n      <div className={styles.qnaBox}>\r\n        <div className={styles.qnaBox__row}>{`${inquiryTitle}`}</div>\r\n        <div className={styles.qnaBox__row}>\r\n          <div className={styles.qnaBox__row_title}>문의 내용</div>\r\n          <div className={styles.qnaContent}>{`${inquiryContent}`}</div>\r\n        </div>\r\n        <div className={styles.qnaBox__row}>\r\n          <div className={styles.qnaBox__row_title}>답변 내용</div>\r\n          <textarea\r\n            type=\"text\"\r\n            onChange={handleEditFormChange}\r\n            value={inquiryAnswer}\r\n            name=\"inquiryAnswer\"\r\n            required\r\n            className={styles.qnaContent}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"작성 완료\"\r\n          onClick={onFormEditSubmit}\r\n          className={styles.qnaEditButton}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"작성 취소\"\r\n          onClick={onCancelClick}\r\n          className={styles.qnaEditButton}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default QnaEdit;\r\n","import styles from \"../css/qnaReadEdit.module.css\";\r\n\r\nfunction QnaEdit({\r\n  inquiryTitle,\r\n  inquiryContent,\r\n  inquiryAnswer,\r\n  handleEditFormChange,\r\n  onFormSubmit,\r\n  onCancelClick,\r\n}) {\r\n  return (\r\n    <form>\r\n      <div className={styles.qnaBox}>\r\n        <div className={styles.qnaBox__row}>{`${inquiryTitle}`}</div>\r\n        <div className={styles.qnaBox__row}>\r\n          <div className={styles.qnaBox__row_title}>문의 내용</div>\r\n          <div className={styles.qnaContent}>{`${inquiryContent}`}</div>\r\n        </div>\r\n        <div className={styles.qnaBox__row}>\r\n          <div className={styles.qnaBox__row_title}>답변 내용</div>\r\n          <textarea\r\n            type=\"text\"\r\n            onChange={handleEditFormChange}\r\n            value={inquiryAnswer}\r\n            name=\"inquiryAnswer\"\r\n            required\r\n            className={styles.qnaContent}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"작성 완료\"\r\n          onClick={onFormSubmit}\r\n          className={styles.qnaEditButton}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"작성 취소\"\r\n          onClick={onCancelClick}\r\n          className={styles.qnaEditButton}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default QnaEdit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport contentStyles from \"../css/screen-content.module.css\";\r\nimport styles from \"../css/search-order.module.css\";\r\nimport Fragment from \"render-fragment\";\r\nimport QnaRead from \"./qna_read\";\r\nimport QnaEdit from \"./qna_ans_edit\";\r\nimport QnaWrite from \"./qna_ans_write\";\r\n\r\n//let userID = localStorage.getItem(\"USER_ID\");\r\n\r\nfunction Detail() {\r\n  const baseURL =\r\n    \"http://ec2-3-39-21-95.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n  const { id } = useParams();\r\n  //while testing loading : false\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const emptyQnaDetails = {\r\n    inquiryId: -1,\r\n    inquiryTitle: \"\",\r\n    inquiryDate: \"\",\r\n    inquiryContent: \"\",\r\n    inquiryAnswer: \"\",\r\n    inquiryAnsDate: \"\",\r\n  };\r\n\r\n  const [qnaDetails, setQnaDetails] = useState(emptyQnaDetails);\r\n  const [qnaEdit, setQnaEdit] = useState(false);\r\n  const [qnaWrite, setQnaWrite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/admin/qna/${id}`).then((response) => {\r\n      setQnaDetails(response.data);\r\n      setLoading(false);\r\n    });\r\n    //test delete when real\r\n    //test\r\n    // const testQnaDetails = {\r\n    //   inquiryId: 1111,\r\n    //   inquiryTitle: \"this is test title\",\r\n    //   inquiryDate: \"2099/99/99\",\r\n    //   inquiryContent: \"this is test content\",\r\n    //   inquiryAnswer: \"this is test answer\",\r\n    //   inquiryAnsDate: \"2999/99/99\",\r\n    // };\r\n    // setQnaDetails(testQnaDetails);\r\n  }, [id]);\r\n\r\n  const onQnaEditClick = () => {\r\n    setQnaEdit(true);\r\n  };\r\n\r\n  const onQnaWriteClick = () => {\r\n    setQnaWrite(true);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...qnaDetails };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setQnaDetails(newFormData);\r\n  };\r\n\r\n  const onCancelClick = (event) => {\r\n    event.preventDefault();\r\n    setQnaEdit(false);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQnaEdit(false);\r\n    console.log(qnaDetails);\r\n    axios\r\n      .post(`${baseURL}/admin/qna/${id}/answer`, qnaDetails)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"문의 내역 답변 완료\");\r\n        } else {\r\n          alert(\"문의 내역 답변 실패\");\r\n        }\r\n      });\r\n  };\r\n  const onFormEditSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQnaEdit(false);\r\n    axios\r\n      .put(`${baseURL}/admin/qna/${id}/answer`, qnaDetails)\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          alert(\"문의 내역 답변 수정 완료\");\r\n        } else {\r\n          alert(\"문의 내역 답변 수정 실패\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}\r\n    >\r\n      <div className={styles.screenPage__searchItem}>\r\n        <span>문의상세</span>\r\n      </div>\r\n      <div className={styles.screenPage__nextButton}>\r\n        <input\r\n          type=\"button\"\r\n          value=\"문의답변\"\r\n          disabled={qnaEdit || qnaWrite || qnaDetails.inquiryAnswer !== null}\r\n          onClick={onQnaWriteClick}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          value=\"답변수정\"\r\n          disabled={qnaEdit || qnaWrite}\r\n          onClick={onQnaEditClick}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.screenPage__searchResult}>\r\n        <div className={styles.screenPage_title}>\r\n          <span>문의상세</span>\r\n        </div>\r\n        <div>\r\n          {loading ? (\r\n            <strong>로딩중...</strong>\r\n          ) : (\r\n            <Fragment>\r\n              {qnaEdit ? (\r\n                <QnaEdit\r\n                  inquiryTitle={qnaDetails.inquiryTitle}\r\n                  inquiryContent={qnaDetails.inquiryContent}\r\n                  inquiryAnswer={qnaDetails.inquiryAnswer}\r\n                  handleEditFormChange={handleEditFormChange}\r\n                  onFormEditSubmit={onFormEditSubmit}\r\n                  onCancelClick={onCancelClick}\r\n                />\r\n              ) : qnaWrite ? (\r\n                <QnaWrite\r\n                  inquiryTitle={qnaDetails.inquiryTitle}\r\n                  inquiryContent={qnaDetails.inquiryContent}\r\n                  inquiryAnswer={qnaDetails.inquiryAnswer}\r\n                  handleEditFormChange={handleEditFormChange}\r\n                  onFormSubmit={onFormSubmit}\r\n                  onCancelClick={onCancelClick}\r\n                />\r\n              ) : (\r\n                <QnaRead\r\n                  inquiryTitle={qnaDetails.inquiryTitle}\r\n                  inquiryContent={qnaDetails.inquiryContent}\r\n                  inquiryAnswer={qnaDetails.inquiryAnswer}\r\n                />\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Detail;\r\n","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport Detail from \"../components/ADMIN_INQUIRY/qna_Details\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NoticeDetails({ sideMenu }) {\r\n  return (\r\n    <div>\r\n      <MenuBar />\r\n      <div className={styles.screenPage}>\r\n        <SideMenuBar sideMenu={sideMenu} />\r\n        <Detail />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNoticeDetails.propTypes = {\r\n  sideMenu: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NoticeDetails;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\n//import Login from \"./routes/Login\";\nimport JeanLogin from \"./routes/JeanLogin/JeanLogin\";\nimport JeanJoin from \"./routes/JeanLogin/JeanJoin\";\nimport JeanFindPw from \"./routes/JeanLogin/JeanForgetPw\";\nimport JeanFindId from \"./routes/JeanLogin/JeanForgetId\";\n//import MakeAccount from \"./routes/MakeAccount\";\nimport OrderResult from \"./routes/OrderResult\";\nimport ManageStock from \"./routes/ManageStock\";\nimport EditStock from \"./routes/EditStock\";\nimport OrderRequest from \"./routes/OrderRequest\";\nimport OrderRequestProduct from \"./routes/OrderRequestProduct\";\nimport OrderRequestBasket from \"./routes/OrderRequestBasket\";\n\nimport AddRetailer from \"./routes/AddRetailer\";\nimport RetailerList from \"./routes/RetailerList\";\nimport RetailerDetails from \"./routes/RetailerDetails\";\n\n//user information management\nimport UserInfo from \"./routes/UserInfo\";\nimport UserDelete from \"./routes/DeleteUser\";\nimport UserPwdChange from \"./routes/ChangePwd\";\n\n//customer service center\nimport CustomerCenter from \"./routes/CustomerCenter\";\nimport QnaDetails from \"./routes/QnaDetails\";\nimport NoticeDetails from \"./routes/NoticeDetail\";\nimport QnaWrite from \"./routes/QnaWrite\";\nimport PaginationTableRender from \"./TablePaginationTest/tableRender\";\nimport NoticeList from \"./routes/NoticeList\";\nimport DoughnutChart from \"./ChartTest/chartRender\";\n\n//admin\nimport AdminLogin from \"./routes/AdminLogin\";\nimport AdminNotice from \"./routes/AdminNotice\";\nimport AdminNoticeDetails from \"./routes/AdminNoticeDetail\";\nimport AdminInquiry from \"./routes/AdminInquiry\";\nimport AdminInquiryDetails from \"./routes/AdminInquiryDetail\";\n\nfunction App() {\n  const sideMenuObj = function (topName, sideMenuElements) {\n    return {\n      name: topName,\n      elementsObj: sideMenuElements,\n    };\n  };\n\n  const customerCenterElements = [\n    {\n      id: \"noticeList\",\n      name: \"공지사항\",\n      link: \"/notice\",\n    },\n    {\n      id: \"qnaList\",\n      name: \"문의목록\",\n      link: \"/qna\",\n    },\n    {\n      id: \"qnaWrite\",\n      name: \"문의작성\",\n      link: \"/qna/write\",\n    },\n  ];\n\n  const userMenuElements = [\n    {\n      id: \"showEditUserInfo\",\n      name: \"회원정보\",\n      link: \"/user/info\",\n    },\n    {\n      id: \"changeUserPwd\",\n      name: \"비밀번호 수정\",\n      link: \"/user/changepwd\",\n    },\n    {\n      id: \"deleteUserInfo\",\n      name: \"회원탈퇴\",\n      link: \"/user/delete\",\n    },\n  ];\n\n  const orderSideMenuElements = [\n    {\n      id: \"searchitem\",\n      name: \"거래처등록\",\n      link: \"/order/retailer/add\",\n    },\n    {\n      id: \"confirmitem\",\n      name: \"거래처목록\",\n      link: \"/order/retailer\",\n    },\n    {\n      id: \"requestorder\",\n      name: \"발주요청\",\n      link: \"/order/requestorder\",\n    },\n    {\n      id: \"searchorder\",\n      name: \"발주조회\",\n      link: \"/order/searchorder\",\n    },\n  ];\n\n  const stockSideMenuElements = [\n    {\n      id: \"stockadd\",\n      name: \"재고등록\",\n      link: \"/stock/add\",\n    },\n    {\n      id: \"stockedit\",\n      name: \"재고목록\",\n      link: \"/stock/edit\",\n    },\n  ];\n\n  const adminNoticeSideMenuElements = [\n    {\n      id: \"ansInquiry\",\n      name: \"공지목록\",\n      link: \"/admin/notice\",\n    },\n    {\n      id: \"ansInquiry\",\n      name: \"문의답변\",\n      link: \"/admin/inquiry\",\n    },\n  ];\n\n  const homeMenuObj = sideMenuObj(\"홈\", []);\n  const orderMenuObj = sideMenuObj(\"발주관리\", orderSideMenuElements);\n  const stockMenuObj = sideMenuObj(\"재고관리\", stockSideMenuElements);\n  const userMenuObj = sideMenuObj(\"회원정보\", userMenuElements);\n  const customerCenterObj = sideMenuObj(\"고객센터\", customerCenterElements);\n  const adminObj = sideMenuObj(\"관리\", adminNoticeSideMenuElements);\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/testChart\">\n          <DoughnutChart />\n        </Route>\n        <Route path=\"/testTable\">\n          <PaginationTableRender />\n        </Route>\n        <Route path=\"/login/findid\">\n          <JeanFindId />\n        </Route>\n        <Route path=\"/login/findpwd\">\n          <JeanFindPw />\n        </Route>\n        <Route path=\"/login/makeaccount\">\n          <JeanJoin />\n        </Route>\n        <Route path=\"/login\">\n          <JeanLogin />\n        </Route>\n        <Route path=\"/qna/write\">\n          <QnaWrite sideMenu={customerCenterObj} />\n        </Route>\n        <Route path=\"/qna/:id\">\n          <QnaDetails sideMenu={customerCenterObj} />\n        </Route>\n        <Route path=\"/qna\">\n          <CustomerCenter sideMenu={customerCenterObj} />\n        </Route>\n        <Route path=\"/notice/:id\">\n          <NoticeDetails sideMenu={customerCenterObj} />\n        </Route>\n        <Route path=\"/notice\">\n          <NoticeList sideMenu={customerCenterObj} />\n        </Route>\n        <Route path=\"/user/changepwd\">\n          <UserPwdChange sideMenu={userMenuObj} />\n        </Route>\n        <Route path=\"/user/delete\">\n          <UserDelete sideMenu={userMenuObj} />\n        </Route>\n        <Route path=\"/user/info\">\n          <UserInfo sideMenu={userMenuObj} />\n        </Route>\n        <Route path=\"/order/searchorder\">\n          <OrderResult sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/order/requestorder/basket\">\n          <OrderRequestBasket sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/order/requestorder/:id\">\n          <OrderRequestProduct sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/order/requestorder\">\n          <OrderRequest sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/order/retailer/add\">\n          <AddRetailer sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/order/retailer/:id\">\n          <RetailerDetails sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/order/retailer\">\n          <RetailerList sideMenu={orderMenuObj} />\n        </Route>\n        <Route path=\"/stock/edit\">\n          <EditStock sideMenu={stockMenuObj} />\n        </Route>\n        <Route path=\"/stock/add\">\n          <ManageStock sideMenu={stockMenuObj} />\n        </Route>\n        <Route path=\"/admin/notice/:id\">\n          <AdminNoticeDetails sideMenu={adminObj} />\n        </Route>\n        <Route path=\"/admin/notice\">\n          <AdminNotice sideMenu={adminObj} />\n        </Route>\n        <Route path=\"/admin/inquiry/:id\">\n          <AdminInquiryDetails sideMenu={adminObj} />\n        </Route>\n        <Route path=\"/admin/inquiry\">\n          <AdminInquiry sideMenu={adminObj} />\n        </Route>\n        <Route path=\"/admin/login\">\n          <AdminLogin sideMenu={adminObj} />\n        </Route>\n        <Route path=\"/\">\n          <Home sideMenu={homeMenuObj} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./reset.css\";\nimport \"./variable.css\";\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart_setting\":\"mainMenu-content_chart_setting__OXBIc\",\"miniMenu_title\":\"mainMenu-content_miniMenu_title__3gxNO\",\"miniMenu_box\":\"mainMenu-content_miniMenu_box__2cHww\",\"miniTable\":\"mainMenu-content_miniTable__3RMll\",\"miniTable_header\":\"mainMenu-content_miniTable_header__STiSm\",\"miniTable_item\":\"mainMenu-content_miniTable_item__2UZ1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__searchItem\":\"search-item_screenPage__searchItem__2w_A5\",\"screenPage__nextButton\":\"search-item_screenPage__nextButton__2UIvQ\",\"screenPage_title\":\"search-item_screenPage_title__29rLS\",\"screenPage__searchBox\":\"search-item_screenPage__searchBox__2-fQr\",\"screenPage__section_row\":\"search-item_screenPage__section_row__3UsyK\",\"screenPage__section_column\":\"search-item_screenPage__section_column__3ePgq\",\"screenPage__searchList\":\"search-item_screenPage__searchList___EZb-\",\"screenPage__searchOption\":\"search-item_screenPage__searchOption__1Nu8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__searchItem\":\"search-order_screenPage__searchItem__3xNYI\",\"screenPage__nextButton\":\"search-order_screenPage__nextButton__mFUor\",\"screenPage_title\":\"search-order_screenPage_title__3aNhk\",\"screenPage__searchBox\":\"search-order_screenPage__searchBox__NMDZA\",\"screenPage__section_column\":\"search-order_screenPage__section_column__HBctI\",\"screenPage__section_row\":\"search-order_screenPage__section_row__2iSjI\",\"screenPage__searchList\":\"search-order_screenPage__searchList__3wXjp\",\"screenPage__searchOption\":\"search-order_screenPage__searchOption__7dsc8\",\"tableTitle\":\"search-order_tableTitle__Jdrq9\",\"editTitle\":\"search-order_editTitle__1PwX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgImg\":\"Login_bgImg__1QO3p\",\"loginBox\":\"Login_loginBox__3xoQd\",\"login__logo\":\"Login_login__logo__3Px4H\",\"loginBox__loginForm\":\"Login_loginBox__loginForm__3_dlX\",\"loginBox__IDPW\":\"Login_loginBox__IDPW__2Uyjg\",\"loginBox__loginOption\":\"Login_loginBox__loginOption__1vIzR\",\"loginBox__loginOption_auto\":\"Login_loginBox__loginOption_auto__1MzUG\",\"loginBox__lostIDPW\":\"Login_loginBox__lostIDPW__pPUsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__sidemenu\":\"sidemenu-bar_screenPage__sidemenu__3Zh03\",\"screenPage__sidemenu_attr\":\"sidemenu-bar_screenPage__sidemenu_attr__3miwm\",\"screenPage__sidemenu_blue\":\"sidemenu-bar_screenPage__sidemenu_blue__2AAeZ\",\"screenPage__sidemenu_white\":\"sidemenu-bar_screenPage__sidemenu_white__3VIHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__searchResultTable\":\"result-table_screenPage__searchResultTable__3CFXe\",\"screenPage__searchResultTable_header\":\"result-table_screenPage__searchResultTable_header__1f3dP\",\"screenPage__searchResultTable_items\":\"result-table_screenPage__searchResultTable_items__jG3QO\",\"pagination\":\"result-table_pagination__3S-Cy\",\"pagination__pages\":\"result-table_pagination__pages__2kxSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoBox\":\"userInfo_userInfoBox__jTVwo\",\"userInfoBox__grey\":\"userInfo_userInfoBox__grey__2jzSF\",\"userInfoList\":\"userInfo_userInfoList__2ANAE\",\"userInfo_row\":\"userInfo_userInfo_row__2vaRS\",\"userInfoList__readonly\":\"userInfo_userInfoList__readonly__FXSTp\",\"userInfoList__saveChange\":\"userInfo_userInfoList__saveChange__3v-EI\",\"userInfoList__title\":\"userInfo_userInfoList__title__29AEz\",\"userInfoList__item\":\"userInfo_userInfoList__item__lZjP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qnaBox\":\"qnaReadEdit_qnaBox__5ZvkO\",\"qnaTitle\":\"qnaReadEdit_qnaTitle__dNGcR\",\"noticeEditDate\":\"qnaReadEdit_noticeEditDate__20BLR\",\"qnaBox__row\":\"qnaReadEdit_qnaBox__row__5ejzQ\",\"qnaBox__row_title\":\"qnaReadEdit_qnaBox__row_title__3k9Fb\",\"noticeTitle\":\"qnaReadEdit_noticeTitle__1DlpC\",\"qnaContent\":\"qnaReadEdit_qnaContent__nuuFB\",\"noticeContent\":\"qnaReadEdit_noticeContent__1np_X\",\"qnaEditButton\":\"qnaReadEdit_qnaEditButton__T6LzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__content\":\"screen-content_screenPage__content__1YHnl\",\"screenPage__content_box\":\"screen-content_screenPage__content_box__3I9Su\"};"],"sourceRoot":""}