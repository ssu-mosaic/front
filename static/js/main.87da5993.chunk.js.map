{"version":3,"sources":["routes/JeanLogin/jeanStyle.module.css","components/css/screen-content.module.css","components/css/search-item.module.css","routes/css/Home.module.css","components/css/menu-bar.module.css","image/logo.JPG","components/menu-bar.js","components/sidemenu-bar.js","components/doughnut-order-complete.js","components/main-menu-content-sector.js","routes/Home.js","image/jeanLogo.JPG","routes/JeanLogin/JeanLogin.js","routes/JeanLogin/JeanJoin.js","components/search-item.js","routes/SearchItem.js","components/ORDER_LIST/Tables.js","components/ORDER_LIST/paginationNoHook.js","components/ORDER_LIST/tableRender.js","components/search-order.js","routes/SearchOrder.js","components/RETAILER_LIST/Tables.js","components/RETAILER_LIST/editRow.js","components/RETAILER_LIST/paginationNoHook.js","components/RETAILER_LIST/tableRender.js","components/order-confirm.js","routes/ConfirmItem.js","components/stock-management.js","routes/ManageStock.js","components/STOCK_LIST/Tables.js","components/STOCK_LIST/editRow.js","components/STOCK_LIST/paginationNoHook.js","components/STOCK_LIST/tableRender.js","components/edit-stock.js","routes/EditStock.js","components/RETAILER_LIST_READONLY/Tables.js","components/RETAILER_LIST_READONLY/paginationNoHook.js","components/RETAILER_LIST_READONLY/tableRender.js","components/order-request.js","routes/OrderRequest.js","TablePaginationTest/Tables.js","TablePaginationTest/editRow.js","TablePaginationTest/paginationNoHook.js","TablePaginationTest/tableRender.js","ChartTest/chartRender.js","App.js","index.js","components/css/sidemenu-bar.module.css","components/RETAILER_LIST_READONLY/retailer-list-readonly.module.css","components/css/result-table.module.css","components/css/search-order.module.css","components/css/main-menu-content-sector.module.css","components/css/doughnut-order-complete.module.css"],"names":["module","exports","userID","localStorage","getItem","MenuBar","className","styles","menuBar","menuBar__column","to","src","logo","menuBar__logo","alt","menuBar__nav","menuBar__list","menuBar__btn","menuBar__profile","icon","faUserCircle","size","faSignOutAlt","onClick","setItem","SideMenuBar","sideMenu","screenPage__sidemenu","screenPage__sidemenu_blue","screenPage__sidemenu_attr","name","faChevronDown","elementsObj","map","sideMenuElement","link","screenPage__sidemenu_white","id","data","labels","datasets","backgroundColor","DoughnutOrderComplete","doughnut_setting","MainMenuContentSector","screenPage__content","screenPage__sector_mainColumn","screenPage__sector_row","screenPage__sectorBox_wide","screenPage__sectorBox_attr","screenPage__sector_column","screenPage__sectorBox_square","screenPage__sectorBox_tall","Home","screenPage","USER_ID","JeanLogin","resetLoginData","password","newLoginData","useState","userId","setUserId","userPw","setUserPw","jeanStyles","jeanBody","logo_Img","join_form","onSubmit","event","preventDefault","axios","post","then","response","console","log","alert","window","location","href","int_area","type","onChange","target","value","required","for","btn_area","onclick","caption","JeanJoin","useEffect","newAccountData","email","businessNo","address","phone","resetAccountData","userPwRe","setUserPwRe","pwValid","setPwValid","setBusinessNo","setEmail","setAddress","phoneNum","setPhoneNum","ApiCall","a","login_form","SearchForItem","newRetailerData","userName","retailerName","retailerPhone","retailerEmail","retailerAddress","retailerMemo","resetRetailerData","setRetailerName","setRetailerPhone","setRetailerEmail","setRetailerAddress","setRetailerMemo","contentStyles","screenPage__content_box","screenPage__searchItem","screenPage__nextButton","screenPage__searchBox","screenPage_title","screenPage__section_row","screenPage__searchList","screenPage__section_column","screenPage__searchOption","screenPage__searchResult","SearchItem","Tables","orderDate","orderDetail","screenPage__searchResultTable_items","slice","Pagination","tablePerPage","totalTables","paginate","pageNumbers","i","Math","ceil","push","pagination","number","pagination__pages","OrderList","loading","setLoading","currentPage","setCurrentPage","table","setTable","userData","indexOfLastTable","indexOfFirstTable","tables","screenPage__searchResultTable","screenPage__searchResultTable_header","length","pageNumber","Date","SearchOrder","retailerId","handleEditClick","handleDeleteClick","rowData","faHammer","faTimes","EditRow","editFormData","handleEditFormChange","handleCancelClick","placeholder","faCheck","RetailerListTable","baseURL","rowId","setRowId","formValues","setEditFormData","fieldName","getAttribute","fieldValue","newFormData","deleteForm","newTable","index","findIndex","row","splice","editedForm","ConfirmForItem","ConfirmItem","StockManagement","newStockData","stockName","stockCount","resetStockData","setStockName","setStockCount","manageStock","stockId","StockListTable","EditForStock","EditStock","handleRequestClick","request","setRequest","requestId","setRequestId","requestName","setRequestName","setOrderDetail","resultStyles","request__name","request__section","request__column","disabled","submitData","RequestForOrder","OrderRequest","first_name","last_name","birth","age","country","dAteofbirth","phine","PaginationTableRender","MOCK_DATA","DoughnutChart","App","sideMenuObj","topName","sideMenuElements","homeMenuObj","orderMenuObj","stockMenuObj","path","ManageStock","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87da5993.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo_Img\":\"jeanStyle_logo_Img__1__v4\",\"jeanBody\":\"jeanStyle_jeanBody__2ThwB\",\"login_form\":\"jeanStyle_login_form__2W91J\",\"join_form\":\"jeanStyle_join_form__eC7Rf\",\"int_area\":\"jeanStyle_int_area__2i0dU\",\"pwch\":\"jeanStyle_pwch__2cgnM\",\"btn_area\":\"jeanStyle_btn_area__2I0Am\",\"caption\":\"jeanStyle_caption__1VwcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__content\":\"screen-content_screenPage__content__1YHnl\",\"screenPage__content_box\":\"screen-content_screenPage__content_box__3I9Su\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__searchItem\":\"search-item_screenPage__searchItem__2w_A5\",\"screenPage__nextButton\":\"search-item_screenPage__nextButton__2UIvQ\",\"screenPage_title\":\"search-item_screenPage_title__29rLS\",\"screenPage__searchBox\":\"search-item_screenPage__searchBox__2-fQr\",\"screenPage__section_row\":\"search-item_screenPage__section_row__3UsyK\",\"screenPage__section_column\":\"search-item_screenPage__section_column__3ePgq\",\"screenPage__searchList\":\"search-item_screenPage__searchList___EZb-\",\"screenPage__searchOption\":\"search-item_screenPage__searchOption__1Nu8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage\":\"Home_screenPage__1L_Dy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBar\":\"menu-bar_menuBar__1DLTI\",\"menuBar__column\":\"menu-bar_menuBar__column__2x6Me\",\"menuBar__logo\":\"menu-bar_menuBar__logo__3QRMV\",\"menuBar__list\":\"menu-bar_menuBar__list__2I6KB\",\"menuBar__btn\":\"menu-bar_menuBar__btn__2AEWt\",\"menuBar__profile\":\"menu-bar_menuBar__profile__3eECj\"};","export default __webpack_public_path__ + \"static/media/logo.005d68d9.JPG\";","import styles from \"./css/menu-bar.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt , faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from '../image/logo.JPG';\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\nfunction MenuBar(){\r\n\r\n    const onLogoutClick = () => {\r\n        localStorage.setItem('USER_ID',null);\r\n        userID = null;\r\n    }\r\n\r\n    if(userID === null){\r\n        userID = \"로그인해볼까요\";\r\n    }\r\n\r\n    return(\r\n        <div className={styles.menuBar}>\r\n            <div className={styles.menuBar__column}>\r\n                <Link to={`/`}> <img src={logo} className={styles.menuBar__logo} alt=\"logo img\" /> </Link>\r\n                {/* <!-- Easy stock logo--> */}\r\n            </div>\r\n            <div className={styles.menuBar__column}>\r\n                <nav className={styles.menuBar__nav}>\r\n                    <ul className={styles.menuBar__list}>\r\n                        <Link to={`/order/searchitem`}><li className={styles.menuBar__btn}><span>발주관리</span></li></Link>\r\n                        <Link to={`/stock/add`}><li className={styles.menuBar__btn}><span>재고관리</span></li></Link>\r\n                        {/* <Link to={`/`}><li className={styles.menuBar__btn}><span>고객센터</span></li></Link> */}\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n            <div className={styles.menuBar__column}>\r\n                <div className={styles.menuBar__profile}>\r\n                    <Link to={`/login`}><FontAwesomeIcon icon={faUserCircle} size=\"2x\" /></Link>\r\n                    <Link to={`/login`}><span>{userID}</span></Link>\r\n                    <Link to={`/login`}><FontAwesomeIcon icon={faSignOutAlt} size=\"2x\" onClick={onLogoutClick}/></Link>\r\n                </div>\r\n                {/* <!--who login and icon--> */}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MenuBar;","import styles from \"./css/sidemenu-bar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction SideMenuBar({sideMenu}){\r\n\r\n    return(\r\n        <div className={styles.screenPage__sidemenu}>\r\n            <div className={`${styles.screenPage__sidemenu_blue} ${styles.screenPage__sidemenu_attr}`}>\r\n                <span>{sideMenu.name}</span>\r\n                <FontAwesomeIcon icon={faChevronDown} />\r\n            </div>\r\n\r\n            {(sideMenu.elementsObj).map((sideMenuElement)=>(\r\n                <Link to= {sideMenuElement.link} key={sideMenuElement.id}>\r\n                    <div className={`${styles.screenPage__sidemenu_white} ${styles.screenPage__sidemenu_attr}`}>\r\n                        <span>{sideMenuElement.name}</span>\r\n                    </div> \r\n                </Link>\r\n\r\n            ))}\r\n            \r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nSideMenuBar.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default SideMenuBar;","import { Doughnut } from \"react-chartjs-2\";\r\nimport styles from \"./css/doughnut-order-complete.module.css\";\r\n\r\nconst data = {\r\n    labels: [\"미완료\", \"준비중\" ,\"완료\"],\r\n    datasets: [{\r\n        data: [12, 3, 5],\r\n        backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\", \r\n            \"rgba(255, 206, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n        ]\r\n    }]\r\n};\r\n\r\nfunction DoughnutOrderComplete(){\r\n    return (\r\n        <div>\r\n            <h1>발주 완료 지표</h1>\r\n            <div className={styles.doughnut_setting}>\r\n                <Doughnut data={data}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoughnutOrderComplete;","import styles from \"./css/main-menu-content-sector.module.css\";\r\nimport DoughnutOrderComplete from \"./doughnut-order-complete.js\";\r\n\r\nfunction MainMenuContentSector(){\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div className={styles.screenPage__content}>\r\n            <div className={styles.screenPage__sector_mainColumn}>\r\n                <div className={`${styles.screenPage__sector_row} ${styles.screenPage__sectorBox_wide} ${styles.screenPage__sectorBox_attr}`}>\r\n                    <span>간단한 아이콘 지표 보여주기 </span>\r\n                </div>\r\n                <div className={styles.screenPage__sector_row }>\r\n                    <div className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}>\r\n                        <span>발주 통계 지표</span>\r\n                    </div>\r\n                    <div className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}>\r\n                        <DoughnutOrderComplete />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.screenPage__sector_row }>\r\n                    <div className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}>\r\n                        <span>재정 지표 추후 추가</span>\r\n                    </div>\r\n                    <div className={`${styles.screenPage__sector_column} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}>\r\n                        <span>재고 관리 지표</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.screenPage__sector_mainColumn}>\r\n                <div className={`${styles.screenPage__sector_row} ${styles.screenPage__sectorBox_tall} ${styles.screenPage__sectorBox_attr}`}>\r\n                        <span>공지사항</span>\r\n                </div>\r\n                <div className={`${styles.screenPage__sector_row} ${styles.screenPage__sectorBox_square} ${styles.screenPage__sectorBox_attr}`}>\r\n                        <span>인사 관리 지표 추후 추가</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default MainMenuContentSector;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport MainMenuContentSector from \"../components/main-menu-content-sector\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Home({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <MainMenuContentSector/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nHome.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/jeanLogo.4d1a538a.JPG\";","import jeanStyles from \"./jeanStyle.module.css\";\r\nimport logo from '../../image/jeanLogo.JPG';\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nlet USER_ID =\"\";\r\n//let loginValid = false;\r\n\r\nfunction JeanLogin(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n    \r\n    \r\n\r\n    const resetLoginData = {\r\n        name: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    let newLoginData = {\r\n        name: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    const [loginValid, setLoginValid] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [userPw, setUserPw] = useState(\"\");\r\n\r\n\r\n\r\n    //const ApiCall = () => {\r\n        //useEffect(() => {\r\n        //    axios.post(`${baseURL}/login`,newLoginData)\r\n        //        .then((response) => {\r\n        //            console.log(response.data);\r\n                    //setLoginValid(response.data);\r\n                    //console.log(newLoginData);\r\n        //       });\r\n        //let validCheck = await response.data;\r\n        //loginValid = await response.data;\r\n        \r\n        //console.log(validCheck);\r\n        //console.log(loginValid);\r\n\r\n        //return await response.data;\r\n        //}, []);\r\n    //}\r\n\r\n    const onIdChange= (event) => {\r\n        setUserId(event.target.value);\r\n    }\r\n    const onPwChange= (event) => {\r\n        setUserPw(event.target.value);\r\n    }\r\n\r\n    const onSubmit= (event) => {\r\n        event.preventDefault();\r\n        newLoginData.name = userId;\r\n        newLoginData.password = userPw;\r\n\r\n        axios.post(`${baseURL}/login`,newLoginData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //setLoginValid(response.data);\r\n                //console.log(newLoginData);\r\n                if(response.data === true){\r\n                    USER_ID=userId;\r\n                    localStorage.setItem('USER_ID',USER_ID);\r\n                    alert(`환영해요 ${userId}`);\r\n                    newLoginData = resetLoginData;\r\n                    window.location.href = \"https://ssu-mosaic.github.io/front\"\r\n                    //window.location.href = \"/\"\r\n                }\r\n                else{\r\n                    alert(\"없는 아이디거나 비밀번호가 틀렸어요\");\r\n                }\r\n            \r\n            });\r\n            //ApiCall();\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={jeanStyles.jeanBody}>\r\n            <img src={logo} className={jeanStyles.logo_Img} alt=\"logo_Img\"/>\r\n            <section className={jeanStyles.join_form}>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"text\" name=\"userId\" id=\"userId\" onChange={onIdChange}  required/>\r\n                        <label for=\"userId\">ID</label>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"password\" name=\"pw\" id=\"pw\" onChange={onPwChange} required/>\r\n                        <label for=\"pw\">PASSWORD</label>\r\n                    </div>\r\n                    <div className={jeanStyles.btn_area}>\r\n                        <button type = \"submit\" onclick=\"location.href=''\">LOGIN</button>\r\n                    </div>\r\n                </form>\r\n                <div className={jeanStyles.caption}>\r\n                    <Link to ={\"/login/makeaccount\"}> 회원가입</Link>\r\n                    {/* <a href=\"join.html\">Join</a> */}\r\n                </div>\r\n                <div className={jeanStyles.caption}>\r\n                    <Link to ={\"/login/makeaccount\"}> ID/PW 찾기</Link>\r\n                    {/* <a href=\"forgetPass.html\">Forgot Password?</a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default JeanLogin;\r\n","import jeanStyles from \"./jeanStyle.module.css\";\r\n//import { Link } from \"react-router-dom\";\r\nimport logo from '../../image/jeanLogo.JPG';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction JeanJoin(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n    useEffect(() => {\r\n        \r\n    }, []);\r\n\r\n    let newAccountData = {\r\n        email: \"\",\r\n        businessNo: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        address: \"\",\r\n        phone: \"\"\r\n    }\r\n    const resetAccountData = {\r\n        email: \"\",\r\n        businessNo: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        address: \"\",\r\n        phone: \"\"\r\n    }\r\n    const [data, setData] = useState(false);\r\n\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [userPw, setUserPw] = useState(\"\");\r\n    const [userPwRe, setUserPwRe] = useState(\"\");\r\n    const [pwValid, setPwValid] = useState(false);\r\n    const [businessNo, setBusinessNo] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [phoneNum, setPhoneNum] = useState(\"\");\r\n\r\n    const ApiCall = async () => {\r\n        const response = await axios.post(`${baseURL}/register`,newAccountData)\r\n        const data = await response.data;\r\n        console.log(data);\r\n        //setData(data);\r\n        //return await response.data;\r\n    }\r\n\r\n    const onIdChange= (event) => {\r\n        setUserId(event.target.value);\r\n    }\r\n    const onPwChange= (event) => {\r\n        setPwValid(false);\r\n        setUserPw(event.target.value);\r\n    }\r\n    const onPwReChange= (event) => {\r\n        setPwValid(false);\r\n        setUserPwRe(event.target.value);\r\n    }\r\n    const onPwCheckClick= () =>{\r\n        if(userPw === userPwRe){\r\n            setPwValid(true);\r\n            alert(\"비밀번호 일치확인\");\r\n        }\r\n        else{\r\n            setPwValid(false);\r\n            alert(\"비밀번호 불일치\");\r\n        }\r\n    }\r\n    const onBusinessNoChange= (event) => {\r\n        setBusinessNo(event.target.value);\r\n    }\r\n    const onEmailChange= (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const onAddressChange= (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n    const onPhoneChange= (event) => {\r\n        setPhoneNum(event.target.value);\r\n    }\r\n\r\n    const onSubmit= (event) => {\r\n        event.preventDefault();\r\n        newAccountData.name = userId;\r\n        newAccountData.password = userPw;\r\n        newAccountData.businessNo = businessNo;\r\n        newAccountData.email = email;\r\n        newAccountData.address = address;\r\n        newAccountData.phone = phoneNum;\r\n\r\n        ApiCall();\r\n\r\n        //reset \r\n        newAccountData = resetAccountData;\r\n        if((pwValid === true)){\r\n            alert(\"가입 완료 로그인 화면으로 갈게요\");\r\n            //window.location.href = \"/login\"\r\n            //https://ssu-mosaic.github.io/login\r\n            window.location.href = \"https://ssu-mosaic.github.io/login\"\r\n        }\r\n        else{\r\n            alert(\"가입 실패 비밀번호 등을 살펴보세요 \");\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className={jeanStyles.jeanBody}>\r\n            <img src={logo} className={jeanStyles.logo_Img} alt=\"logo_Img\"/>\r\n            <section className={jeanStyles.login_form}>\r\n                <form onSubmit={onSubmit}> \r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"text\" name=\"userId\" id=\"userId\" onChange={onIdChange}  required/>\r\n                        <label for=\"userId\">ID</label>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"password\" name=\"password\" id=\"pw\" onChange={onPwChange} required/>\r\n                        <label for=\"pw\">PASSWORD</label>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"password\" name=\"pwch\" id=\"pwch\" onChange={onPwReChange} required/>\r\n                        <label for=\"pwch\" id=\"pwch\">PASSWORD CHECK</label>\r\n                        <button type = \"button\" onClick={onPwCheckClick}>check</button>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"text\" name=\"businessNo\" id=\"busNo\" onChange={onBusinessNoChange} required/>\r\n                        <label for=\"busNo\">BUSINESS.NO</label>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={onEmailChange} required/>\r\n                        <label for=\"email\">E-mail</label>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"text\" name=\"address\" id=\"addr\" onChange={onAddressChange} required/>\r\n                        <label for=\"addr\">ADDRESS</label>\r\n                    </div>\r\n                    <div className={jeanStyles.int_area}>\r\n                        <input type=\"text\" name=\"phone\" id=\"ph\" onChange={onPhoneChange} required/>\r\n                        <label for=\"ph\">PHONE</label>\r\n                    </div>\r\n\r\n                    <div className={jeanStyles.btn_area}>\r\n                        <button type = \"submit\">OK</button>\r\n\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default JeanJoin;\r\n","import contentStyles from \"./css/screen-content.module.css\";\r\nimport styles from \"./css/search-item.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n//import SearchItemResultTable from \"./search-item-result\";\r\n\r\nconst userID = localStorage.getItem('USER_ID')\r\n\r\nfunction SearchForItem(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n    let newRetailerData = {\r\n        userName: \"\",\r\n        retailerName: \"\",\r\n        retailerPhone: \"\",\r\n        retailerEmail: \"\",\r\n        retailerAddress: \"\",\r\n        retailerMemo: \"\",\r\n    }\r\n    const resetRetailerData = {\r\n        userName: \"\",\r\n        retailerName: \"\",\r\n        retailerPhone: \"\",\r\n        retailerEmail: \"\",\r\n        retailerAddress: \"\",\r\n        retailerMemo: \"\",\r\n    }\r\n\r\n    const [userId] = useState(userID);\r\n    const [retailerName, setRetailerName] = useState(\"\");\r\n    const [retailerPhone, setRetailerPhone] = useState(\"\");\r\n    const [retailerEmail, setRetailerEmail] = useState(\"\");\r\n    const [retailerAddress, setRetailerAddress] = useState(\"\");\r\n    const [retailerMemo, setRetailerMemo] = useState(\"\");\r\n\r\n    const ApiCall = async () => {\r\n        const response = await axios.post(`${baseURL}/retailer/add`,newRetailerData)\r\n        const data = await response.data;\r\n        console.log(newRetailerData);\r\n        console.log(data);\r\n\r\n        //setData(data);\r\n        //return await response.data;\r\n    }\r\n\r\n    const onRetailerNameChange = (event) => {\r\n        setRetailerName(event.target.value);\r\n    }\r\n    const onRetailerPhoneChange = (event) => {\r\n        setRetailerPhone(event.target.value);\r\n    }\r\n    const onRetailerEmailChange = (event) => {\r\n        setRetailerEmail(event.target.value);\r\n    }\r\n    const onRetailerAddressChange = (event) => {\r\n        setRetailerAddress(event.target.value);\r\n    }\r\n    const onRetailerMemoChange = (event) => {\r\n        setRetailerMemo(event.target.value);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        newRetailerData.userName = userId;\r\n        newRetailerData.retailerName = retailerName;\r\n        newRetailerData.retailerPhone = retailerPhone;\r\n        newRetailerData.retailerEmail = retailerEmail;\r\n        newRetailerData.retailerAddress = retailerAddress;\r\n        newRetailerData.retailerMemo = retailerMemo;\r\n        console.log(newRetailerData);\r\n\r\n        ApiCall();\r\n        \r\n        // setRetailerName(\"\");\r\n        // setRetailerPhone(\"\");\r\n        // setRetailerEmail(\"\");\r\n        // setRetailerAddress(\"\");\r\n        // setRetailerMemo(\"\");\r\n        newRetailerData = resetRetailerData;\r\n    }\r\n\r\n    return(\r\n\r\n        <div className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}>\r\n            <div className={styles.screenPage__searchItem}>\r\n                <span>거래처등록</span>\r\n            </div>\r\n            <div className={styles.screenPage__nextButton}>\r\n                <Link to={'/order/confirmitem'}><input type=\"button\" value=\"거래처목록\"/></Link>\r\n            </div>\r\n            <div className={styles.screenPage__searchBox}>\r\n                <div className={styles.screenPage_title}><span>거래처정보입력</span></div>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className={`${styles.screenPage__section_row} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_column}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"company\">거래처이름 </label> \r\n                                <input type=\"text\" onChange={onRetailerNameChange} required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"company\">거래처연락처 </label> \r\n                                <input type=\"text\" onChange={onRetailerPhoneChange} required/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={styles.screenPage__section_column}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">거래처주소 </label> \r\n                                <input type=\"text\" onChange={onRetailerAddressChange} required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"itemName\">거래처이메일 </label> \r\n                                <input type=\"text\" onChange={onRetailerEmailChange} required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_column}>\r\n                                <div className={styles.screenPage__searchOption}>\r\n                                    <label for=\"condition\">메모 </label> \r\n                                    <textarea onChange={onRetailerMemoChange} required/>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.screenPage__section_row}>\r\n                            <input type=\"submit\" value=\"등록\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span></span></div>\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default SearchForItem;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport SearchForItem from \"../components/search-item\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SearchItem({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <SearchForItem/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nSearchItem.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SearchItem;","import styles from \"../css/result-table.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Tables({ retailerName, orderDate, retailerPhone, orderDetail }) {\r\n    \r\n    const rowData = {\r\n        retailerName: retailerName,\r\n        orderDate: orderDate,\r\n        retailerPhone: retailerPhone,\r\n        orderDetail: orderDetail,\r\n\r\n    }\r\n    //console.log(orderDetail);\r\n    return (\r\n            <tr key ={retailerPhone} className={styles.screenPage__searchResultTable_items}>\r\n                <td key={'retailerName_td'}>{retailerName}</td>\r\n                <td key={'retailerPhone_td'}>{orderDate}</td>\r\n                <td key={'retailerEmail_td'}>{retailerPhone}</td>\r\n                <td key={'orderDetail_td'}>{`${orderDetail.slice(0,20)}...`}</td>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={styles.pagination}>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className={styles.pagination__pages}>\r\n                            <Link to={'/order/searchorder'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState , useEffect } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport Tables from './Tables';\r\nimport Pagination from './paginationNoHook';\r\nimport Fragment from 'render-fragment';\r\nimport styles from \"../css/result-table.module.css\";\r\n//import resultStyles from \"./retailer-list-readonly.module.css\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\n//발주조회\r\nfunction OrderList(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n    \r\n    // If purpose for testing without server useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [tablePerPage] = useState(7);\r\n    const [table , setTable] = useState([]);\r\n    const [request, setRequest] = useState(false);\r\n    const [requestId, setRequestId] = useState(\"\");\r\n    const [requestName, setRequestName] = useState(\"\");\r\n    const [orderDetail, setOrderDetail] = useState(\"\");\r\n\r\n    //get data from server\r\n    useEffect(() => {\r\n\r\n        const userData = {\r\n            userName: userID,\r\n        }\r\n        //console.log(userData);\r\n        // const ApiCallForList = async () => {\r\n        //     const response = await axios.post(`${baseURL}/retailer/orderList`,userName)\r\n        //     const data = await response.data;\r\n        //     console.log(data);\r\n        //     setTable(data);\r\n        //     setLoading(false);\r\n        //     //return await response.data;\r\n        // }\r\n        //ApiCallForList();\r\n        //setTable(MOCK_DATA);\r\n        axios.post(`${baseURL}/order/list`,userData)\r\n            .then((response) => {\r\n                setTable(response.data);\r\n                setLoading(false);\r\n                console.log(userData);\r\n            });\r\n\r\n        \r\n    },[]);\r\n\r\n    // Get current tables\r\n    const indexOfLastTable = currentPage * tablePerPage;\r\n    const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n    const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n    //change page number\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {loading ? <strong>로딩중...</strong> :\r\n                (\r\n                    <Fragment>\r\n                        <form>\r\n                            <table className={styles.screenPage__searchResultTable}>\r\n                            <thead>\r\n                                <tr className={styles.screenPage__searchResultTable_header}>\r\n                                    <th>거래처 이름</th>\r\n                                    <th>주문 날짜</th>\r\n                                    <th>거래처 연락처</th>\r\n                                    <th>주문상세</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"testTable__tbody\">\r\n                                {\r\n                                    tables.map((tables) => (\r\n                                                <Tables \r\n                                                key={tables.retailerPhone}\r\n                                                retailerName={tables.retailerName}\r\n                                                orderDate={tables.orderDate}\r\n                                                retailerPhone={tables.retailerPhone}\r\n                                                orderDetail={tables.orderDetail}\r\n                                                />\r\n                                        \r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            </table>\r\n                        </form>\r\n                        <Pagination tablePerPage={tablePerPage} totalTables={table.length} paginate={paginate}/>\r\n                    </Fragment>\r\n                )\r\n            \r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderList;\r\n","import contentStyles from \"./css/screen-content.module.css\";\r\nimport styles from \"./css/search-order.module.css\";\r\n//import styles fromSearchOrderResultTable from \"./search-order-result\";\r\n//import { DateRangePicker } from 'rsuite';\r\n//import 'rsuite/dist/rsuite.css';\r\nimport Fragment from 'render-fragment';\r\nimport OrderList from \"./ORDER_LIST/tableRender\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SearchForItem(){\r\n\r\n    const [dateRange, setDateRange] = useState([new Date(), new Date()]);\r\n\r\n    // const onDateChange = (event) =>{\r\n    //     if(Array.isArray(event)){\r\n    //         console.log(event);\r\n    //         setDateRange(event);\r\n    //         console.log(event[0]);\r\n    //     }\r\n    //     else{\r\n    //         setDateRange([new Date(), new Date()]);\r\n    //     }\r\n    // }\r\n    \r\n    return(\r\n        \r\n        <div className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}>\r\n            <div className={styles.screenPage__searchItem}>\r\n                <span>발주조회</span>\r\n            </div>\r\n            <div className={styles.screenPage__nextButton}>\r\n            <Link to={'/order/requestorder'}><input type=\"button\" value=\"발주요청\"/></Link>\r\n            </div>\r\n            {/* <div className={styles.screenPage__searchBox}>\r\n                <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form method=\"get\">\r\n                    <div className={`${styles.screenPage__section_column} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label>조회기간 </label> \r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">매입거래처 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">물품명 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">확정</label> \r\n                                <select name=\"condition\">\r\n                                    <option value=\"all\">전체</option>\r\n                                    <option value=\"positive\">확정</option>\r\n                                    <option value=\"negative\">미확정</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className={styles.screenPage__section_column}>\r\n                            <input type=\"submit\" value=\"조회\"/>\r\n                    </div>\r\n                </form>\r\n            </div>   */}\r\n            <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span>발주목록</span></div>\r\n                <OrderList/>\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default SearchForItem;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport SearchForOrder from \"../components/search-order\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SearchOrder({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <SearchForOrder/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nSearchOrder.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SearchOrder;","import styles from \"../css/result-table.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes, faHammer } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\nfunction Tables({ retailerId, retailerName, retailerPhone, retailerEmail, retailerAddress, retailerMemo, handleEditClick, handleDeleteClick }) {\r\n    \r\n    const rowData = {\r\n        userName : userID,\r\n        retailerId: retailerId,\r\n        retailerName: retailerName,\r\n        retailerPhone: retailerPhone,\r\n        retailerEmail: retailerEmail,\r\n        retailerAddress: retailerAddress,\r\n        retailerMemo: retailerMemo,\r\n    }\r\n\r\n    //console.log(retailerAddress);\r\n\r\n    return (\r\n            <tr key ={retailerId} className={styles.screenPage__searchResultTable_items}>\r\n                <td key={'retailerName_td'}>{retailerName}</td>\r\n                <td key={'retailerPhone_td'}>{retailerPhone}</td>\r\n                <td key={'retailerEmail_td'}>{retailerEmail}</td>\r\n                <td key={'retailerAddress_td'}>{`${retailerAddress.slice(0,10)}...`}</td>\r\n                <td key={'retailerMemo_td'}>{`${retailerMemo.slice(0,10)}...`}</td>\r\n                <td key={'edit_td'}> \r\n                    <button type=\"button\" onClick={(event)=> handleEditClick(event, rowData)}> <FontAwesomeIcon icon={faHammer} size=\"2x\" /> </button>\r\n                </td>\r\n                <td key={'delete_td'}>\r\n                    <button type=\"button\" onClick={()=> handleDeleteClick(retailerId)}> <FontAwesomeIcon icon={faTimes} size=\"2x\" /> </button>\r\n                </td>\r\n                    \r\n\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default Tables;","import styles from \"../css/result-table.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction EditRow({ retailerId, retailerName, retailerPhone, retailerEmail, retailerAddress, retailerMemo, editFormData, handleEditFormChange, handleCancelClick }) {\r\n    \r\n    return (\r\n            <tr key ={retailerId} className={styles.screenPage__searchResultTable_items}>\r\n                <td key ={'retailerName_edit'}>\r\n                    <input \r\n                        type=\"text\" \r\n                        required='required'\r\n                        placeholder = {retailerName}\r\n                        name=\"retailerName\"\r\n                        value={editFormData.retailerName}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'retailerPhone_edit'}>\r\n                    <input \r\n                        type=\"text\" \r\n                        required='required'\r\n                        placeholder = {retailerPhone}\r\n                        name=\"retailerPhone\"\r\n                        value={editFormData.retailerPhone}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'retailerEmail_edit'}>\r\n                    <input \r\n                        type=\"text\" \r\n                        required='required'\r\n                        placeholder = {retailerAddress}\r\n                        name=\"retailerAddress\"\r\n                        value={editFormData.retailerAddress}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'retailerAddress_edit'}>\r\n                    <input \r\n                        type=\"text\" \r\n                        required='required'\r\n                        placeholder = {retailerEmail}\r\n                        name=\"retailerEmail\"\r\n                        value={editFormData.retailerEmail}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'retailerMemo_edit'}>\r\n                    <textarea \r\n                        type=\"text\" \r\n                        required='required'\r\n                        placeholder = {retailerMemo}\r\n                        name=\"retailerMemo\"\r\n                        value={editFormData.retailerMemo}\r\n                        onChange={handleEditFormChange}\r\n                    ></textarea>\r\n                </td>\r\n                <td key ={'button_edit'}> \r\n                    <button type=\"submit\"> <FontAwesomeIcon icon={faCheck} size=\"2x\" /> </button>\r\n                    <button type=\"button\" onClick={handleCancelClick}> <FontAwesomeIcon icon={faTimes} size=\"2x\" /> </button>\r\n                </td>\r\n                <td key ={'button_delete'}></td>\r\n                \r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default EditRow;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={styles.pagination}>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className={styles.pagination__pages}>\r\n                            <Link to={'/order/confirmitem'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState , useEffect } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport Tables from './Tables';\r\nimport EditRow from './editRow';\r\nimport Pagination from './paginationNoHook';\r\nimport Fragment from 'render-fragment';\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\n//거래처목록\r\nfunction RetailerListTable(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n    \r\n    // If purpose for testing without server useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [tablePerPage] = useState(10);\r\n    const [table , setTable] = useState([]);\r\n    \r\n    //get data from server\r\n    // \r\n    //     const ApiCallForList = async () => {\r\n    //         const response = await axios.post(`${baseURL}/retailer/list`)\r\n    //         const data = await response.data;\r\n    //         console.log(data);\r\n    //         setTable(data);\r\n    //         setLoading(false);\r\n    //         //return await response.data;\r\n    //     }\r\n    //     ApiCallForList();\r\n    //     //setTable(MOCK_DATA);\r\n        \r\n    // \r\n\r\n    const userData = {\r\n        userName: userID\r\n    }\r\n    useEffect(() => {\r\n    axios.post(`${baseURL}/retailer/list`,userData)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setTable(response.data);\r\n            setLoading(false);\r\n        });\r\n    },[]);\r\n\r\n    // Get current tables\r\n    const indexOfLastTable = currentPage * tablePerPage;\r\n    const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n    const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n    //change page number\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    \r\n    //edit data \r\n    const [rowId, setRowId] = useState(null);\r\n    const handleEditClick = (event, rowData) => {\r\n        event.preventDefault();\r\n        setRowId(rowData.retailerId);\r\n        \r\n        const formValues = {\r\n            userName: userID,\r\n            retailerId: rowData.retailerId,\r\n            retailerName: rowData.retailerName,\r\n            retailerPhone: rowData.retailerPhone,\r\n            retailerEmail: rowData.retailerEmail,\r\n            retailerAddress: rowData.retailerAddress,\r\n            retailerMemo: rowData.retailerMemo,\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    };\r\n    const [editFormData, setEditFormData] = useState({\r\n        userName: userID,\r\n        retailerId: \"\",\r\n        retailerName: \"\",\r\n        retailerPhone: \"\",\r\n        retailerEmail: \"\",\r\n        retailerAddress: \"\",\r\n        retailerMemo: \"\",\r\n    });\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n    };\r\n\r\n    //save changes \r\n    const handleEditFormSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const editedForm={\r\n            userName:userID,\r\n            retailerId: rowId,\r\n            retailerName: editFormData.retailerName,\r\n            retailerPhone: editFormData.retailerPhone,\r\n            retailerEmail: editFormData.retailerEmail,\r\n            retailerAddress: editFormData.retailerAddress,\r\n            retailerMemo: editFormData.retailerMemo,\r\n        }\r\n\r\n        // const ApiCallForEdit = async () => {\r\n        //     //const response = \r\n        //     await axios.post(`${baseURL}/retailer/edit`,editedForm)\r\n        //     //const data = await response.data;\r\n        //     //console.log(data);\r\n        // }\r\n        axios.post(`${baseURL}/retailer/edit`,editedForm)\r\n\r\n\r\n        const newTable = [...table];\r\n        const index = table.findIndex((row) => row.retailerId === rowId);\r\n\r\n        newTable[index] = editedForm;\r\n        //console.log(newTable);\r\n        setTable(newTable);\r\n        //ApiCallForEdit();\r\n        setRowId(null);\r\n        //console.log(table);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setRowId(null);\r\n    }\r\n\r\n    const handleDeleteClick = (rowId) => {\r\n        const deleteForm={\r\n            userName:userID,\r\n            retailerId: rowId,\r\n        }\r\n        // const ApiCallForDelete = async () => {\r\n        //     //const response = \r\n        //     await axios.post(`${baseURL}/retailer/delete`,deleteForm)\r\n        //     //const data = await response.data;\r\n        //     //console.log(data);\r\n        // }\r\n        axios.post(`${baseURL}/retailer/delete`,deleteForm)\r\n\r\n        const newTable =  [...table];\r\n        const index = table.findIndex((row) => row.retailerId === rowId);\r\n        newTable.splice(index,1);\r\n        setTable(newTable);\r\n        //ApiCallForDelete();\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {loading ? <strong>로딩중...</strong> :\r\n                (\r\n                    <Fragment>\r\n                        <form onSubmit={handleEditFormSubmit}>\r\n                            <table className={styles.screenPage__searchResultTable}>\r\n                            <thead>\r\n                                <tr className={styles.screenPage__searchResultTable_header}>\r\n                                    <th>거래처 이름</th>\r\n                                    <th>거래처 연락처</th>\r\n                                    <th>거래처 이메일</th>\r\n                                    <th>거래처 주소</th>\r\n                                    <th>거래처 메모</th>\r\n                                    <th>수정</th>\r\n                                    <th>삭제</th>\r\n                                </tr>\r\n                            </thead>\r\n                \r\n                            <tbody className=\"testTable__tbody\">\r\n                                {\r\n                                    tables.map((tables) => (\r\n                                        <Fragment>\r\n                                            {\r\n\r\n                                            }\r\n                                            {\r\n                                            rowId === tables.retailerId ?                                 \r\n                                                <EditRow \r\n                                                key={tables.retailerId}\r\n                                                retailerId={tables.retailerId}\r\n                                                retailerName={tables.retailerName}\r\n                                                retailerPhone={tables.retailerPhone}\r\n                                                retailerEmail={tables.retailerEmail}\r\n                                                retailerAddress={tables.retailerAddress}\r\n                                                retailerMemo={tables.retailerMemo}\r\n                                                editFormData={editFormData}\r\n                                                handleEditFormChange={handleEditFormChange}\r\n                                                handleCancelClick={handleCancelClick}\r\n                                                /> \r\n                                            : \r\n                                                <Tables \r\n                                                key={tables.retailerId}\r\n                                                retailerId={tables.retailerId}\r\n                                                retailerName={tables.retailerName}\r\n                                                retailerPhone={tables.retailerPhone}\r\n                                                retailerEmail={tables.retailerEmail}\r\n                                                retailerAddress={tables.retailerAddress}\r\n                                                retailerMemo={tables.retailerMemo}\r\n                                                handleEditClick = {handleEditClick}\r\n                                                handleDeleteClick={handleDeleteClick}\r\n                                                />\r\n                                            }\r\n                                        </Fragment>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            </table>\r\n                        </form>\r\n                        <Pagination tablePerPage={tablePerPage} totalTables={table.length} paginate={paginate}/>\r\n                    </Fragment>\r\n                )\r\n            \r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RetailerListTable;\r\n","import contentStyles from \"./css/screen-content.module.css\";\r\nimport styles from \"./css/search-order.module.css\";\r\n//import ConfirmItemResultTable from \"./order-confirm-result\";\r\nimport RetailerListTable from \"./RETAILER_LIST/tableRender\";\r\nimport React from \"react\";\r\n//import { DateRangePicker } from 'rsuite';\r\n//import 'rsuite/dist/rsuite.css';\r\n//import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ConfirmForItem(){\r\n    /*\r\n    const [dateRange, setDateRange] = useState([new Date(), new Date()]);\r\n\r\n    const onDateChange = (event) =>{\r\n        if(Array.isArray(event)){\r\n            console.log(event);\r\n            setDateRange(event);\r\n            console.log(event[0]);\r\n        }\r\n        else{\r\n            setDateRange([new Date(), new Date()]);\r\n        }\r\n    }\r\n    */\r\n    return(\r\n\r\n        <div className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}>\r\n            <div className={styles.screenPage__searchItem}>\r\n                <span>거래처목록</span>\r\n            </div>\r\n            <div className={styles.screenPage__nextButton}>\r\n                <Link to={'/order/searchitem'}><input type=\"button\" value=\"거래처등록\"/></Link>\r\n            </div>\r\n            <div className={styles.screenPage__searchBox}>\r\n                \r\n                {/* <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form method=\"get\">\r\n                    <div className={`${styles.screenPage__section_column} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label>발주기간 </label> \r\n                                <DateRangePicker size=\"xs\" value={dateRange} onChange={onDateChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">매입거래처 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">물품명 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.screenPage__section_column}>\r\n                            <input type=\"submit\" value=\"조회\"/>\r\n                    </div>\r\n                </form> */}\r\n            \r\n            </div>\r\n            \r\n            <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span>거래처리스트</span></div>\r\n                <RetailerListTable/>\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default ConfirmForItem;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport ConfirmForItem from \"../components/order-confirm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ConfirmItem({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <ConfirmForItem/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nConfirmItem.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ConfirmItem;","import contentStyles from \"./css/screen-content.module.css\";\r\nimport styles from \"./css/search-order.module.css\";\r\n//import PaginationTableRender from \"./TEST_TABLE/tableRender\";\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\nfunction StockManagement(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n\r\n    let newStockData = {\r\n        userName: \"\",\r\n        stockName: \"\",\r\n        stockCount: \"\",\r\n    }\r\n    const resetStockData = {\r\n        userName: \"\",\r\n        stockName: \"\",\r\n        stockCount: \"\",\r\n    }\r\n\r\n    const [stockName, setStockName] = useState(\"\"); \r\n    const [stockCount, setStockCount] = useState(\"\"); \r\n\r\n    // const ApiCall = async () => {\r\n    //     const response = await axios.post(`${baseURL}/stock/add`,newStockData)\r\n    //     //const data = await response.data;\r\n    //     console.log(response.data);\r\n    //     console.log(newStockData);\r\n    //     //console.log(data);\r\n    //     //setData(data);\r\n    //     //return await response.data;\r\n    // }\r\n\r\n    const onStockNameChange = (event) => {\r\n        setStockName(event.target.value);\r\n    }\r\n    const onStockCountChange = (event) => {\r\n        setStockCount(event.target.value);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        newStockData.userName = userID;\r\n        newStockData.stockName = stockName;\r\n        newStockData.stockCount = stockCount;\r\n        console.log(newStockData);\r\n\r\n        //ApiCall();\r\n        axios.post(`${baseURL}/stock/add`,newStockData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n            });\r\n\r\n        newStockData = resetStockData;\r\n    }\r\n\r\n    return(\r\n        <div className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}>\r\n            <div className={styles.screenPage__searchItem}>\r\n                <span>재고등록</span>\r\n            </div>\r\n            <div className={styles.screenPage__nextButton}>\r\n            <Link to={'/order/requestorder'}><input type=\"button\" value=\"발주요청\"/></Link>\r\n            </div>\r\n\r\n            <div className={styles.screenPage__searchBox}>\r\n                <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className={`${styles.screenPage__section_column} ${styles.screenPage__searchList}`}>\r\n                    <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"stockName\">재고명 </label> \r\n                                <input type=\"text\" onChange={onStockNameChange} name=\"stockName\" required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"stockCount\">잔여재고 </label> \r\n                                <input type=\"number\" onChange={onStockCountChange} name=\"stockCount\" required/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className={styles.screenPage__section_column}>\r\n                        <input type=\"submit\" value=\"추가\"/>\r\n                    </div>\r\n                </form>\r\n            </div> \r\n            {/* <div className={styles.screenPage__searchBox}>\r\n                <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form method=\"get\">\r\n                    <div className={`${styles.screenPage__section_row} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_column}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"orderDate\">검색조건? </label> \r\n                                <input type=\"date\" name=\"orderDate\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"company\">매입거래처 </label> \r\n                                <input type=\"text\" name=\"company\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"itemName\">물품검색 </label> \r\n                                <input type=\"text\" name=\"itemName\" required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_column}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">수량 </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"condition\">검색조건? </label> \r\n                                <input type=\"text\" name=\"condition\" required/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.screenPage__section_column}>\r\n                                <div className={styles.screenPage__searchOption}>\r\n                                    <label for=\"condition\">검색조건? </label> \r\n                                    <input type=\"number\" name=\"condition\" required/>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.screenPage__section_row}>\r\n                            <input type=\"submit\" value=\"조회\"/>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n            {/* <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span>검색결과</span></div>\r\n                <PaginationTableRender/>\r\n            </div> */}\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default StockManagement;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport StockManagement from \"../components/stock-management\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction manageStock({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <StockManagement/>\r\n            </div>\r\n            \r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nmanageStock.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default manageStock;","import styles from \"../css/result-table.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes, faHammer } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Tables({ stockId, stockName, stockCount, handleEditClick, handleDeleteClick }) {\r\n    \r\n    const rowData = {\r\n        stockId: stockId,\r\n        stockName: stockName,\r\n        stockCount: stockCount,\r\n    }\r\n\r\n    //console.log(retailerAddress);\r\n\r\n    return (\r\n            <tr key ={stockId} className={styles.screenPage__searchResultTable_items}>\r\n                <td key={'stockName_td'}>{stockName}</td>\r\n                <td key={'stockCount_td'}>{stockCount}</td>\r\n                <td key={'edit_td'}> \r\n                    <button type=\"button\" onClick={(event)=> handleEditClick(event, rowData)}> <FontAwesomeIcon icon={faHammer} size=\"2x\" /> </button>\r\n                </td>\r\n                <td key={'delete_td'}>\r\n                    <button type=\"button\" onClick={()=> handleDeleteClick(stockId)}> <FontAwesomeIcon icon={faTimes} size=\"2x\" /> </button>\r\n                </td>\r\n                    \r\n\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default Tables;","import styles from \"../css/result-table.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction EditRow({ stockId, stockName, stockCount, editFormData, handleEditFormChange, handleCancelClick }) {\r\n    \r\n    return (\r\n            <tr key ={stockId} className={styles.screenPage__searchResultTable_items}>\r\n                <td key ={'stockName_edit'}>\r\n                    <input \r\n                        type=\"text\" \r\n                        required='required'\r\n                        placeholder = {stockName}\r\n                        name=\"stockName\"\r\n                        value={editFormData.stockName}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'stockCount_edit'}>\r\n                    <input \r\n                        type=\"number\" \r\n                        required='required'\r\n                        placeholder = {stockCount}\r\n                        name=\"stockCount\"\r\n                        value={editFormData.stockCount}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'button_edit'}> \r\n                    <button type=\"submit\"> <FontAwesomeIcon icon={faCheck} size=\"2x\" /> </button>\r\n                    <button type=\"button\" onClick={handleCancelClick}> <FontAwesomeIcon icon={faTimes} size=\"2x\" /> </button>\r\n                </td>\r\n                <td key ={'button_delete'}></td>\r\n                \r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default EditRow;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={styles.pagination}>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className={styles.pagination__pages}>\r\n                            <Link to={'/stock/edit'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState , useEffect } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport Tables from './Tables';\r\nimport EditRow from './editRow';\r\nimport Pagination from './paginationNoHook';\r\nimport Fragment from 'render-fragment';\r\nimport styles from \"../css/result-table.module.css\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\n//재고\r\nfunction StockListTable(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n    \r\n    // If purpose for testing without server useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [tablePerPage] = useState(10);\r\n    const [table , setTable] = useState([]);\r\n    \r\n    //get data from server\r\n    useEffect(() => {\r\n        const userData = {\r\n            userName: userID\r\n        }\r\n        // const ApiCallForList = async () => {\r\n        //     const response = await axios.post(`${baseURL}/stock/list`,userData)\r\n        //     const data = await response.data;\r\n        //     console.log(data);\r\n        //     setTable(data);\r\n        //     setLoading(false);\r\n        //     //return await response.data;\r\n        // }\r\n        // //ApiCallForList();\r\n        // setTable(MOCK_DATA);\r\n        axios.post(`${baseURL}/stock/list`,userData)\r\n            .then((response) => {\r\n                setLoading(false);\r\n                console.log(response.data);\r\n                setTable(response.data);\r\n            });\r\n    },[]);\r\n\r\n    // Get current tables\r\n    const indexOfLastTable = currentPage * tablePerPage;\r\n    const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n    const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n    //change page number\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    \r\n    //edit data \r\n    const [rowId, setRowId] = useState(null);\r\n    const handleEditClick = (event, rowData) => {\r\n        event.preventDefault();\r\n        setRowId(rowData.stockId);\r\n        \r\n        const formValues = {\r\n            name: userID,\r\n            stockId: rowData.stockId,\r\n            stockName: rowData.stockName,\r\n            stockCount: rowData.stockCount,\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    };\r\n    const [editFormData, setEditFormData] = useState({\r\n        name:userID,\r\n        stockId: \"\",\r\n        stockName: \"\",\r\n        stockCount: \"\",\r\n    });\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n    };\r\n\r\n    //save changes \r\n    const handleEditFormSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const editedForm={\r\n            userName:userID,\r\n            stockId: rowId,\r\n            stockName: editFormData.stockName,\r\n            stockCount: editFormData.stockCount,\r\n        }\r\n\r\n        // const ApiCallForEdit = async () => {\r\n        //     //const response = \r\n        //     await axios.post(`${baseURL}/stock/edit`,editedForm)\r\n        //     //const data = await response.data;\r\n        //     //console.log(data);\r\n        // }\r\n        axios.post(`${baseURL}/stock/edit`,editedForm)\r\n        \r\n        const newTable = [...table];\r\n        const index = table.findIndex((row) => row.stockId === rowId);\r\n\r\n        newTable[index] = editedForm;\r\n        //console.log(newTable);\r\n        setTable(newTable);\r\n        //ApiCallForEdit();\r\n        setRowId(null);\r\n        //console.log(table);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setRowId(null);\r\n    }\r\n\r\n    const handleDeleteClick = (rowId) => {\r\n        const deleteForm={\r\n            stockId: rowId,\r\n            userName: userID,\r\n        }\r\n        // const ApiCallForDelete = async () => {\r\n        //     //const response = \r\n        //     await axios.post(`${baseURL}/stock/delete`,deleteForm)\r\n        //     //const data = await response.data;\r\n        //     //console.log(data);\r\n        // }\r\n        axios.post(`${baseURL}/stock/delete`,deleteForm)\r\n            .then((response => {\r\n                console.log(response.data);\r\n            }))\r\n        const newTable =  [...table];\r\n        const index = table.findIndex((row) => row.stockId === rowId);\r\n        newTable.splice(index,1);\r\n        setTable(newTable);\r\n        //ApiCallForDelete();\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {loading ? <strong>로딩중...</strong> :\r\n                (\r\n                    <Fragment>\r\n                        <form onSubmit={handleEditFormSubmit}>\r\n                            <table className={styles.screenPage__searchResultTable}>\r\n                            <thead>\r\n                                <tr className={styles.screenPage__searchResultTable_header}>\r\n                                    <th>재고명</th>\r\n                                    <th>잔여재고</th>\r\n                                    <th>수정</th>\r\n                                    <th>삭제</th>\r\n                                </tr>\r\n                            </thead>\r\n                \r\n                            <tbody className=\"testTable__tbody\">\r\n                                {\r\n                                    tables.map((tables) => (\r\n                                        <Fragment>\r\n                                            {\r\n\r\n                                            }\r\n                                            {\r\n                                            rowId === tables.stockId ?                                 \r\n                                                <EditRow \r\n                                                key={tables.stockId}\r\n                                                stockId={tables.stockId}\r\n                                                stockName={tables.stockName}\r\n                                                stockCount={tables.stockCount}\r\n                                                editFormData={editFormData}\r\n                                                handleEditFormChange={handleEditFormChange}\r\n                                                handleCancelClick={handleCancelClick}\r\n                                                /> \r\n                                            : \r\n                                                <Tables \r\n                                                key={tables.stockId}\r\n                                                stockId={tables.stockId}\r\n                                                stockName={tables.stockName}\r\n                                                stockCount={tables.stockCount}\r\n                                                handleEditClick = {handleEditClick}\r\n                                                handleDeleteClick={handleDeleteClick}\r\n                                                />\r\n                                            }\r\n                                        </Fragment>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            </table>\r\n                        </form>\r\n                        <Pagination tablePerPage={tablePerPage} totalTables={table.length} paginate={paginate}/>\r\n                    </Fragment>\r\n                )\r\n            \r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StockListTable;\r\n","import contentStyles from \"./css/screen-content.module.css\";\r\nimport styles from \"./css/search-order.module.css\";\r\n//import ConfirmItemResultTable from \"./order-confirm-result\";\r\nimport StockListTable from \"./STOCK_LIST/tableRender\";\r\nimport React from \"react\";\r\n//import { DateRangePicker } from 'rsuite';\r\n//import 'rsuite/dist/rsuite.css';\r\n//import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EditForStock(){\r\n\r\n    return(\r\n\r\n        <div className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}>\r\n            <div className={styles.screenPage__searchItem}>\r\n                <span>재고목록</span>\r\n            </div>\r\n            <div className={styles.screenPage__nextButton}>\r\n                <Link to={'/stock/add'}><input type=\"button\" value=\"재고등록\"/></Link>\r\n            </div>\r\n            \r\n            <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span>거래처리스트</span></div>\r\n                <StockListTable/>\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default EditForStock;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport EditForStock from \"../components/edit-stock\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction EditStock({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <EditForStock/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nEditStock.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EditStock;","import styles from \"../css/result-table.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Tables({ retailerId, retailerName, retailerPhone, retailerEmail, retailerAddress, retailerMemo, handleRequestClick }) {\r\n    \r\n    const rowData = {\r\n        retailerId: retailerId,\r\n        retailerName: retailerName,\r\n        retailerPhone: retailerPhone,\r\n        retailerEmail: retailerEmail,\r\n        retailerAddress: retailerAddress,\r\n        retailerMemo: retailerMemo,\r\n    }\r\n    //console.log(retailerAddress);\r\n    return (\r\n            <tr key ={retailerId} className={styles.screenPage__searchResultTable_items}>\r\n                <td key={'retailerName_td'}>{retailerName}</td>\r\n                <td key={'retailerPhone_td'}>{retailerPhone}</td>\r\n                <td key={'retailerEmail_td'}>{retailerEmail}</td>\r\n                <td key={'retailerAddress_td'}>{`${retailerAddress.slice(0,10)}...`}</td>\r\n                <td key={'retailerMemo_td'}>{`${retailerMemo.slice(0,10)}...`}</td>\r\n                <td key={'request_td'}>\r\n                    <button type=\"button\" onClick={()=> handleRequestClick(rowData)}> <FontAwesomeIcon icon={faCheck} size=\"2x\" /> </button>\r\n                </td>\r\n                    \r\n\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../css/result-table.module.css\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={styles.pagination}>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className={styles.pagination__pages}>\r\n                            <Link to={'/order/requestorder'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState , useEffect } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport Tables from './Tables';\r\nimport Pagination from './paginationNoHook';\r\nimport Fragment from 'render-fragment';\r\nimport styles from \"../css/result-table.module.css\";\r\nimport resultStyles from \"./retailer-list-readonly.module.css\";\r\nimport axios from \"axios\";\r\n\r\nlet userID = localStorage.getItem('USER_ID')\r\n\r\n//발주요청\r\nfunction RetailerListTable(){\r\n\r\n    const baseURL = \"http://ec2-15-164-170-164.ap-northeast-2.compute.amazonaws.com:8080\";\r\n    \r\n    // If purpose for testing without server useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [tablePerPage] = useState(7);\r\n    const [table , setTable] = useState([]);\r\n    const [request, setRequest] = useState(false);\r\n    const [requestId, setRequestId] = useState(\"\");\r\n    const [requestName, setRequestName] = useState(\"\");\r\n    const [orderDetail, setOrderDetail] = useState(\"\");\r\n\r\n    //get data from server\r\n    useEffect(() => {\r\n        // const ApiCallForList = async () => {\r\n        //     const response = await axios.post(`${baseURL}/retailer/list`)\r\n        //     const data = await response.data;\r\n        //     console.log(data);\r\n        //     setTable(data);\r\n        //     setLoading(false);\r\n        //     //return await response.data;\r\n        // }\r\n        // ApiCallForList();\r\n        //setTable(MOCK_DATA);\r\n        const userData = {\r\n            userName: userID\r\n        }\r\n\r\n        axios.post(`${baseURL}/retailer/list`,userData)\r\n            .then((response) => {\r\n                setTable(response.data);\r\n                //console.log(\"왔어요\");\r\n                setLoading(false);\r\n            })\r\n        \r\n    },[]);\r\n\r\n    // Get current tables\r\n    const indexOfLastTable = currentPage * tablePerPage;\r\n    const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n    const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n    //change page number\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n\r\n    const handleRequestClick = (rowData) => {\r\n        \r\n        //console.log(requestData);\r\n        setRequestName(rowData.retailerName);\r\n        setRequestId(rowData.retailerId);\r\n        setRequest(true);\r\n    }\r\n\r\n    const onOrderDetailChange = (event) => {\r\n        setOrderDetail(event.target.value);\r\n    }\r\n\r\n    const onSubmitOrderClick = () => {\r\n        const submitData = {\r\n            userName:userID,\r\n            retailerId: requestId,\r\n            orderDetail: orderDetail,\r\n        }\r\n        console.log(submitData);\r\n        // const ApiCallForSubmit = async () => {\r\n        //     const response = await axios.post(`${baseURL}/retailer/order`,submitData);\r\n        //     const data = await response.data;\r\n        //     console.log(data);\r\n        axios.post(`${baseURL}/order/add`,submitData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //setTable(response.data);\r\n                //setLoading(false);\r\n\r\n                if(response.data === true){\r\n                    alert(\"주문이 완료되었습니다\");\r\n                }\r\n            });\r\n\r\n\r\n            //return await response.data;\r\n        \r\n        //ApiCallForSubmit();\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {loading ? <strong>로딩중...</strong> :\r\n                (\r\n                    <Fragment>\r\n                        <form>\r\n                            <table className={styles.screenPage__searchResultTable}>\r\n                            <thead>\r\n                                <tr className={styles.screenPage__searchResultTable_header}>\r\n                                    <th>거래처 이름</th>\r\n                                    <th>거래처 연락처</th>\r\n                                    <th>거래처 이메일</th>\r\n                                    <th>거래처 주소</th>\r\n                                    <th>거래처 메모</th>\r\n                                    <th>주문선택</th>\r\n                                </tr>\r\n                            </thead>\r\n                \r\n                            <tbody className=\"testTable__tbody\">\r\n                                {\r\n                                    tables.map((tables) => (\r\n                                                <Tables \r\n                                                key={tables.retailerId}\r\n                                                retailerId={tables.retailerId}\r\n                                                retailerName={tables.retailerName}\r\n                                                retailerPhone={tables.retailerPhone}\r\n                                                retailerEmail={tables.retailerEmail}\r\n                                                retailerAddress={tables.retailerAddress}\r\n                                                retailerMemo={tables.retailerMemo}\r\n                                                handleRequestClick={handleRequestClick}\r\n                                                />\r\n                                        \r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            </table>\r\n                        </form>\r\n                        <Pagination tablePerPage={tablePerPage} totalTables={table.length} paginate={paginate}/>\r\n                        {\r\n                            request ? \r\n                            <Fragment>\r\n                                <div className={`${resultStyles.request__name}`}>\r\n                                    주문상세\r\n                                </div>\r\n                                <div className={resultStyles.request__section}>\r\n                                    <div className={resultStyles.request__column}>\r\n                                        <label for=\"retailerName\">선택 거래처 : </label>\r\n                                        <input type=\"text\" name=\"retailerName\" value={requestName}  disabled/>\r\n                                        <button onClick={onSubmitOrderClick}>주문하기</button>\r\n                                    </div>\r\n                                    <div className={resultStyles.request__column}>\r\n                                        <textarea type=\"text\" onChange={onOrderDetailChange} required/>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                            : <div></div>\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            \r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RetailerListTable;\r\n","import contentStyles from \"./css/screen-content.module.css\";\r\nimport styles from \"./css/search-order.module.css\";\r\n//import SearchOrderResultTable from \"./search-order-result\";\r\nimport RetailerListTable from \"./RETAILER_LIST_READONLY/tableRender\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RequestForOrder(){\r\n    \r\n    return(\r\n\r\n        <div className={`${contentStyles.screenPage__content} ${contentStyles.screenPage__content_box}`}>\r\n            <div className={styles.screenPage__searchItem}>\r\n                <span>발주조회</span>\r\n            </div>\r\n            <div className={styles.screenPage__nextButton}>\r\n                <Link to={'/order/confirmitem'}><input type=\"button\" value=\"거래처목록\"/></Link>\r\n            </div>\r\n            <div className={styles.screenPage__searchResult}>\r\n                <div className={styles.screenPage_title}><span>발주목록</span></div>\r\n                <RetailerListTable/>\r\n            </div>\r\n            {/* <div className={styles.screenPage__searchBox}>\r\n                <div className={styles.screenPage_title}><span>검색옵션</span></div>\r\n                <form >\r\n                <div className={`${styles.screenPage__section_column} ${styles.screenPage__searchList}`}>\r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label>선택 거래처 </label> \r\n                                <input type=\"text\" name=\"order\" disabled/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className={styles.screenPage__section_row}>\r\n                            <div className={styles.screenPage__searchOption}>\r\n                                <label for=\"order\">주문서 </label> \r\n                                <textarea type=\"text\" name=\"order\" required/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className={styles.screenPage__section_column}>\r\n                            <input type=\"submit\" value=\"조회\"/>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default RequestForOrder;","import MenuBar from \"../components/menu-bar\";\r\nimport styles from \"./css/Home.module.css\";\r\nimport SideMenuBar from \"../components/sidemenu-bar\";\r\nimport RequestForOrder from \"../components/order-request\";\r\n//import SearchForOrder from \"../components/search-order\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction OrderRequest({sideMenu}){\r\n\r\n    return(\r\n        <div>\r\n            <MenuBar/>\r\n            <div className={styles.screenPage}>\r\n                <SideMenuBar sideMenu={sideMenu}/>\r\n                <RequestForOrder/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nOrderRequest.propTypes ={\r\n\r\n    sideMenu : PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderRequest;","import './table.css'\r\n\r\n\r\nfunction Tables({ id, first_name, last_name, email, birth, age, country, phone, handleEditClick, handleDeleteClick }) {\r\n    \r\n    const rowData = {\r\n        id: id,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        email: email,\r\n        dAteofbirth: birth,\r\n        age: age,\r\n        country: country,\r\n        phine: phone\r\n    }\r\n\r\n    return (\r\n            <tr key ={id}>\r\n                <td key={'first_name_td'}>{first_name}</td>\r\n                <td key={'last_name_td'}>{last_name}</td>\r\n                <td key={'email_td'}>{email}</td>\r\n                <td key={'birth_td'}>{birth}</td>\r\n                <td key={'age_td'}>{age}</td>\r\n                <td key={'country_td'}>{country}</td>\r\n                <td key={'phone_td'}>{phone}</td>\r\n                <td> \r\n                    <button type=\"button\" onClick={(event)=> handleEditClick(event, rowData)}> edit </button>\r\n                    <button type=\"button\" onClick={()=> handleDeleteClick(id)}> delete </button>\r\n                </td>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default Tables;","import './table.css'\r\n\r\n\r\nfunction EditRow({ id, first_name, last_name, email, birth, age, country, phone, editFormData, handleEditFormChange, handleCancelClick }) {\r\n    \r\n    return (\r\n            <tr key ={id}>\r\n                <td key ={'first_name_edit'}>{first_name}</td>\r\n                <td key ={'last_name_edit'}>{last_name}</td>\r\n                <td key ={'email_edit'}>{email}</td>\r\n                <td key ={'birth_edit'}>{birth}</td>\r\n                <td key ={'age_edit'}>\r\n                    <input \r\n                        type=\"number\" \r\n                        required='required'\r\n                        placeholder = {age}\r\n                        name=\"age\"\r\n                        value={editFormData.age}\r\n                        onChange={handleEditFormChange}\r\n                    ></input>\r\n                </td>\r\n                <td key ={'country_edit'}>{country}</td>\r\n                <td key ={'phone_edit'}>{phone}</td>\r\n                <td key ={'button_edit'}> \r\n                    <button type=\"submit\"> save </button>\r\n                    <button type=\"button\" onClick={handleCancelClick}> cancel </button>\r\n                </td>\r\n                \r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default EditRow;","import React from 'react';\r\nimport './table.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagination = ({ tablePerPage , totalTables, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalTables / tablePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='Pagination'>\r\n                {\r\n                    pageNumbers.map((number) => (\r\n                        <li key={`page${number}`} className=\"page-item\">\r\n                            <Link to={'/testTable'} onClick={() => paginate(number)} className=\"page-link\">\r\n                                {number}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\nexport default Pagination;","import React, { useState , useEffect } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport Tables from './Tables';\r\nimport EditRow from './editRow';\r\nimport Pagination from './paginationNoHook';\r\nimport Fragment from 'render-fragment';\r\nimport './table.css'\r\n\r\nfunction PaginationTableRender(){\r\n\r\n    \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [tablePerPage] = useState(10);\r\n    const [table , setTable] = useState([]);\r\n    \r\n    //get data from server\r\n    useEffect(() => {\r\n        setTable(MOCK_DATA);\r\n    },[]);\r\n\r\n    // Get current tables\r\n    const indexOfLastTable = currentPage * tablePerPage;\r\n    const indexOfFirstTable = indexOfLastTable - tablePerPage;\r\n    const tables = table.slice(indexOfFirstTable, indexOfLastTable);\r\n\r\n    //change page number\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    \r\n    //edit data \r\n    const [rowId, setRowId] = useState(null);\r\n    const handleEditClick = (event, rowData) => {\r\n        event.preventDefault();\r\n        setRowId(rowData.id);\r\n        \r\n        const formValues = {\r\n            id: rowData.id,\r\n            first_name: rowData.first_name,\r\n            last_name: rowData.last_name,\r\n            email: rowData.email,\r\n            dAteofbirth: rowData.dAteofbirth,\r\n            age: rowData.age,\r\n            country: rowData.country,\r\n            phine: rowData.phine\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    };\r\n    const [editFormData, setEditFormData] = useState({\r\n        id: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        dAteofbirth: \"\",\r\n        age: \"\",\r\n        country: \"\",\r\n        phine: \"\"\r\n    });\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n    };\r\n\r\n    //save changes \r\n    const handleEditFormSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const editedForm={\r\n            id: rowId,\r\n            first_name: editFormData.first_name,\r\n            last_name: editFormData.last_name,\r\n            email: editFormData.email,\r\n            dAteofbirth: editFormData.dAteofbirth,\r\n            age: editFormData.age,\r\n            country: editFormData.country,\r\n            phine: editFormData.phine\r\n        }\r\n        \r\n        const newTable = [...table];\r\n        const index = table.findIndex((row) => row.id === rowId);\r\n\r\n        newTable[index] = editedForm;\r\n        //console.log(newTable);\r\n        setTable(newTable);\r\n        setRowId(null);\r\n        //console.log(table);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setRowId(null);\r\n    }\r\n\r\n    const handleDeleteClick = (rowId) => {\r\n        const newTable =  [...table];\r\n        const index = table.findIndex((row) => row.id === rowId);\r\n        newTable.splice(index,1);\r\n        setTable(newTable);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={handleEditFormSubmit}>\r\n                <table className=\"testTable\">\r\n                    <thead className=\"testTable__thead\">\r\n                        <tr>\r\n                            <th>first_name</th>\r\n                            <th>last_name</th>\r\n                            <th>email</th>\r\n                            <th>dAteofbirth</th>\r\n                            <th>age</th>\r\n                            <th>country</th>\r\n                            <th>phine</th>\r\n                            <th>edit?</th>\r\n                        </tr>\r\n                    </thead>\r\n                \r\n                    <tbody className=\"testTable__tbody\">\r\n                        {\r\n                            tables.map((tables) => (\r\n                                <Fragment>\r\n                                    {\r\n                                    rowId === tables.id ?                                 \r\n                                        <EditRow \r\n                                        key={tables.id}\r\n                                        id={tables.id}\r\n                                        first_name={tables.first_name}\r\n                                        last_name={tables.last_name}\r\n                                        email={tables.email}\r\n                                        birth={tables.dAteofbirth}\r\n                                        age={tables.age}\r\n                                        country={tables.country}\r\n                                        phone={tables.phine}\r\n                                        editFormData={editFormData}\r\n                                        handleEditFormChange={handleEditFormChange}\r\n                                        handleCancelClick={handleCancelClick}\r\n                                        /> \r\n                                    : \r\n                                        <Tables \r\n                                        key={tables.id}\r\n                                        id={tables.id}\r\n                                        first_name={tables.first_name}\r\n                                        last_name={tables.last_name}\r\n                                        email={tables.email}\r\n                                        birth={tables.dAteofbirth}\r\n                                        age={tables.age}\r\n                                        country={tables.country}\r\n                                        phone={tables.phine}\r\n                                        handleEditClick = {handleEditClick}\r\n                                        handleDeleteClick={handleDeleteClick}\r\n                                        />\r\n                                    }\r\n                                </Fragment>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n            <Pagination tablePerPage={tablePerPage} totalTables={table.length} paginate={paginate}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginationTableRender;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport './chart.css'\r\n\r\nconst data = {\r\n    labels: [\"Red\", \"Blue\", \"Yellow\" ,\"Green\" ,\"Purple\" ,\"Orange\"],\r\n    datasets: [{\r\n        data: [12, 19, 3, 5, 12, 4],\r\n        backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\", \r\n            \"rgba(55, 162, 235, 0.2)\", \r\n            \"rgba(255, 206, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(153, 99, 255, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\"\r\n        ]\r\n    }]\r\n};\r\n\r\nfunction DoughnutChart(){\r\n    return (\r\n        <div>\r\n            <h1>Doughnut</h1>\r\n            <div className=\"doughnutChart\">\r\n                <Doughnut data={data}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoughnutChart;","import { BrowserRouter as Router, Switch , Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\n//import Login from \"./routes/Login\";\nimport JeanLogin from \"./routes/JeanLogin/JeanLogin\";\nimport JeanJoin from \"./routes/JeanLogin/JeanJoin\";\n//import MakeAccount from \"./routes/MakeAccount\";\nimport SearchItem from \"./routes/SearchItem\";\nimport SearchOrder from \"./routes/SearchOrder\";\nimport ConfirmItem from \"./routes/ConfirmItem\";\nimport ManageStock from \"./routes/ManageStock\";\nimport EditStock from \"./routes/EditStock\";\nimport OrderRequest from \"./routes/OrderRequest\";\n\nimport PaginationTableRender from \"./TablePaginationTest/tableRender\";\nimport DoughnutChart from \"./ChartTest/chartRender\";\n\nfunction App() {\n\n  const sideMenuObj = function(topName, sideMenuElements){\n    \n    return({\n        name: topName,\n        elementsObj: sideMenuElements,\n    });\n  };\n\n  const orderSideMenuElements =[\n    {\n      id : \"searchitem\",\n      name :  \"거래처등록\",\n      link : \"/order/searchitem\",\n    },\n    {\n      id : \"confirmitem\",\n      name : \"거래처목록\",\n      link : \"/order/confirmitem\",\n    },\n    {\n      id : \"requestorder\",\n      name : \"발주요청\",\n      link : \"/order/requestorder\",\n    },\n    {\n      id : \"searchorder\",\n      name : \"발주조회\",\n      link : \"/order/searchorder\",\n    },\n  ];\n\n  const stockSideMenuElements =[\n    {\n      id : \"stockadd\",\n      name :  \"재고등록\",\n      link : \"/stock/add\",\n    },\n    {\n      id : \"stockedit\",\n      name : \"재고편집\",\n      link : \"/stock/edit\",\n    },\n  ];\n\n  const homeMenuObj = sideMenuObj(\"홈\",[]);\n  const orderMenuObj = sideMenuObj(\"발주관리\",orderSideMenuElements);\n  const stockMenuObj = sideMenuObj(\"재고관리\",stockSideMenuElements);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/testChart\">\n          <DoughnutChart />\n        </Route>\n        <Route path=\"/testTable\">\n          <PaginationTableRender />\n        </Route>\n        <Route path=\"/login/makeaccount\">\n          <JeanJoin />\n        </Route>\n        <Route path=\"/login\">\n          <JeanLogin />\n        </Route>\n        <Route path=\"/order/confirmitem\">\n          <ConfirmItem sideMenu={orderMenuObj}/>\n        </Route>\n        <Route path=\"/order/searchorder\">\n          <SearchOrder sideMenu={orderMenuObj}/>\n        </Route>\n        <Route path=\"/order/requestorder\">\n          <OrderRequest sideMenu={orderMenuObj}/>\n        </Route>\n        <Route path=\"/order/searchitem\">\n          <SearchItem sideMenu={orderMenuObj}/>\n        </Route>\n        <Route path=\"/stock/edit\">\n          <EditStock sideMenu={stockMenuObj}/>\n        </Route>\n        <Route path=\"/stock/add\">\n          <ManageStock sideMenu={stockMenuObj}/>\n        </Route>\n        <Route path=\"/\">\n          <Home sideMenu={homeMenuObj}/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./reset.css\";\nimport \"./variable.css\";\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__sidemenu\":\"sidemenu-bar_screenPage__sidemenu__3Zh03\",\"screenPage__sidemenu_attr\":\"sidemenu-bar_screenPage__sidemenu_attr__3miwm\",\"screenPage__sidemenu_blue\":\"sidemenu-bar_screenPage__sidemenu_blue__2AAeZ\",\"screenPage__sidemenu_white\":\"sidemenu-bar_screenPage__sidemenu_white__3VIHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"request__section\":\"retailer-list-readonly_request__section__tzZZM\",\"request__name\":\"retailer-list-readonly_request__name__2DedK\",\"request__column\":\"retailer-list-readonly_request__column__2sUv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__searchResultTable\":\"result-table_screenPage__searchResultTable__3CFXe\",\"screenPage__searchResultTable_header\":\"result-table_screenPage__searchResultTable_header__1f3dP\",\"screenPage__searchResultTable_items\":\"result-table_screenPage__searchResultTable_items__jG3QO\",\"pagination\":\"result-table_pagination__3S-Cy\",\"pagination__pages\":\"result-table_pagination__pages__2kxSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__searchItem\":\"search-order_screenPage__searchItem__3xNYI\",\"screenPage__nextButton\":\"search-order_screenPage__nextButton__mFUor\",\"screenPage_title\":\"search-order_screenPage_title__3aNhk\",\"screenPage__searchBox\":\"search-order_screenPage__searchBox__NMDZA\",\"screenPage__section_column\":\"search-order_screenPage__section_column__HBctI\",\"screenPage__section_row\":\"search-order_screenPage__section_row__2iSjI\",\"screenPage__searchList\":\"search-order_screenPage__searchList__3wXjp\",\"screenPage__searchOption\":\"search-order_screenPage__searchOption__7dsc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenPage__content\":\"main-menu-content-sector_screenPage__content__1T8RG\",\"screenPage__sector_mainColumn\":\"main-menu-content-sector_screenPage__sector_mainColumn__17NEh\",\"screenPage__sectorBox_attr\":\"main-menu-content-sector_screenPage__sectorBox_attr__26sn0\",\"screenPage__sector_row\":\"main-menu-content-sector_screenPage__sector_row__ZSDXn\",\"screenPage__sector_column\":\"main-menu-content-sector_screenPage__sector_column__N_2oc\",\"screenPage__sectorBox_wide\":\"main-menu-content-sector_screenPage__sectorBox_wide__HA82-\",\"screenPage__sectorBox_tall\":\"main-menu-content-sector_screenPage__sectorBox_tall__btlyx\",\"screenPage__sectorBox_square\":\"main-menu-content-sector_screenPage__sectorBox_square__1Eq5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doughnut_setting\":\"doughnut-order-complete_doughnut_setting__1SIva\"};"],"sourceRoot":""}